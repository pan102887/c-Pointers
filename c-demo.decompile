
./c-demo:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 7f 00 00 	mov    0x7fd9(%rip),%rax        # 8fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 1a 7f 00 00    	push   0x7f1a(%rip)        # 8f40 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 1b 7f 00 00 	bnd jmp *0x7f1b(%rip)        # 8f48 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	push   $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	push   $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	push   $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmp 1020 <_init+0x20>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	push   $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmp 1020 <_init+0x20>
    111f:	90                   	nop
    1120:	f3 0f 1e fa          	endbr64 
    1124:	68 0f 00 00 00       	push   $0xf
    1129:	f2 e9 f1 fe ff ff    	bnd jmp 1020 <_init+0x20>
    112f:	90                   	nop
    1130:	f3 0f 1e fa          	endbr64 
    1134:	68 10 00 00 00       	push   $0x10
    1139:	f2 e9 e1 fe ff ff    	bnd jmp 1020 <_init+0x20>
    113f:	90                   	nop

Disassembly of section .plt.got:

0000000000001140 <__cxa_finalize@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 ad 7e 00 00 	bnd jmp *0x7ead(%rip)        # 8ff8 <__cxa_finalize@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001150 <free@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 f5 7d 00 00 	bnd jmp *0x7df5(%rip)        # 8f50 <free@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <putchar@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 ed 7d 00 00 	bnd jmp *0x7ded(%rip)        # 8f58 <putchar@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <strcpy@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 e5 7d 00 00 	bnd jmp *0x7de5(%rip)        # 8f60 <strcpy@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <puts@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 dd 7d 00 00 	bnd jmp *0x7ddd(%rip)        # 8f68 <puts@GLIBC_2.2.5>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <strlen@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 d5 7d 00 00 	bnd jmp *0x7dd5(%rip)        # 8f70 <strlen@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <__stack_chk_fail@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 cd 7d 00 00 	bnd jmp *0x7dcd(%rip)        # 8f78 <__stack_chk_fail@GLIBC_2.4>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <printf@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 c5 7d 00 00 	bnd jmp *0x7dc5(%rip)        # 8f80 <printf@GLIBC_2.2.5>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <__assert_fail@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 bd 7d 00 00 	bnd jmp *0x7dbd(%rip)        # 8f88 <__assert_fail@GLIBC_2.2.5>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <memcmp@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 b5 7d 00 00 	bnd jmp *0x7db5(%rip)        # 8f90 <memcmp@GLIBC_2.2.5>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <strcmp@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 ad 7d 00 00 	bnd jmp *0x7dad(%rip)        # 8f98 <strcmp@GLIBC_2.2.5>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <memcpy@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 a5 7d 00 00 	bnd jmp *0x7da5(%rip)        # 8fa0 <memcpy@GLIBC_2.14>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001200 <malloc@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 9d 7d 00 00 	bnd jmp *0x7d9d(%rip)        # 8fa8 <malloc@GLIBC_2.2.5>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <realloc@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 95 7d 00 00 	bnd jmp *0x7d95(%rip)        # 8fb0 <realloc@GLIBC_2.2.5>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001220 <__printf_chk@plt>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	f2 ff 25 8d 7d 00 00 	bnd jmp *0x7d8d(%rip)        # 8fb8 <__printf_chk@GLIBC_2.3.4>
    122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001230 <strcat@plt>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	f2 ff 25 85 7d 00 00 	bnd jmp *0x7d85(%rip)        # 8fc0 <strcat@GLIBC_2.2.5>
    123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001240 <exit@plt>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	f2 ff 25 7d 7d 00 00 	bnd jmp *0x7d7d(%rip)        # 8fc8 <exit@GLIBC_2.2.5>
    124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001250 <fwrite@plt>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	f2 ff 25 75 7d 00 00 	bnd jmp *0x7d75(%rip)        # 8fd0 <fwrite@GLIBC_2.2.5>
    125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001260 <_start>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	31 ed                	xor    %ebp,%ebp
    1266:	49 89 d1             	mov    %rdx,%r9
    1269:	5e                   	pop    %rsi
    126a:	48 89 e2             	mov    %rsp,%rdx
    126d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1271:	50                   	push   %rax
    1272:	54                   	push   %rsp
    1273:	45 31 c0             	xor    %r8d,%r8d
    1276:	31 c9                	xor    %ecx,%ecx
    1278:	48 8d 3d 25 01 00 00 	lea    0x125(%rip),%rdi        # 13a4 <main>
    127f:	ff 15 53 7d 00 00    	call   *0x7d53(%rip)        # 8fd8 <__libc_start_main@GLIBC_2.34>
    1285:	f4                   	hlt    
    1286:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    128d:	00 00 00 

0000000000001290 <deregister_tm_clones>:
    1290:	48 8d 3d f9 7d 00 00 	lea    0x7df9(%rip),%rdi        # 9090 <__TMC_END__>
    1297:	48 8d 05 f2 7d 00 00 	lea    0x7df2(%rip),%rax        # 9090 <__TMC_END__>
    129e:	48 39 f8             	cmp    %rdi,%rax
    12a1:	74 15                	je     12b8 <deregister_tm_clones+0x28>
    12a3:	48 8b 05 36 7d 00 00 	mov    0x7d36(%rip),%rax        # 8fe0 <_ITM_deregisterTMCloneTable@Base>
    12aa:	48 85 c0             	test   %rax,%rax
    12ad:	74 09                	je     12b8 <deregister_tm_clones+0x28>
    12af:	ff e0                	jmp    *%rax
    12b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12b8:	c3                   	ret    
    12b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012c0 <register_tm_clones>:
    12c0:	48 8d 3d c9 7d 00 00 	lea    0x7dc9(%rip),%rdi        # 9090 <__TMC_END__>
    12c7:	48 8d 35 c2 7d 00 00 	lea    0x7dc2(%rip),%rsi        # 9090 <__TMC_END__>
    12ce:	48 29 fe             	sub    %rdi,%rsi
    12d1:	48 89 f0             	mov    %rsi,%rax
    12d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    12d8:	48 c1 f8 03          	sar    $0x3,%rax
    12dc:	48 01 c6             	add    %rax,%rsi
    12df:	48 d1 fe             	sar    %rsi
    12e2:	74 14                	je     12f8 <register_tm_clones+0x38>
    12e4:	48 8b 05 05 7d 00 00 	mov    0x7d05(%rip),%rax        # 8ff0 <_ITM_registerTMCloneTable@Base>
    12eb:	48 85 c0             	test   %rax,%rax
    12ee:	74 08                	je     12f8 <register_tm_clones+0x38>
    12f0:	ff e0                	jmp    *%rax
    12f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    12f8:	c3                   	ret    
    12f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001300 <__do_global_dtors_aux>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	80 3d 9d 7d 00 00 00 	cmpb   $0x0,0x7d9d(%rip)        # 90a8 <completed.0>
    130b:	75 2b                	jne    1338 <__do_global_dtors_aux+0x38>
    130d:	55                   	push   %rbp
    130e:	48 83 3d e2 7c 00 00 	cmpq   $0x0,0x7ce2(%rip)        # 8ff8 <__cxa_finalize@GLIBC_2.2.5>
    1315:	00 
    1316:	48 89 e5             	mov    %rsp,%rbp
    1319:	74 0c                	je     1327 <__do_global_dtors_aux+0x27>
    131b:	48 8b 3d e6 7c 00 00 	mov    0x7ce6(%rip),%rdi        # 9008 <__dso_handle>
    1322:	e8 19 fe ff ff       	call   1140 <__cxa_finalize@plt>
    1327:	e8 64 ff ff ff       	call   1290 <deregister_tm_clones>
    132c:	c6 05 75 7d 00 00 01 	movb   $0x1,0x7d75(%rip)        # 90a8 <completed.0>
    1333:	5d                   	pop    %rbp
    1334:	c3                   	ret    
    1335:	0f 1f 00             	nopl   (%rax)
    1338:	c3                   	ret    
    1339:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001340 <frame_dummy>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	e9 77 ff ff ff       	jmp    12c0 <register_tm_clones>

0000000000001349 <test>:
    1349:	f3 0f 1e fa          	endbr64 
    134d:	55                   	push   %rbp
    134e:	48 89 e5             	mov    %rsp,%rbp
    1351:	e8 28 03 00 00       	call   167e <chapt_7_practice_run>
    1356:	b8 00 00 00 00       	mov    $0x0,%eax
    135b:	e8 2d 09 00 00       	call   1c8d <chapt_8_demo_run>
    1360:	e8 1a 15 00 00       	call   287f <chapt_8_practice_run>
    1365:	b8 00 00 00 00       	mov    $0x0,%eax
    136a:	e8 63 1f 00 00       	call   32d2 <chapt_9_demo_run>
    136f:	b8 00 00 00 00       	mov    $0x0,%eax
    1374:	e8 ac 1b 00 00       	call   2f25 <eight_queens_test>
    1379:	b8 00 00 00 00       	mov    $0x0,%eax
    137e:	e8 c8 2c 00 00       	call   404b <kmp_test>
    1383:	e8 09 33 00 00       	call   4691 <chapt_10_demo_run>
    1388:	b8 00 00 00 00       	mov    $0x0,%eax
    138d:	e8 27 34 00 00       	call   47b9 <chapt_11_demo_run>
    1392:	e8 01 3b 00 00       	call   4e98 <chapt_12_demo_test>
    1397:	e8 e5 3c 00 00       	call   5081 <chapt_13_demo_run>
    139c:	e8 90 41 00 00       	call   5531 <chapt_14_demo_run>
    13a1:	90                   	nop
    13a2:	5d                   	pop    %rbp
    13a3:	c3                   	ret    

00000000000013a4 <main>:
    13a4:	f3 0f 1e fa          	endbr64 
    13a8:	55                   	push   %rbp
    13a9:	48 89 e5             	mov    %rsp,%rbp
    13ac:	48 83 ec 10          	sub    $0x10,%rsp
    13b0:	89 7d fc             	mov    %edi,-0x4(%rbp)
    13b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    13b7:	b8 00 00 00 00       	mov    $0x0,%eax
    13bc:	e8 88 ff ff ff       	call   1349 <test>
    13c1:	b8 00 00 00 00       	mov    $0x0,%eax
    13c6:	c9                   	leave  
    13c7:	c3                   	ret    

00000000000013c8 <hermite>:
    13c8:	f3 0f 1e fa          	endbr64 
    13cc:	55                   	push   %rbp
    13cd:	48 89 e5             	mov    %rsp,%rbp
    13d0:	41 54                	push   %r12
    13d2:	53                   	push   %rbx
    13d3:	48 83 ec 10          	sub    $0x10,%rsp
    13d7:	89 7d ec             	mov    %edi,-0x14(%rbp)
    13da:	89 75 e8             	mov    %esi,-0x18(%rbp)
    13dd:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    13e1:	7f 07                	jg     13ea <hermite+0x22>
    13e3:	b8 01 00 00 00       	mov    $0x1,%eax
    13e8:	eb 57                	jmp    1441 <hermite+0x79>
    13ea:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    13ee:	7e 0d                	jle    13fd <hermite+0x35>
    13f0:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
    13f4:	7f 07                	jg     13fd <hermite+0x35>
    13f6:	8b 45 e8             	mov    -0x18(%rbp),%eax
    13f9:	01 c0                	add    %eax,%eax
    13fb:	eb 44                	jmp    1441 <hermite+0x79>
    13fd:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
    1401:	7e 3e                	jle    1441 <hermite+0x79>
    1403:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1406:	8d 50 ff             	lea    -0x1(%rax),%edx
    1409:	8b 45 e8             	mov    -0x18(%rbp),%eax
    140c:	89 c6                	mov    %eax,%esi
    140e:	89 d7                	mov    %edx,%edi
    1410:	e8 b3 ff ff ff       	call   13c8 <hermite>
    1415:	0f af 45 e8          	imul   -0x18(%rbp),%eax
    1419:	89 c3                	mov    %eax,%ebx
    141b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    141e:	44 8d 60 ff          	lea    -0x1(%rax),%r12d
    1422:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1425:	8d 50 fe             	lea    -0x2(%rax),%edx
    1428:	8b 45 e8             	mov    -0x18(%rbp),%eax
    142b:	89 c6                	mov    %eax,%esi
    142d:	89 d7                	mov    %edx,%edi
    142f:	e8 94 ff ff ff       	call   13c8 <hermite>
    1434:	41 0f af c4          	imul   %r12d,%eax
    1438:	29 c3                	sub    %eax,%ebx
    143a:	89 da                	mov    %ebx,%edx
    143c:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
    143f:	eb 00                	jmp    1441 <hermite+0x79>
    1441:	48 83 c4 10          	add    $0x10,%rsp
    1445:	5b                   	pop    %rbx
    1446:	41 5c                	pop    %r12
    1448:	5d                   	pop    %rbp
    1449:	c3                   	ret    

000000000000144a <my_gcd>:
    144a:	f3 0f 1e fa          	endbr64 
    144e:	55                   	push   %rbp
    144f:	48 89 e5             	mov    %rsp,%rbp
    1452:	48 83 ec 20          	sub    $0x20,%rsp
    1456:	89 7d ec             	mov    %edi,-0x14(%rbp)
    1459:	89 75 e8             	mov    %esi,-0x18(%rbp)
    145c:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    1460:	7e 06                	jle    1468 <my_gcd+0x1e>
    1462:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
    1466:	7f 07                	jg     146f <my_gcd+0x25>
    1468:	b8 00 00 00 00       	mov    $0x0,%eax
    146d:	eb 3e                	jmp    14ad <my_gcd+0x63>
    146f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1472:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    1475:	7d 12                	jge    1489 <my_gcd+0x3f>
    1477:	8b 45 ec             	mov    -0x14(%rbp),%eax
    147a:	89 45 f8             	mov    %eax,-0x8(%rbp)
    147d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1480:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1483:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1486:	89 45 e8             	mov    %eax,-0x18(%rbp)
    1489:	8b 45 ec             	mov    -0x14(%rbp),%eax
    148c:	99                   	cltd   
    148d:	f7 7d e8             	idivl  -0x18(%rbp)
    1490:	89 55 fc             	mov    %edx,-0x4(%rbp)
    1493:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    1497:	75 05                	jne    149e <my_gcd+0x54>
    1499:	8b 45 e8             	mov    -0x18(%rbp),%eax
    149c:	eb 0f                	jmp    14ad <my_gcd+0x63>
    149e:	8b 55 fc             	mov    -0x4(%rbp),%edx
    14a1:	8b 45 e8             	mov    -0x18(%rbp),%eax
    14a4:	89 d6                	mov    %edx,%esi
    14a6:	89 c7                	mov    %eax,%edi
    14a8:	e8 9d ff ff ff       	call   144a <my_gcd>
    14ad:	c9                   	leave  
    14ae:	c3                   	ret    

00000000000014af <ascii_to_integer>:
    14af:	f3 0f 1e fa          	endbr64 
    14b3:	55                   	push   %rbp
    14b4:	48 89 e5             	mov    %rsp,%rbp
    14b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    14bb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    14c2:	eb 19                	jmp    14dd <ascii_to_integer+0x2e>
    14c4:	8b 55 fc             	mov    -0x4(%rbp),%edx
    14c7:	89 d0                	mov    %edx,%eax
    14c9:	c1 e0 02             	shl    $0x2,%eax
    14cc:	01 d0                	add    %edx,%eax
    14ce:	01 c0                	add    %eax,%eax
    14d0:	89 45 fc             	mov    %eax,-0x4(%rbp)
    14d3:	0f be 45 fb          	movsbl -0x5(%rbp),%eax
    14d7:	83 e8 30             	sub    $0x30,%eax
    14da:	01 45 fc             	add    %eax,-0x4(%rbp)
    14dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    14e1:	48 8d 50 01          	lea    0x1(%rax),%rdx
    14e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    14e9:	0f b6 00             	movzbl (%rax),%eax
    14ec:	88 45 fb             	mov    %al,-0x5(%rbp)
    14ef:	80 7d fb 00          	cmpb   $0x0,-0x5(%rbp)
    14f3:	75 cf                	jne    14c4 <ascii_to_integer+0x15>
    14f5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    14f8:	5d                   	pop    %rbp
    14f9:	c3                   	ret    

00000000000014fa <max_list>:
    14fa:	f3 0f 1e fa          	endbr64 
    14fe:	55                   	push   %rbp
    14ff:	48 89 e5             	mov    %rsp,%rbp
    1502:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    1509:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
    150f:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    1516:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    151d:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    1524:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    152b:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    1532:	84 c0                	test   %al,%al
    1534:	74 20                	je     1556 <max_list+0x5c>
    1536:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    153a:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    153e:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    1542:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    1546:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    154a:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    154e:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    1552:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    1556:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    155d:	00 00 
    155f:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    1566:	31 c0                	xor    %eax,%eax
    1568:	c7 85 30 ff ff ff 08 	movl   $0x8,-0xd0(%rbp)
    156f:	00 00 00 
    1572:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
    1579:	00 00 00 
    157c:	48 8d 45 10          	lea    0x10(%rbp),%rax
    1580:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    1587:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    158e:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    1595:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    159b:	83 f8 2f             	cmp    $0x2f,%eax
    159e:	77 23                	ja     15c3 <max_list+0xc9>
    15a0:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    15a7:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    15ad:	89 d2                	mov    %edx,%edx
    15af:	48 01 d0             	add    %rdx,%rax
    15b2:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    15b8:	83 c2 08             	add    $0x8,%edx
    15bb:	89 95 30 ff ff ff    	mov    %edx,-0xd0(%rbp)
    15c1:	eb 12                	jmp    15d5 <max_list+0xdb>
    15c3:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    15ca:	48 8d 50 08          	lea    0x8(%rax),%rdx
    15ce:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    15d5:	8b 00                	mov    (%rax),%eax
    15d7:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    15dd:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%rbp)
    15e4:	00 00 00 
    15e7:	eb 5f                	jmp    1648 <max_list+0x14e>
    15e9:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    15ef:	83 f8 2f             	cmp    $0x2f,%eax
    15f2:	77 23                	ja     1617 <max_list+0x11d>
    15f4:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    15fb:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    1601:	89 d2                	mov    %edx,%edx
    1603:	48 01 d0             	add    %rdx,%rax
    1606:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    160c:	83 c2 08             	add    $0x8,%edx
    160f:	89 95 30 ff ff ff    	mov    %edx,-0xd0(%rbp)
    1615:	eb 12                	jmp    1629 <max_list+0x12f>
    1617:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    161e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    1622:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    1629:	8b 00                	mov    (%rax),%eax
    162b:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
    1631:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    1637:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    163d:	39 c2                	cmp    %eax,%edx
    163f:	0f 4d c2             	cmovge %edx,%eax
    1642:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    1648:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
    164e:	8d 50 01             	lea    0x1(%rax),%edx
    1651:	89 95 28 ff ff ff    	mov    %edx,-0xd8(%rbp)
    1657:	39 85 1c ff ff ff    	cmp    %eax,-0xe4(%rbp)
    165d:	7f 8a                	jg     15e9 <max_list+0xef>
    165f:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    1665:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    166c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1673:	00 00 
    1675:	74 05                	je     167c <max_list+0x182>
    1677:	e8 24 fb ff ff       	call   11a0 <__stack_chk_fail@plt>
    167c:	c9                   	leave  
    167d:	c3                   	ret    

000000000000167e <chapt_7_practice_run>:
    167e:	f3 0f 1e fa          	endbr64 
    1682:	55                   	push   %rbp
    1683:	48 89 e5             	mov    %rsp,%rbp
    1686:	48 83 ec 10          	sub    $0x10,%rsp
    168a:	48 8b 05 7f 79 00 00 	mov    0x797f(%rip),%rax        # 9010 <memory_boundary_alignment>
    1691:	48 89 c7             	mov    %rax,%rdi
    1694:	e8 ef 1c 00 00       	call   3388 <print_dividing_line>
    1699:	be 02 00 00 00       	mov    $0x2,%esi
    169e:	bf 03 00 00 00       	mov    $0x3,%edi
    16a3:	e8 20 fd ff ff       	call   13c8 <hermite>
    16a8:	89 c6                	mov    %eax,%esi
    16aa:	48 8d 05 6f 49 00 00 	lea    0x496f(%rip),%rax        # 6020 <_IO_stdin_used+0x20>
    16b1:	48 89 c7             	mov    %rax,%rdi
    16b4:	b8 00 00 00 00       	mov    $0x0,%eax
    16b9:	e8 f2 fa ff ff       	call   11b0 <printf@plt>
    16be:	be 03 00 00 00       	mov    $0x3,%esi
    16c3:	bf 06 00 00 00       	mov    $0x6,%edi
    16c8:	e8 7d fd ff ff       	call   144a <my_gcd>
    16cd:	89 c6                	mov    %eax,%esi
    16cf:	48 8d 05 72 49 00 00 	lea    0x4972(%rip),%rax        # 6048 <_IO_stdin_used+0x48>
    16d6:	48 89 c7             	mov    %rax,%rdi
    16d9:	b8 00 00 00 00       	mov    $0x0,%eax
    16de:	e8 cd fa ff ff       	call   11b0 <printf@plt>
    16e3:	be 04 00 00 00       	mov    $0x4,%esi
    16e8:	bf 06 00 00 00       	mov    $0x6,%edi
    16ed:	e8 58 fd ff ff       	call   144a <my_gcd>
    16f2:	89 c6                	mov    %eax,%esi
    16f4:	48 8d 05 75 49 00 00 	lea    0x4975(%rip),%rax        # 6070 <_IO_stdin_used+0x70>
    16fb:	48 89 c7             	mov    %rax,%rdi
    16fe:	b8 00 00 00 00       	mov    $0x0,%eax
    1703:	e8 a8 fa ff ff       	call   11b0 <printf@plt>
    1708:	48 8d 05 87 49 00 00 	lea    0x4987(%rip),%rax        # 6096 <_IO_stdin_used+0x96>
    170f:	48 89 c7             	mov    %rax,%rdi
    1712:	e8 98 fd ff ff       	call   14af <ascii_to_integer>
    1717:	89 c6                	mov    %eax,%esi
    1719:	48 8d 05 80 49 00 00 	lea    0x4980(%rip),%rax        # 60a0 <_IO_stdin_used+0xa0>
    1720:	48 89 c7             	mov    %rax,%rdi
    1723:	b8 00 00 00 00       	mov    $0x0,%eax
    1728:	e8 83 fa ff ff       	call   11b0 <printf@plt>
    172d:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    1733:	b9 05 00 00 00       	mov    $0x5,%ecx
    1738:	ba 02 00 00 00       	mov    $0x2,%edx
    173d:	be 03 00 00 00       	mov    $0x3,%esi
    1742:	bf 04 00 00 00       	mov    $0x4,%edi
    1747:	b8 00 00 00 00       	mov    $0x0,%eax
    174c:	e8 a9 fd ff ff       	call   14fa <max_list>
    1751:	89 c6                	mov    %eax,%esi
    1753:	48 8d 05 7e 49 00 00 	lea    0x497e(%rip),%rax        # 60d8 <_IO_stdin_used+0xd8>
    175a:	48 89 c7             	mov    %rax,%rdi
    175d:	b8 00 00 00 00       	mov    $0x0,%eax
    1762:	e8 49 fa ff ff       	call   11b0 <printf@plt>
    1767:	48 8d 05 a2 49 00 00 	lea    0x49a2(%rip),%rax        # 6110 <_IO_stdin_used+0x110>
    176e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1776:	ba 0a 00 00 00       	mov    $0xa,%edx
    177b:	48 89 c6             	mov    %rax,%rsi
    177e:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    1783:	b8 00 00 00 00       	mov    $0x0,%eax
    1788:	e8 93 fa ff ff       	call   1220 <__printf_chk@plt>
    178d:	48 8d 05 a4 49 00 00 	lea    0x49a4(%rip),%rax        # 6138 <_IO_stdin_used+0x138>
    1794:	48 89 c7             	mov    %rax,%rdi
    1797:	e8 ec 1b 00 00       	call   3388 <print_dividing_line>
    179c:	90                   	nop
    179d:	c9                   	leave  
    179e:	c3                   	ret    

000000000000179f <lookup_keyword>:
    179f:	f3 0f 1e fa          	endbr64 
    17a3:	55                   	push   %rbp
    17a4:	48 89 e5             	mov    %rsp,%rbp
    17a7:	48 83 ec 30          	sub    $0x30,%rsp
    17ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    17af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    17b3:	89 55 dc             	mov    %edx,-0x24(%rbp)
    17b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    17be:	eb 2d                	jmp    17ed <lookup_keyword+0x4e>
    17c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17c4:	48 8b 10             	mov    (%rax),%rdx
    17c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17cb:	48 89 d6             	mov    %rdx,%rsi
    17ce:	48 89 c7             	mov    %rax,%rdi
    17d1:	e8 0a fa ff ff       	call   11e0 <strcmp@plt>
    17d6:	85 c0                	test   %eax,%eax
    17d8:	75 0e                	jne    17e8 <lookup_keyword+0x49>
    17da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17de:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    17e2:	48 c1 f8 03          	sar    $0x3,%rax
    17e6:	eb 24                	jmp    180c <lookup_keyword+0x6d>
    17e8:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    17ed:	8b 45 dc             	mov    -0x24(%rbp),%eax
    17f0:	48 98                	cltq   
    17f2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    17f9:	00 
    17fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17fe:	48 01 d0             	add    %rdx,%rax
    1801:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    1805:	72 b9                	jb     17c0 <lookup_keyword+0x21>
    1807:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    180c:	c9                   	leave  
    180d:	c3                   	ret    

000000000000180e <lookup_keyword_without_length>:
    180e:	f3 0f 1e fa          	endbr64 
    1812:	55                   	push   %rbp
    1813:	48 89 e5             	mov    %rsp,%rbp
    1816:	48 83 ec 20          	sub    $0x20,%rsp
    181a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    181e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1822:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1826:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    182a:	eb 2d                	jmp    1859 <lookup_keyword_without_length+0x4b>
    182c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1830:	48 8b 10             	mov    (%rax),%rdx
    1833:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1837:	48 89 d6             	mov    %rdx,%rsi
    183a:	48 89 c7             	mov    %rax,%rdi
    183d:	e8 9e f9 ff ff       	call   11e0 <strcmp@plt>
    1842:	85 c0                	test   %eax,%eax
    1844:	75 0e                	jne    1854 <lookup_keyword_without_length+0x46>
    1846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    184a:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    184e:	48 c1 f8 03          	sar    $0x3,%rax
    1852:	eb 16                	jmp    186a <lookup_keyword_without_length+0x5c>
    1854:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    1859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    185d:	48 8b 00             	mov    (%rax),%rax
    1860:	48 85 c0             	test   %rax,%rax
    1863:	75 c7                	jne    182c <lookup_keyword_without_length+0x1e>
    1865:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    186a:	c9                   	leave  
    186b:	c3                   	ret    

000000000000186c <array_demo>:
    186c:	f3 0f 1e fa          	endbr64 
    1870:	55                   	push   %rbp
    1871:	48 89 e5             	mov    %rsp,%rbp
    1874:	48 83 ec 30          	sub    $0x30,%rsp
    1878:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    187f:	00 00 
    1881:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1885:	31 c0                	xor    %eax,%eax
    1887:	bf 14 00 00 00       	mov    $0x14,%edi
    188c:	e8 6f f9 ff ff       	call   1200 <malloc@plt>
    1891:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1895:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    189c:	eb 19                	jmp    18b7 <array_demo+0x4b>
    189e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    18a1:	48 98                	cltq   
    18a3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    18aa:	00 
    18ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18af:	48 01 c2             	add    %rax,%rdx
    18b2:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    18b5:	89 02                	mov    %eax,(%rdx)
    18b7:	8b 45 d0             	mov    -0x30(%rbp),%eax
    18ba:	8d 50 01             	lea    0x1(%rax),%edx
    18bd:	89 55 d0             	mov    %edx,-0x30(%rbp)
    18c0:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    18c3:	83 7d d4 04          	cmpl   $0x4,-0x2c(%rbp)
    18c7:	7e d5                	jle    189e <array_demo+0x32>
    18c9:	c7 45 e0 04 00 00 00 	movl   $0x4,-0x20(%rbp)
    18d0:	c7 45 e4 03 00 00 00 	movl   $0x3,-0x1c(%rbp)
    18d7:	c7 45 e8 02 00 00 00 	movl   $0x2,-0x18(%rbp)
    18de:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
    18e5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    18ec:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    18f3:	eb 2c                	jmp    1921 <array_demo+0xb5>
    18f5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    18f8:	48 98                	cltq   
    18fa:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1901:	00 
    1902:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1906:	48 01 d0             	add    %rdx,%rax
    1909:	8b 00                	mov    (%rax),%eax
    190b:	89 c6                	mov    %eax,%esi
    190d:	48 8d 05 4c 48 00 00 	lea    0x484c(%rip),%rax        # 6160 <_IO_stdin_used+0x160>
    1914:	48 89 c7             	mov    %rax,%rdi
    1917:	b8 00 00 00 00       	mov    $0x0,%eax
    191c:	e8 8f f8 ff ff       	call   11b0 <printf@plt>
    1921:	8b 45 d0             	mov    -0x30(%rbp),%eax
    1924:	8d 50 01             	lea    0x1(%rax),%edx
    1927:	89 55 d0             	mov    %edx,-0x30(%rbp)
    192a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    192d:	83 7d d4 04          	cmpl   $0x4,-0x2c(%rbp)
    1931:	7e c2                	jle    18f5 <array_demo+0x89>
    1933:	bf 0a 00 00 00       	mov    $0xa,%edi
    1938:	e8 23 f8 ff ff       	call   1160 <putchar@plt>
    193d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    1941:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1945:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    194c:	eb 2c                	jmp    197a <array_demo+0x10e>
    194e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    1951:	48 98                	cltq   
    1953:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    195a:	00 
    195b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    195f:	48 01 d0             	add    %rdx,%rax
    1962:	8b 00                	mov    (%rax),%eax
    1964:	89 c6                	mov    %eax,%esi
    1966:	48 8d 05 f3 47 00 00 	lea    0x47f3(%rip),%rax        # 6160 <_IO_stdin_used+0x160>
    196d:	48 89 c7             	mov    %rax,%rdi
    1970:	b8 00 00 00 00       	mov    $0x0,%eax
    1975:	e8 36 f8 ff ff       	call   11b0 <printf@plt>
    197a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    197d:	8d 50 01             	lea    0x1(%rax),%edx
    1980:	89 55 d0             	mov    %edx,-0x30(%rbp)
    1983:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    1986:	83 7d d4 04          	cmpl   $0x4,-0x2c(%rbp)
    198a:	7e c2                	jle    194e <array_demo+0xe2>
    198c:	bf 0a 00 00 00       	mov    $0xa,%edi
    1991:	e8 ca f7 ff ff       	call   1160 <putchar@plt>
    1996:	90                   	nop
    1997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    199b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    19a2:	00 00 
    19a4:	74 05                	je     19ab <array_demo+0x13f>
    19a6:	e8 f5 f7 ff ff       	call   11a0 <__stack_chk_fail@plt>
    19ab:	c9                   	leave  
    19ac:	c3                   	ret    

00000000000019ad <func_1>:
    19ad:	f3 0f 1e fa          	endbr64 
    19b1:	55                   	push   %rbp
    19b2:	48 89 e5             	mov    %rsp,%rbp
    19b5:	48 83 ec 20          	sub    $0x20,%rsp
    19b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    19bd:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    19c0:	89 55 e0             	mov    %edx,-0x20(%rbp)
    19c3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    19ca:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    19d1:	eb 27                	jmp    19fa <func_1+0x4d>
    19d3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    19da:	eb 12                	jmp    19ee <func_1+0x41>
    19dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19e0:	8b 00                	mov    (%rax),%eax
    19e2:	01 45 f4             	add    %eax,-0xc(%rbp)
    19e5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    19e9:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
    19ee:	8b 45 fc             	mov    -0x4(%rbp),%eax
    19f1:	3b 45 e0             	cmp    -0x20(%rbp),%eax
    19f4:	7c e6                	jl     19dc <func_1+0x2f>
    19f6:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    19fa:	8b 45 f8             	mov    -0x8(%rbp),%eax
    19fd:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1a00:	7c d1                	jl     19d3 <func_1+0x26>
    1a02:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1a05:	89 c6                	mov    %eax,%esi
    1a07:	48 8d 05 56 47 00 00 	lea    0x4756(%rip),%rax        # 6164 <_IO_stdin_used+0x164>
    1a0e:	48 89 c7             	mov    %rax,%rdi
    1a11:	b8 00 00 00 00       	mov    $0x0,%eax
    1a16:	e8 95 f7 ff ff       	call   11b0 <printf@plt>
    1a1b:	90                   	nop
    1a1c:	c9                   	leave  
    1a1d:	c3                   	ret    

0000000000001a1e <func_2>:
    1a1e:	f3 0f 1e fa          	endbr64 
    1a22:	55                   	push   %rbp
    1a23:	48 89 e5             	mov    %rsp,%rbp
    1a26:	48 83 ec 20          	sub    $0x20,%rsp
    1a2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1a2e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1a35:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1a3c:	eb 40                	jmp    1a7e <func_2+0x60>
    1a3e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1a45:	eb 2d                	jmp    1a74 <func_2+0x56>
    1a47:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1a4a:	48 63 d0             	movslq %eax,%rdx
    1a4d:	48 89 d0             	mov    %rdx,%rax
    1a50:	48 c1 e0 02          	shl    $0x2,%rax
    1a54:	48 01 d0             	add    %rdx,%rax
    1a57:	48 c1 e0 03          	shl    $0x3,%rax
    1a5b:	48 89 c2             	mov    %rax,%rdx
    1a5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a62:	48 01 c2             	add    %rax,%rdx
    1a65:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1a68:	48 98                	cltq   
    1a6a:	8b 04 82             	mov    (%rdx,%rax,4),%eax
    1a6d:	01 45 f4             	add    %eax,-0xc(%rbp)
    1a70:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1a74:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
    1a78:	7e cd                	jle    1a47 <func_2+0x29>
    1a7a:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1a7e:	83 7d f8 02          	cmpl   $0x2,-0x8(%rbp)
    1a82:	7e ba                	jle    1a3e <func_2+0x20>
    1a84:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1a87:	89 c6                	mov    %eax,%esi
    1a89:	48 8d 05 d4 46 00 00 	lea    0x46d4(%rip),%rax        # 6164 <_IO_stdin_used+0x164>
    1a90:	48 89 c7             	mov    %rax,%rdi
    1a93:	b8 00 00 00 00       	mov    $0x0,%eax
    1a98:	e8 13 f7 ff ff       	call   11b0 <printf@plt>
    1a9d:	90                   	nop
    1a9e:	c9                   	leave  
    1a9f:	c3                   	ret    

0000000000001aa0 <average>:
    1aa0:	f3 0f 1e fa          	endbr64 
    1aa4:	55                   	push   %rbp
    1aa5:	48 89 e5             	mov    %rsp,%rbp
    1aa8:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    1aaf:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
    1ab5:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    1abc:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    1ac3:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    1aca:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    1ad1:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    1ad8:	84 c0                	test   %al,%al
    1ada:	74 20                	je     1afc <average+0x5c>
    1adc:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    1ae0:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    1ae4:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    1ae8:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    1aec:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    1af0:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    1af4:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    1af8:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    1afc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1b03:	00 00 
    1b05:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    1b0c:	31 c0                	xor    %eax,%eax
    1b0e:	c7 85 20 ff ff ff 00 	movl   $0x0,-0xe0(%rbp)
    1b15:	00 00 00 
    1b18:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1b1c:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
    1b23:	ff 
    1b24:	c7 85 30 ff ff ff 08 	movl   $0x8,-0xd0(%rbp)
    1b2b:	00 00 00 
    1b2e:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
    1b35:	00 00 00 
    1b38:	48 8d 45 10          	lea    0x10(%rbp),%rax
    1b3c:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    1b43:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    1b4a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    1b51:	e9 8b 00 00 00       	jmp    1be1 <average+0x141>
    1b56:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    1b5c:	83 f8 2f             	cmp    $0x2f,%eax
    1b5f:	77 23                	ja     1b84 <average+0xe4>
    1b61:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    1b68:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    1b6e:	89 d2                	mov    %edx,%edx
    1b70:	48 01 d0             	add    %rdx,%rax
    1b73:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    1b79:	83 c2 08             	add    $0x8,%edx
    1b7c:	89 95 30 ff ff ff    	mov    %edx,-0xd0(%rbp)
    1b82:	eb 12                	jmp    1b96 <average+0xf6>
    1b84:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    1b8b:	48 8d 50 08          	lea    0x8(%rax),%rdx
    1b8f:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    1b96:	8b 00                	mov    (%rax),%eax
    1b98:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    1b9e:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    1ba4:	89 c6                	mov    %eax,%esi
    1ba6:	48 8d 05 c0 45 00 00 	lea    0x45c0(%rip),%rax        # 616d <_IO_stdin_used+0x16d>
    1bad:	48 89 c7             	mov    %rax,%rdi
    1bb0:	b8 00 00 00 00       	mov    $0x0,%eax
    1bb5:	e8 f6 f5 ff ff       	call   11b0 <printf@plt>
    1bba:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1bbe:	f2 0f 2a 85 24 ff ff 	cvtsi2sdl -0xdc(%rbp),%xmm0
    1bc5:	ff 
    1bc6:	f2 0f 10 8d 28 ff ff 	movsd  -0xd8(%rbp),%xmm1
    1bcd:	ff 
    1bce:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1bd2:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
    1bd9:	ff 
    1bda:	83 85 20 ff ff ff 01 	addl   $0x1,-0xe0(%rbp)
    1be1:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
    1be7:	3b 85 1c ff ff ff    	cmp    -0xe4(%rbp),%eax
    1bed:	0f 8c 63 ff ff ff    	jl     1b56 <average+0xb6>
    1bf3:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1bf7:	f2 0f 2a 8d 1c ff ff 	cvtsi2sdl -0xe4(%rbp),%xmm1
    1bfe:	ff 
    1bff:	f2 0f 10 85 28 ff ff 	movsd  -0xd8(%rbp),%xmm0
    1c06:	ff 
    1c07:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    1c0b:	66 48 0f 7e c0       	movq   %xmm0,%rax
    1c10:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    1c17:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1c1e:	00 00 
    1c20:	74 05                	je     1c27 <average+0x187>
    1c22:	e8 79 f5 ff ff       	call   11a0 <__stack_chk_fail@plt>
    1c27:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1c2c:	c9                   	leave  
    1c2d:	c3                   	ret    

0000000000001c2e <test_average>:
    1c2e:	f3 0f 1e fa          	endbr64 
    1c32:	55                   	push   %rbp
    1c33:	48 89 e5             	mov    %rsp,%rbp
    1c36:	48 83 ec 10          	sub    $0x10,%rsp
    1c3a:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    1c40:	41 b8 05 00 00 00    	mov    $0x5,%r8d
    1c46:	b9 04 00 00 00       	mov    $0x4,%ecx
    1c4b:	ba 03 00 00 00       	mov    $0x3,%edx
    1c50:	be 02 00 00 00       	mov    $0x2,%esi
    1c55:	bf 05 00 00 00       	mov    $0x5,%edi
    1c5a:	b8 00 00 00 00       	mov    $0x0,%eax
    1c5f:	e8 3c fe ff ff       	call   1aa0 <average>
    1c64:	66 48 0f 7e c0       	movq   %xmm0,%rax
    1c69:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1c6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1c71:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1c76:	48 8d 05 f4 44 00 00 	lea    0x44f4(%rip),%rax        # 6171 <_IO_stdin_used+0x171>
    1c7d:	48 89 c7             	mov    %rax,%rdi
    1c80:	b8 01 00 00 00       	mov    $0x1,%eax
    1c85:	e8 26 f5 ff ff       	call   11b0 <printf@plt>
    1c8a:	90                   	nop
    1c8b:	c9                   	leave  
    1c8c:	c3                   	ret    

0000000000001c8d <chapt_8_demo_run>:
    1c8d:	f3 0f 1e fa          	endbr64 
    1c91:	55                   	push   %rbp
    1c92:	48 89 e5             	mov    %rsp,%rbp
    1c95:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    1c9c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1ca3:	00 00 
    1ca5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1ca9:	31 c0                	xor    %eax,%eax
    1cab:	48 8b 05 ae 73 00 00 	mov    0x73ae(%rip),%rax        # 9060 <memory_boundary_alignment>
    1cb2:	48 89 c7             	mov    %rax,%rdi
    1cb5:	e8 ce 16 00 00       	call   3388 <print_dividing_line>
    1cba:	e8 ad fb ff ff       	call   186c <array_demo>
    1cbf:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    1cc3:	b8 00 00 00 00       	mov    $0x0,%eax
    1cc8:	b9 0f 00 00 00       	mov    $0xf,%ecx
    1ccd:	48 89 d7             	mov    %rdx,%rdi
    1cd0:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    1cd3:	c7 45 80 01 00 00 00 	movl   $0x1,-0x80(%rbp)
    1cda:	c7 45 84 02 00 00 00 	movl   $0x2,-0x7c(%rbp)
    1ce1:	c7 45 88 03 00 00 00 	movl   $0x3,-0x78(%rbp)
    1ce8:	c7 45 8c 04 00 00 00 	movl   $0x4,-0x74(%rbp)
    1cef:	c7 45 90 05 00 00 00 	movl   $0x5,-0x70(%rbp)
    1cf6:	c7 45 94 06 00 00 00 	movl   $0x6,-0x6c(%rbp)
    1cfd:	c7 45 98 07 00 00 00 	movl   $0x7,-0x68(%rbp)
    1d04:	c7 45 9c 08 00 00 00 	movl   $0x8,-0x64(%rbp)
    1d0b:	c7 45 a0 09 00 00 00 	movl   $0x9,-0x60(%rbp)
    1d12:	c7 45 a8 09 00 00 00 	movl   $0x9,-0x58(%rbp)
    1d19:	c7 45 ac 08 00 00 00 	movl   $0x8,-0x54(%rbp)
    1d20:	c7 45 b0 07 00 00 00 	movl   $0x7,-0x50(%rbp)
    1d27:	c7 45 b4 06 00 00 00 	movl   $0x6,-0x4c(%rbp)
    1d2e:	c7 45 b8 05 00 00 00 	movl   $0x5,-0x48(%rbp)
    1d35:	c7 45 bc 04 00 00 00 	movl   $0x4,-0x44(%rbp)
    1d3c:	c7 45 c0 03 00 00 00 	movl   $0x3,-0x40(%rbp)
    1d43:	c7 45 c4 02 00 00 00 	movl   $0x2,-0x3c(%rbp)
    1d4a:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
    1d51:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
    1d58:	c7 45 d4 03 00 00 00 	movl   $0x3,-0x2c(%rbp)
    1d5f:	c7 45 d8 05 00 00 00 	movl   $0x5,-0x28(%rbp)
    1d66:	c7 45 dc 07 00 00 00 	movl   $0x7,-0x24(%rbp)
    1d6d:	c7 45 e0 09 00 00 00 	movl   $0x9,-0x20(%rbp)
    1d74:	c7 45 e4 02 00 00 00 	movl   $0x2,-0x1c(%rbp)
    1d7b:	c7 45 e8 04 00 00 00 	movl   $0x4,-0x18(%rbp)
    1d82:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%rbp)
    1d89:	c7 45 f0 08 00 00 00 	movl   $0x8,-0x10(%rbp)
    1d90:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    1d94:	ba 0a 00 00 00       	mov    $0xa,%edx
    1d99:	be 03 00 00 00       	mov    $0x3,%esi
    1d9e:	48 89 c7             	mov    %rax,%rdi
    1da1:	e8 07 fc ff ff       	call   19ad <func_1>
    1da6:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    1daa:	48 89 c7             	mov    %rax,%rdi
    1dad:	e8 6c fc ff ff       	call   1a1e <func_2>
    1db2:	ba 08 00 00 00       	mov    $0x8,%edx
    1db7:	48 8d 05 62 72 00 00 	lea    0x7262(%rip),%rax        # 9020 <keyword>
    1dbe:	48 89 c6             	mov    %rax,%rsi
    1dc1:	48 8d 05 92 43 00 00 	lea    0x4392(%rip),%rax        # 615a <_IO_stdin_used+0x15a>
    1dc8:	48 89 c7             	mov    %rax,%rdi
    1dcb:	e8 cf f9 ff ff       	call   179f <lookup_keyword>
    1dd0:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    1dd6:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    1ddc:	89 c6                	mov    %eax,%esi
    1dde:	48 8d 05 a7 43 00 00 	lea    0x43a7(%rip),%rax        # 618c <_IO_stdin_used+0x18c>
    1de5:	48 89 c7             	mov    %rax,%rdi
    1de8:	b8 00 00 00 00       	mov    $0x0,%eax
    1ded:	e8 be f3 ff ff       	call   11b0 <printf@plt>
    1df2:	48 8d 05 27 72 00 00 	lea    0x7227(%rip),%rax        # 9020 <keyword>
    1df9:	48 89 c6             	mov    %rax,%rsi
    1dfc:	48 8d 05 57 43 00 00 	lea    0x4357(%rip),%rax        # 615a <_IO_stdin_used+0x15a>
    1e03:	48 89 c7             	mov    %rax,%rdi
    1e06:	e8 03 fa ff ff       	call   180e <lookup_keyword_without_length>
    1e0b:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    1e11:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    1e17:	89 c6                	mov    %eax,%esi
    1e19:	48 8d 05 6c 43 00 00 	lea    0x436c(%rip),%rax        # 618c <_IO_stdin_used+0x18c>
    1e20:	48 89 c7             	mov    %rax,%rdi
    1e23:	b8 00 00 00 00       	mov    $0x0,%eax
    1e28:	e8 83 f3 ff ff       	call   11b0 <printf@plt>
    1e2d:	b8 00 00 00 00       	mov    $0x0,%eax
    1e32:	e8 f7 fd ff ff       	call   1c2e <test_average>
    1e37:	48 8d 05 55 43 00 00 	lea    0x4355(%rip),%rax        # 6193 <_IO_stdin_used+0x193>
    1e3e:	48 89 c7             	mov    %rax,%rdi
    1e41:	e8 42 15 00 00       	call   3388 <print_dividing_line>
    1e46:	90                   	nop
    1e47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1e4b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1e52:	00 00 
    1e54:	74 05                	je     1e5b <chapt_8_demo_run+0x1ce>
    1e56:	e8 45 f3 ff ff       	call   11a0 <__stack_chk_fail@plt>
    1e5b:	c9                   	leave  
    1e5c:	c3                   	ret    

0000000000001e5d <identity_matrix>:
    1e5d:	f3 0f 1e fa          	endbr64 
    1e61:	55                   	push   %rbp
    1e62:	48 89 e5             	mov    %rsp,%rbp
    1e65:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1e69:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1e6c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1e73:	eb 7e                	jmp    1ef3 <identity_matrix+0x96>
    1e75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1e7c:	eb 69                	jmp    1ee7 <identity_matrix+0x8a>
    1e7e:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1e81:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    1e84:	75 2f                	jne    1eb5 <identity_matrix+0x58>
    1e86:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1e89:	0f af 45 e4          	imul   -0x1c(%rbp),%eax
    1e8d:	48 63 d0             	movslq %eax,%rdx
    1e90:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1e93:	48 98                	cltq   
    1e95:	48 01 d0             	add    %rdx,%rax
    1e98:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1e9f:	00 
    1ea0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ea4:	48 01 d0             	add    %rdx,%rax
    1ea7:	8b 00                	mov    (%rax),%eax
    1ea9:	83 f8 01             	cmp    $0x1,%eax
    1eac:	74 35                	je     1ee3 <identity_matrix+0x86>
    1eae:	b8 00 00 00 00       	mov    $0x0,%eax
    1eb3:	eb 4f                	jmp    1f04 <identity_matrix+0xa7>
    1eb5:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1eb8:	0f af 45 e4          	imul   -0x1c(%rbp),%eax
    1ebc:	48 63 d0             	movslq %eax,%rdx
    1ebf:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1ec2:	48 98                	cltq   
    1ec4:	48 01 d0             	add    %rdx,%rax
    1ec7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1ece:	00 
    1ecf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ed3:	48 01 d0             	add    %rdx,%rax
    1ed6:	8b 00                	mov    (%rax),%eax
    1ed8:	85 c0                	test   %eax,%eax
    1eda:	74 07                	je     1ee3 <identity_matrix+0x86>
    1edc:	b8 00 00 00 00       	mov    $0x0,%eax
    1ee1:	eb 21                	jmp    1f04 <identity_matrix+0xa7>
    1ee3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1ee7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1eea:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1eed:	7c 8f                	jl     1e7e <identity_matrix+0x21>
    1eef:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1ef3:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1ef6:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1ef9:	0f 8c 76 ff ff ff    	jl     1e75 <identity_matrix+0x18>
    1eff:	b8 01 00 00 00       	mov    $0x1,%eax
    1f04:	5d                   	pop    %rbp
    1f05:	c3                   	ret    

0000000000001f06 <test_identity_matrix>:
    1f06:	f3 0f 1e fa          	endbr64 
    1f0a:	55                   	push   %rbp
    1f0b:	48 89 e5             	mov    %rsp,%rbp
    1f0e:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    1f12:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1f19:	00 00 
    1f1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1f1f:	31 c0                	xor    %eax,%eax
    1f21:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%rbp)
    1f28:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
    1f2f:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
    1f36:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    1f3d:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    1f44:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    1f4b:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    1f52:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
    1f59:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
    1f60:	c7 45 84 03 00 00 00 	movl   $0x3,-0x7c(%rbp)
    1f67:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    1f6b:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    1f6f:	8b 55 84             	mov    -0x7c(%rbp),%edx
    1f72:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    1f76:	89 d6                	mov    %edx,%esi
    1f78:	48 89 c7             	mov    %rax,%rdi
    1f7b:	e8 dd fe ff ff       	call   1e5d <identity_matrix>
    1f80:	89 45 88             	mov    %eax,-0x78(%rbp)
    1f83:	8b 45 88             	mov    -0x78(%rbp),%eax
    1f86:	89 c6                	mov    %eax,%esi
    1f88:	48 8d 05 11 42 00 00 	lea    0x4211(%rip),%rax        # 61a0 <_IO_stdin_used+0x1a0>
    1f8f:	48 89 c7             	mov    %rax,%rdi
    1f92:	b8 00 00 00 00       	mov    $0x0,%eax
    1f97:	e8 14 f2 ff ff       	call   11b0 <printf@plt>
    1f9c:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
    1fa3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    1faa:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    1fb1:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    1fb8:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
    1fbf:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    1fc6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    1fcd:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1fd4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1fdb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    1fdf:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    1fe3:	8b 55 84             	mov    -0x7c(%rbp),%edx
    1fe6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1fea:	89 d6                	mov    %edx,%esi
    1fec:	48 89 c7             	mov    %rax,%rdi
    1fef:	e8 69 fe ff ff       	call   1e5d <identity_matrix>
    1ff4:	89 45 8c             	mov    %eax,-0x74(%rbp)
    1ff7:	8b 45 8c             	mov    -0x74(%rbp),%eax
    1ffa:	89 c6                	mov    %eax,%esi
    1ffc:	48 8d 05 a9 41 00 00 	lea    0x41a9(%rip),%rax        # 61ac <_IO_stdin_used+0x1ac>
    2003:	48 89 c7             	mov    %rax,%rdi
    2006:	b8 00 00 00 00       	mov    $0x0,%eax
    200b:	e8 a0 f1 ff ff       	call   11b0 <printf@plt>
    2010:	90                   	nop
    2011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2015:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    201c:	00 00 
    201e:	74 05                	je     2025 <test_identity_matrix+0x11f>
    2020:	e8 7b f1 ff ff       	call   11a0 <__stack_chk_fail@plt>
    2025:	c9                   	leave  
    2026:	c3                   	ret    

0000000000002027 <matrix_multiply>:
    2027:	f3 0f 1e fa          	endbr64 
    202b:	55                   	push   %rbp
    202c:	48 89 e5             	mov    %rsp,%rbp
    202f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2033:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2037:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    203b:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    203e:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
    2042:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
    2046:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    204d:	e9 ae 00 00 00       	jmp    2100 <matrix_multiply+0xd9>
    2052:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2059:	e9 92 00 00 00       	jmp    20f0 <matrix_multiply+0xc9>
    205e:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    2065:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    206c:	eb 50                	jmp    20be <matrix_multiply+0x97>
    206e:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2071:	0f af 45 d0          	imul   -0x30(%rbp),%eax
    2075:	48 63 d0             	movslq %eax,%rdx
    2078:	8b 45 fc             	mov    -0x4(%rbp),%eax
    207b:	48 98                	cltq   
    207d:	48 01 d0             	add    %rdx,%rax
    2080:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2087:	00 
    2088:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    208c:	48 01 d0             	add    %rdx,%rax
    208f:	8b 10                	mov    (%rax),%edx
    2091:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2094:	0f af 45 cc          	imul   -0x34(%rbp),%eax
    2098:	48 63 c8             	movslq %eax,%rcx
    209b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    209e:	48 98                	cltq   
    20a0:	48 01 c8             	add    %rcx,%rax
    20a3:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    20aa:	00 
    20ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    20af:	48 01 c8             	add    %rcx,%rax
    20b2:	8b 00                	mov    (%rax),%eax
    20b4:	0f af c2             	imul   %edx,%eax
    20b7:	01 45 f8             	add    %eax,-0x8(%rbp)
    20ba:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    20be:	8b 45 fc             	mov    -0x4(%rbp),%eax
    20c1:	3b 45 d0             	cmp    -0x30(%rbp),%eax
    20c4:	7c a8                	jl     206e <matrix_multiply+0x47>
    20c6:	8b 45 f0             	mov    -0x10(%rbp),%eax
    20c9:	0f af 45 cc          	imul   -0x34(%rbp),%eax
    20cd:	48 63 d0             	movslq %eax,%rdx
    20d0:	8b 45 f4             	mov    -0xc(%rbp),%eax
    20d3:	48 98                	cltq   
    20d5:	48 01 d0             	add    %rdx,%rax
    20d8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    20df:	00 
    20e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    20e4:	48 01 c2             	add    %rax,%rdx
    20e7:	8b 45 f8             	mov    -0x8(%rbp),%eax
    20ea:	89 02                	mov    %eax,(%rdx)
    20ec:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    20f0:	8b 45 f4             	mov    -0xc(%rbp),%eax
    20f3:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    20f6:	0f 8c 62 ff ff ff    	jl     205e <matrix_multiply+0x37>
    20fc:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    2100:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2103:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    2106:	0f 8c 46 ff ff ff    	jl     2052 <matrix_multiply+0x2b>
    210c:	b8 01 00 00 00       	mov    $0x1,%eax
    2111:	5d                   	pop    %rbp
    2112:	c3                   	ret    

0000000000002113 <test_matrix_multiply>:
    2113:	f3 0f 1e fa          	endbr64 
    2117:	55                   	push   %rbp
    2118:	48 89 e5             	mov    %rsp,%rbp
    211b:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    211f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2126:	00 00 
    2128:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    212c:	31 c0                	xor    %eax,%eax
    212e:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
    2135:	c7 45 c4 02 00 00 00 	movl   $0x2,-0x3c(%rbp)
    213c:	c7 45 c8 03 00 00 00 	movl   $0x3,-0x38(%rbp)
    2143:	c7 45 cc 04 00 00 00 	movl   $0x4,-0x34(%rbp)
    214a:	c7 45 d0 05 00 00 00 	movl   $0x5,-0x30(%rbp)
    2151:	c7 45 d4 06 00 00 00 	movl   $0x6,-0x2c(%rbp)
    2158:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
    215f:	c7 45 e4 02 00 00 00 	movl   $0x2,-0x1c(%rbp)
    2166:	c7 45 e8 03 00 00 00 	movl   $0x3,-0x18(%rbp)
    216d:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%rbp)
    2174:	c7 45 f0 05 00 00 00 	movl   $0x5,-0x10(%rbp)
    217b:	c7 45 f4 06 00 00 00 	movl   $0x6,-0xc(%rbp)
    2182:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    2189:	00 
    218a:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    2191:	00 
    2192:	c7 45 8c 02 00 00 00 	movl   $0x2,-0x74(%rbp)
    2199:	c7 45 90 03 00 00 00 	movl   $0x3,-0x70(%rbp)
    21a0:	c7 45 94 02 00 00 00 	movl   $0x2,-0x6c(%rbp)
    21a7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    21ab:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    21af:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    21b3:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    21b7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    21bb:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    21bf:	44 8b 45 94          	mov    -0x6c(%rbp),%r8d
    21c3:	8b 7d 90             	mov    -0x70(%rbp),%edi
    21c6:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
    21c9:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    21cd:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    21d1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    21d5:	45 89 c1             	mov    %r8d,%r9d
    21d8:	41 89 f8             	mov    %edi,%r8d
    21db:	48 89 c7             	mov    %rax,%rdi
    21de:	e8 44 fe ff ff       	call   2027 <matrix_multiply>
    21e3:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
    21ea:	eb 5c                	jmp    2248 <test_matrix_multiply+0x135>
    21ec:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
    21f3:	eb 3d                	jmp    2232 <test_matrix_multiply+0x11f>
    21f5:	8b 45 84             	mov    -0x7c(%rbp),%eax
    21f8:	0f af 45 94          	imul   -0x6c(%rbp),%eax
    21fc:	48 63 d0             	movslq %eax,%rdx
    21ff:	8b 45 88             	mov    -0x78(%rbp),%eax
    2202:	48 98                	cltq   
    2204:	48 01 d0             	add    %rdx,%rax
    2207:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    220e:	00 
    220f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2213:	48 01 d0             	add    %rdx,%rax
    2216:	8b 00                	mov    (%rax),%eax
    2218:	89 c6                	mov    %eax,%esi
    221a:	48 8d 05 98 3f 00 00 	lea    0x3f98(%rip),%rax        # 61b9 <_IO_stdin_used+0x1b9>
    2221:	48 89 c7             	mov    %rax,%rdi
    2224:	b8 00 00 00 00       	mov    $0x0,%eax
    2229:	e8 82 ef ff ff       	call   11b0 <printf@plt>
    222e:	83 45 88 01          	addl   $0x1,-0x78(%rbp)
    2232:	8b 45 88             	mov    -0x78(%rbp),%eax
    2235:	3b 45 94             	cmp    -0x6c(%rbp),%eax
    2238:	7c bb                	jl     21f5 <test_matrix_multiply+0xe2>
    223a:	bf 0a 00 00 00       	mov    $0xa,%edi
    223f:	e8 1c ef ff ff       	call   1160 <putchar@plt>
    2244:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    2248:	8b 45 84             	mov    -0x7c(%rbp),%eax
    224b:	3b 45 8c             	cmp    -0x74(%rbp),%eax
    224e:	7c 9c                	jl     21ec <test_matrix_multiply+0xd9>
    2250:	90                   	nop
    2251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2255:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    225c:	00 00 
    225e:	74 05                	je     2265 <test_matrix_multiply+0x152>
    2260:	e8 3b ef ff ff       	call   11a0 <__stack_chk_fail@plt>
    2265:	c9                   	leave  
    2266:	c3                   	ret    

0000000000002267 <array_offset>:
    2267:	f3 0f 1e fa          	endbr64 
    226b:	55                   	push   %rbp
    226c:	48 89 e5             	mov    %rsp,%rbp
    226f:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
    2276:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
    227d:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    2284:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    228b:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    2292:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    2299:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    22a0:	84 c0                	test   %al,%al
    22a2:	74 20                	je     22c4 <array_offset+0x5d>
    22a4:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    22a8:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    22ac:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    22b0:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    22b4:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    22b8:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    22bc:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    22c0:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    22c4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    22cb:	00 00 
    22cd:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    22d4:	31 c0                	xor    %eax,%eax
    22d6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    22dd:	8b 00                	mov    (%rax),%eax
    22df:	48 98                	cltq   
    22e1:	48 c1 e0 02          	shl    $0x2,%rax
    22e5:	48 89 c7             	mov    %rax,%rdi
    22e8:	e8 13 ef ff ff       	call   1200 <malloc@plt>
    22ed:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    22f4:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
    22fb:	00 00 00 
    22fe:	eb 6c                	jmp    236c <array_offset+0x105>
    2300:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    2306:	01 c0                	add    %eax,%eax
    2308:	48 98                	cltq   
    230a:	48 83 c0 02          	add    $0x2,%rax
    230e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2315:	00 
    2316:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    231d:	48 01 d0             	add    %rdx,%rax
    2320:	8b 10                	mov    (%rax),%edx
    2322:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    2328:	01 c0                	add    %eax,%eax
    232a:	48 98                	cltq   
    232c:	48 83 c0 01          	add    $0x1,%rax
    2330:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    2337:	00 
    2338:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    233f:	48 01 c8             	add    %rcx,%rax
    2342:	8b 00                	mov    (%rax),%eax
    2344:	29 c2                	sub    %eax,%edx
    2346:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    234c:	48 98                	cltq   
    234e:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    2355:	00 
    2356:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    235d:	48 01 c8             	add    %rcx,%rax
    2360:	83 c2 01             	add    $0x1,%edx
    2363:	89 10                	mov    %edx,(%rax)
    2365:	83 85 10 ff ff ff 01 	addl   $0x1,-0xf0(%rbp)
    236c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    2373:	8b 00                	mov    (%rax),%eax
    2375:	39 85 10 ff ff ff    	cmp    %eax,-0xf0(%rbp)
    237b:	7c 83                	jl     2300 <array_offset+0x99>
    237d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    2384:	8b 00                	mov    (%rax),%eax
    2386:	48 98                	cltq   
    2388:	48 c1 e0 02          	shl    $0x2,%rax
    238c:	48 89 c7             	mov    %rax,%rdi
    238f:	e8 6c ee ff ff       	call   1200 <malloc@plt>
    2394:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    239b:	c7 85 30 ff ff ff 08 	movl   $0x8,-0xd0(%rbp)
    23a2:	00 00 00 
    23a5:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
    23ac:	00 00 00 
    23af:	48 8d 45 10          	lea    0x10(%rbp),%rax
    23b3:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    23ba:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    23c1:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    23c8:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%rbp)
    23cf:	00 00 00 
    23d2:	eb 66                	jmp    243a <array_offset+0x1d3>
    23d4:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    23da:	48 98                	cltq   
    23dc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    23e3:	00 
    23e4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    23eb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    23ef:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    23f5:	83 f8 2f             	cmp    $0x2f,%eax
    23f8:	77 23                	ja     241d <array_offset+0x1b6>
    23fa:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    2401:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    2407:	89 d2                	mov    %edx,%edx
    2409:	48 01 d0             	add    %rdx,%rax
    240c:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    2412:	83 c2 08             	add    $0x8,%edx
    2415:	89 95 30 ff ff ff    	mov    %edx,-0xd0(%rbp)
    241b:	eb 12                	jmp    242f <array_offset+0x1c8>
    241d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    2424:	48 8d 50 08          	lea    0x8(%rax),%rdx
    2428:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    242f:	8b 00                	mov    (%rax),%eax
    2431:	89 01                	mov    %eax,(%rcx)
    2433:	83 85 14 ff ff ff 01 	addl   $0x1,-0xec(%rbp)
    243a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    2441:	8b 00                	mov    (%rax),%eax
    2443:	39 85 14 ff ff ff    	cmp    %eax,-0xec(%rbp)
    2449:	7c 89                	jl     23d4 <array_offset+0x16d>
    244b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    2452:	8b 00                	mov    (%rax),%eax
    2454:	83 e8 01             	sub    $0x1,%eax
    2457:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
    245d:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    2463:	48 98                	cltq   
    2465:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    246c:	00 
    246d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    2474:	48 01 d0             	add    %rdx,%rax
    2477:	8b 10                	mov    (%rax),%edx
    2479:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    247f:	01 c0                	add    %eax,%eax
    2481:	48 98                	cltq   
    2483:	48 83 c0 01          	add    $0x1,%rax
    2487:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    248e:	00 
    248f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    2496:	48 01 c8             	add    %rcx,%rax
    2499:	8b 00                	mov    (%rax),%eax
    249b:	29 c2                	sub    %eax,%edx
    249d:	89 95 18 ff ff ff    	mov    %edx,-0xe8(%rbp)
    24a3:	c7 85 1c ff ff ff 01 	movl   $0x1,-0xe4(%rbp)
    24aa:	00 00 00 
    24ad:	83 ad 14 ff ff ff 01 	subl   $0x1,-0xec(%rbp)
    24b4:	e9 85 00 00 00       	jmp    253e <array_offset+0x2d7>
    24b9:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    24bf:	48 98                	cltq   
    24c1:	48 83 c0 01          	add    $0x1,%rax
    24c5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    24cc:	00 
    24cd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    24d4:	48 01 d0             	add    %rdx,%rax
    24d7:	8b 00                	mov    (%rax),%eax
    24d9:	8b 95 1c ff ff ff    	mov    -0xe4(%rbp),%edx
    24df:	0f af c2             	imul   %edx,%eax
    24e2:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
    24e8:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    24ee:	48 98                	cltq   
    24f0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    24f7:	00 
    24f8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    24ff:	48 01 d0             	add    %rdx,%rax
    2502:	8b 10                	mov    (%rax),%edx
    2504:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    250a:	01 c0                	add    %eax,%eax
    250c:	48 98                	cltq   
    250e:	48 83 c0 01          	add    $0x1,%rax
    2512:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    2519:	00 
    251a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    2521:	48 01 c8             	add    %rcx,%rax
    2524:	8b 00                	mov    (%rax),%eax
    2526:	29 c2                	sub    %eax,%edx
    2528:	89 d0                	mov    %edx,%eax
    252a:	0f af 85 1c ff ff ff 	imul   -0xe4(%rbp),%eax
    2531:	01 85 18 ff ff ff    	add    %eax,-0xe8(%rbp)
    2537:	83 ad 14 ff ff ff 01 	subl   $0x1,-0xec(%rbp)
    253e:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%rbp)
    2545:	0f 89 6e ff ff ff    	jns    24b9 <array_offset+0x252>
    254b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    2552:	48 89 c7             	mov    %rax,%rdi
    2555:	e8 f6 eb ff ff       	call   1150 <free@plt>
    255a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    2561:	48 89 c7             	mov    %rax,%rdi
    2564:	e8 e7 eb ff ff       	call   1150 <free@plt>
    2569:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    256f:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    2576:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    257d:	00 00 
    257f:	74 05                	je     2586 <array_offset+0x31f>
    2581:	e8 1a ec ff ff       	call   11a0 <__stack_chk_fail@plt>
    2586:	c9                   	leave  
    2587:	c3                   	ret    

0000000000002588 <test_array_offset>:
    2588:	f3 0f 1e fa          	endbr64 
    258c:	55                   	push   %rbp
    258d:	48 89 e5             	mov    %rsp,%rbp
    2590:	48 83 ec 50          	sub    $0x50,%rsp
    2594:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    259b:	00 00 
    259d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    25a1:	31 c0                	xor    %eax,%eax
    25a3:	c7 45 d0 03 00 00 00 	movl   $0x3,-0x30(%rbp)
    25aa:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%rbp)
    25b1:	c7 45 d8 06 00 00 00 	movl   $0x6,-0x28(%rbp)
    25b8:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    25bf:	c7 45 e0 05 00 00 00 	movl   $0x5,-0x20(%rbp)
    25c6:	c7 45 e4 fd ff ff ff 	movl   $0xfffffffd,-0x1c(%rbp)
    25cd:	c7 45 e8 03 00 00 00 	movl   $0x3,-0x18(%rbp)
    25d4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    25d8:	b9 fd ff ff ff       	mov    $0xfffffffd,%ecx
    25dd:	ba 01 00 00 00       	mov    $0x1,%edx
    25e2:	be 04 00 00 00       	mov    $0x4,%esi
    25e7:	48 89 c7             	mov    %rax,%rdi
    25ea:	b8 00 00 00 00       	mov    $0x0,%eax
    25ef:	e8 73 fc ff ff       	call   2267 <array_offset>
    25f4:	89 45 b8             	mov    %eax,-0x48(%rbp)
    25f7:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    25fb:	74 45                	je     2642 <test_array_offset+0xba>
    25fd:	8b 45 b8             	mov    -0x48(%rbp),%eax
    2600:	89 c6                	mov    %eax,%esi
    2602:	48 8d 05 b4 3b 00 00 	lea    0x3bb4(%rip),%rax        # 61bd <_IO_stdin_used+0x1bd>
    2609:	48 89 c7             	mov    %rax,%rdi
    260c:	b8 00 00 00 00       	mov    $0x0,%eax
    2611:	e8 9a eb ff ff       	call   11b0 <printf@plt>
    2616:	85 c0                	test   %eax,%eax
    2618:	74 28                	je     2642 <test_array_offset+0xba>
    261a:	48 8d 05 5f 3d 00 00 	lea    0x3d5f(%rip),%rax        # 6380 <__PRETTY_FUNCTION__.0>
    2621:	48 89 c1             	mov    %rax,%rcx
    2624:	ba 87 00 00 00       	mov    $0x87,%edx
    2629:	48 8d 05 a3 3b 00 00 	lea    0x3ba3(%rip),%rax        # 61d3 <_IO_stdin_used+0x1d3>
    2630:	48 89 c6             	mov    %rax,%rsi
    2633:	48 8d 05 ae 3b 00 00 	lea    0x3bae(%rip),%rax        # 61e8 <_IO_stdin_used+0x1e8>
    263a:	48 89 c7             	mov    %rax,%rdi
    263d:	e8 7e eb ff ff       	call   11c0 <__assert_fail@plt>
    2642:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2646:	b9 03 00 00 00       	mov    $0x3,%ecx
    264b:	ba 01 00 00 00       	mov    $0x1,%edx
    2650:	be 04 00 00 00       	mov    $0x4,%esi
    2655:	48 89 c7             	mov    %rax,%rdi
    2658:	b8 00 00 00 00       	mov    $0x0,%eax
    265d:	e8 05 fc ff ff       	call   2267 <array_offset>
    2662:	89 45 bc             	mov    %eax,-0x44(%rbp)
    2665:	83 7d bc 06          	cmpl   $0x6,-0x44(%rbp)
    2669:	74 45                	je     26b0 <test_array_offset+0x128>
    266b:	8b 45 bc             	mov    -0x44(%rbp),%eax
    266e:	89 c6                	mov    %eax,%esi
    2670:	48 8d 05 46 3b 00 00 	lea    0x3b46(%rip),%rax        # 61bd <_IO_stdin_used+0x1bd>
    2677:	48 89 c7             	mov    %rax,%rdi
    267a:	b8 00 00 00 00       	mov    $0x0,%eax
    267f:	e8 2c eb ff ff       	call   11b0 <printf@plt>
    2684:	85 c0                	test   %eax,%eax
    2686:	74 28                	je     26b0 <test_array_offset+0x128>
    2688:	48 8d 05 f1 3c 00 00 	lea    0x3cf1(%rip),%rax        # 6380 <__PRETTY_FUNCTION__.0>
    268f:	48 89 c1             	mov    %rax,%rcx
    2692:	ba 8a 00 00 00       	mov    $0x8a,%edx
    2697:	48 8d 05 35 3b 00 00 	lea    0x3b35(%rip),%rax        # 61d3 <_IO_stdin_used+0x1d3>
    269e:	48 89 c6             	mov    %rax,%rsi
    26a1:	48 8d 05 80 3b 00 00 	lea    0x3b80(%rip),%rax        # 6228 <_IO_stdin_used+0x228>
    26a8:	48 89 c7             	mov    %rax,%rdi
    26ab:	e8 10 eb ff ff       	call   11c0 <__assert_fail@plt>
    26b0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    26b4:	b9 fd ff ff ff       	mov    $0xfffffffd,%ecx
    26b9:	ba 01 00 00 00       	mov    $0x1,%edx
    26be:	be 05 00 00 00       	mov    $0x5,%esi
    26c3:	48 89 c7             	mov    %rax,%rdi
    26c6:	b8 00 00 00 00       	mov    $0x0,%eax
    26cb:	e8 97 fb ff ff       	call   2267 <array_offset>
    26d0:	89 45 c0             	mov    %eax,-0x40(%rbp)
    26d3:	83 7d c0 23          	cmpl   $0x23,-0x40(%rbp)
    26d7:	74 45                	je     271e <test_array_offset+0x196>
    26d9:	8b 45 c0             	mov    -0x40(%rbp),%eax
    26dc:	89 c6                	mov    %eax,%esi
    26de:	48 8d 05 d8 3a 00 00 	lea    0x3ad8(%rip),%rax        # 61bd <_IO_stdin_used+0x1bd>
    26e5:	48 89 c7             	mov    %rax,%rdi
    26e8:	b8 00 00 00 00       	mov    $0x0,%eax
    26ed:	e8 be ea ff ff       	call   11b0 <printf@plt>
    26f2:	85 c0                	test   %eax,%eax
    26f4:	74 28                	je     271e <test_array_offset+0x196>
    26f6:	48 8d 05 83 3c 00 00 	lea    0x3c83(%rip),%rax        # 6380 <__PRETTY_FUNCTION__.0>
    26fd:	48 89 c1             	mov    %rax,%rcx
    2700:	ba 8d 00 00 00       	mov    $0x8d,%edx
    2705:	48 8d 05 c7 3a 00 00 	lea    0x3ac7(%rip),%rax        # 61d3 <_IO_stdin_used+0x1d3>
    270c:	48 89 c6             	mov    %rax,%rsi
    270f:	48 8d 05 52 3b 00 00 	lea    0x3b52(%rip),%rax        # 6268 <_IO_stdin_used+0x268>
    2716:	48 89 c7             	mov    %rax,%rdi
    2719:	e8 a2 ea ff ff       	call   11c0 <__assert_fail@plt>
    271e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2722:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
    2727:	ba 01 00 00 00       	mov    $0x1,%edx
    272c:	be 04 00 00 00       	mov    $0x4,%esi
    2731:	48 89 c7             	mov    %rax,%rdi
    2734:	b8 00 00 00 00       	mov    $0x0,%eax
    2739:	e8 29 fb ff ff       	call   2267 <array_offset>
    273e:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    2741:	83 7d c4 01          	cmpl   $0x1,-0x3c(%rbp)
    2745:	74 45                	je     278c <test_array_offset+0x204>
    2747:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    274a:	89 c6                	mov    %eax,%esi
    274c:	48 8d 05 6a 3a 00 00 	lea    0x3a6a(%rip),%rax        # 61bd <_IO_stdin_used+0x1bd>
    2753:	48 89 c7             	mov    %rax,%rdi
    2756:	b8 00 00 00 00       	mov    $0x0,%eax
    275b:	e8 50 ea ff ff       	call   11b0 <printf@plt>
    2760:	85 c0                	test   %eax,%eax
    2762:	74 28                	je     278c <test_array_offset+0x204>
    2764:	48 8d 05 15 3c 00 00 	lea    0x3c15(%rip),%rax        # 6380 <__PRETTY_FUNCTION__.0>
    276b:	48 89 c1             	mov    %rax,%rcx
    276e:	ba 90 00 00 00       	mov    $0x90,%edx
    2773:	48 8d 05 59 3a 00 00 	lea    0x3a59(%rip),%rax        # 61d3 <_IO_stdin_used+0x1d3>
    277a:	48 89 c6             	mov    %rax,%rsi
    277d:	48 8d 05 24 3b 00 00 	lea    0x3b24(%rip),%rax        # 62a8 <_IO_stdin_used+0x2a8>
    2784:	48 89 c7             	mov    %rax,%rdi
    2787:	e8 34 ea ff ff       	call   11c0 <__assert_fail@plt>
    278c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2790:	b9 fd ff ff ff       	mov    $0xfffffffd,%ecx
    2795:	ba 02 00 00 00       	mov    $0x2,%edx
    279a:	be 04 00 00 00       	mov    $0x4,%esi
    279f:	48 89 c7             	mov    %rax,%rdi
    27a2:	b8 00 00 00 00       	mov    $0x0,%eax
    27a7:	e8 bb fa ff ff       	call   2267 <array_offset>
    27ac:	89 45 c8             	mov    %eax,-0x38(%rbp)
    27af:	83 7d c8 07          	cmpl   $0x7,-0x38(%rbp)
    27b3:	74 45                	je     27fa <test_array_offset+0x272>
    27b5:	8b 45 c8             	mov    -0x38(%rbp),%eax
    27b8:	89 c6                	mov    %eax,%esi
    27ba:	48 8d 05 fc 39 00 00 	lea    0x39fc(%rip),%rax        # 61bd <_IO_stdin_used+0x1bd>
    27c1:	48 89 c7             	mov    %rax,%rdi
    27c4:	b8 00 00 00 00       	mov    $0x0,%eax
    27c9:	e8 e2 e9 ff ff       	call   11b0 <printf@plt>
    27ce:	85 c0                	test   %eax,%eax
    27d0:	74 28                	je     27fa <test_array_offset+0x272>
    27d2:	48 8d 05 a7 3b 00 00 	lea    0x3ba7(%rip),%rax        # 6380 <__PRETTY_FUNCTION__.0>
    27d9:	48 89 c1             	mov    %rax,%rcx
    27dc:	ba 93 00 00 00       	mov    $0x93,%edx
    27e1:	48 8d 05 eb 39 00 00 	lea    0x39eb(%rip),%rax        # 61d3 <_IO_stdin_used+0x1d3>
    27e8:	48 89 c6             	mov    %rax,%rsi
    27eb:	48 8d 05 f6 3a 00 00 	lea    0x3af6(%rip),%rax        # 62e8 <_IO_stdin_used+0x2e8>
    27f2:	48 89 c7             	mov    %rax,%rdi
    27f5:	e8 c6 e9 ff ff       	call   11c0 <__assert_fail@plt>
    27fa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    27fe:	b9 01 00 00 00       	mov    $0x1,%ecx
    2803:	ba 03 00 00 00       	mov    $0x3,%edx
    2808:	be 06 00 00 00       	mov    $0x6,%esi
    280d:	48 89 c7             	mov    %rax,%rdi
    2810:	b8 00 00 00 00       	mov    $0x0,%eax
    2815:	e8 4d fa ff ff       	call   2267 <array_offset>
    281a:	89 45 cc             	mov    %eax,-0x34(%rbp)
    281d:	83 7d cc 58          	cmpl   $0x58,-0x34(%rbp)
    2821:	74 45                	je     2868 <test_array_offset+0x2e0>
    2823:	8b 45 cc             	mov    -0x34(%rbp),%eax
    2826:	89 c6                	mov    %eax,%esi
    2828:	48 8d 05 8e 39 00 00 	lea    0x398e(%rip),%rax        # 61bd <_IO_stdin_used+0x1bd>
    282f:	48 89 c7             	mov    %rax,%rdi
    2832:	b8 00 00 00 00       	mov    $0x0,%eax
    2837:	e8 74 e9 ff ff       	call   11b0 <printf@plt>
    283c:	85 c0                	test   %eax,%eax
    283e:	74 28                	je     2868 <test_array_offset+0x2e0>
    2840:	48 8d 05 39 3b 00 00 	lea    0x3b39(%rip),%rax        # 6380 <__PRETTY_FUNCTION__.0>
    2847:	48 89 c1             	mov    %rax,%rcx
    284a:	ba 96 00 00 00       	mov    $0x96,%edx
    284f:	48 8d 05 7d 39 00 00 	lea    0x397d(%rip),%rax        # 61d3 <_IO_stdin_used+0x1d3>
    2856:	48 89 c6             	mov    %rax,%rsi
    2859:	48 8d 05 c8 3a 00 00 	lea    0x3ac8(%rip),%rax        # 6328 <_IO_stdin_used+0x328>
    2860:	48 89 c7             	mov    %rax,%rdi
    2863:	e8 58 e9 ff ff       	call   11c0 <__assert_fail@plt>
    2868:	90                   	nop
    2869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    286d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    2874:	00 00 
    2876:	74 05                	je     287d <test_array_offset+0x2f5>
    2878:	e8 23 e9 ff ff       	call   11a0 <__stack_chk_fail@plt>
    287d:	c9                   	leave  
    287e:	c3                   	ret    

000000000000287f <chapt_8_practice_run>:
    287f:	f3 0f 1e fa          	endbr64 
    2883:	55                   	push   %rbp
    2884:	48 89 e5             	mov    %rsp,%rbp
    2887:	48 8b 05 da 67 00 00 	mov    0x67da(%rip),%rax        # 9068 <memory_boundary_alignment>
    288e:	48 89 c7             	mov    %rax,%rdi
    2891:	e8 f2 0a 00 00       	call   3388 <print_dividing_line>
    2896:	e8 6b f6 ff ff       	call   1f06 <test_identity_matrix>
    289b:	e8 73 f8 ff ff       	call   2113 <test_matrix_multiply>
    28a0:	e8 e3 fc ff ff       	call   2588 <test_array_offset>
    28a5:	48 8d 05 c9 3a 00 00 	lea    0x3ac9(%rip),%rax        # 6375 <_IO_stdin_used+0x375>
    28ac:	48 89 c7             	mov    %rax,%rdi
    28af:	e8 d4 0a 00 00       	call   3388 <print_dividing_line>
    28b4:	90                   	nop
    28b5:	5d                   	pop    %rbp
    28b6:	c3                   	ret    

00000000000028b7 <get_allowed_col>:
    28b7:	f3 0f 1e fa          	endbr64 
    28bb:	55                   	push   %rbp
    28bc:	48 89 e5             	mov    %rsp,%rbp
    28bf:	48 83 ec 40          	sub    $0x40,%rsp
    28c3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    28c7:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    28ca:	bf 20 00 00 00       	mov    $0x20,%edi
    28cf:	e8 2c e9 ff ff       	call   1200 <malloc@plt>
    28d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    28d8:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    28df:	eb 1e                	jmp    28ff <get_allowed_col+0x48>
    28e1:	8b 45 dc             	mov    -0x24(%rbp),%eax
    28e4:	48 98                	cltq   
    28e6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    28ed:	00 
    28ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    28f2:	48 01 d0             	add    %rdx,%rax
    28f5:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    28fb:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    28ff:	83 7d dc 07          	cmpl   $0x7,-0x24(%rbp)
    2903:	7e dc                	jle    28e1 <get_allowed_col+0x2a>
    2905:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    290c:	e9 eb 00 00 00       	jmp    29fc <get_allowed_col+0x145>
    2911:	8b 45 e0             	mov    -0x20(%rbp),%eax
    2914:	48 98                	cltq   
    2916:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    291d:	00 
    291e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2922:	48 01 d0             	add    %rdx,%rax
    2925:	48 8b 00             	mov    (%rax),%rax
    2928:	8b 00                	mov    (%rax),%eax
    292a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    292d:	8b 45 e0             	mov    -0x20(%rbp),%eax
    2930:	48 98                	cltq   
    2932:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2939:	00 
    293a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    293e:	48 01 d0             	add    %rdx,%rax
    2941:	48 8b 00             	mov    (%rax),%rax
    2944:	8b 40 04             	mov    0x4(%rax),%eax
    2947:	89 45 e8             	mov    %eax,-0x18(%rbp)
    294a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    294e:	0f 8e a3 00 00 00    	jle    29f7 <get_allowed_col+0x140>
    2954:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
    2958:	0f 8e 99 00 00 00    	jle    29f7 <get_allowed_col+0x140>
    295e:	83 7d e4 08          	cmpl   $0x8,-0x1c(%rbp)
    2962:	0f 8f 8f 00 00 00    	jg     29f7 <get_allowed_col+0x140>
    2968:	83 7d e8 08          	cmpl   $0x8,-0x18(%rbp)
    296c:	0f 8f 85 00 00 00    	jg     29f7 <get_allowed_col+0x140>
    2972:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2975:	48 98                	cltq   
    2977:	48 c1 e0 02          	shl    $0x2,%rax
    297b:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
    297f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2983:	48 01 d0             	add    %rdx,%rax
    2986:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    298c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    298f:	2b 45 e4             	sub    -0x1c(%rbp),%eax
    2992:	89 45 ec             	mov    %eax,-0x14(%rbp)
    2995:	8b 55 e8             	mov    -0x18(%rbp),%edx
    2998:	8b 45 ec             	mov    -0x14(%rbp),%eax
    299b:	01 d0                	add    %edx,%eax
    299d:	89 45 f0             	mov    %eax,-0x10(%rbp)
    29a0:	8b 45 e8             	mov    -0x18(%rbp),%eax
    29a3:	2b 45 ec             	sub    -0x14(%rbp),%eax
    29a6:	89 45 f4             	mov    %eax,-0xc(%rbp)
    29a9:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    29ad:	7e 20                	jle    29cf <get_allowed_col+0x118>
    29af:	83 7d f0 08          	cmpl   $0x8,-0x10(%rbp)
    29b3:	7f 1a                	jg     29cf <get_allowed_col+0x118>
    29b5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    29b8:	48 98                	cltq   
    29ba:	48 c1 e0 02          	shl    $0x2,%rax
    29be:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
    29c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29c6:	48 01 d0             	add    %rdx,%rax
    29c9:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    29cf:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    29d3:	7e 23                	jle    29f8 <get_allowed_col+0x141>
    29d5:	83 7d f4 08          	cmpl   $0x8,-0xc(%rbp)
    29d9:	7f 1d                	jg     29f8 <get_allowed_col+0x141>
    29db:	8b 45 f4             	mov    -0xc(%rbp),%eax
    29de:	48 98                	cltq   
    29e0:	48 c1 e0 02          	shl    $0x2,%rax
    29e4:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
    29e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29ec:	48 01 d0             	add    %rdx,%rax
    29ef:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    29f5:	eb 01                	jmp    29f8 <get_allowed_col+0x141>
    29f7:	90                   	nop
    29f8:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    29fc:	8b 45 e0             	mov    -0x20(%rbp),%eax
    29ff:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    2a02:	0f 8c 09 ff ff ff    	jl     2911 <get_allowed_col+0x5a>
    2a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a0c:	c9                   	leave  
    2a0d:	c3                   	ret    

0000000000002a0e <init_position>:
    2a0e:	f3 0f 1e fa          	endbr64 
    2a12:	55                   	push   %rbp
    2a13:	48 89 e5             	mov    %rsp,%rbp
    2a16:	53                   	push   %rbx
    2a17:	48 83 ec 18          	sub    $0x18,%rsp
    2a1b:	bf 40 00 00 00       	mov    $0x40,%edi
    2a20:	e8 db e7 ff ff       	call   1200 <malloc@plt>
    2a25:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2a29:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    2a30:	eb 64                	jmp    2a96 <init_position+0x88>
    2a32:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2a35:	48 98                	cltq   
    2a37:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2a3e:	00 
    2a3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2a43:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    2a47:	bf 08 00 00 00       	mov    $0x8,%edi
    2a4c:	e8 af e7 ff ff       	call   1200 <malloc@plt>
    2a51:	48 89 03             	mov    %rax,(%rbx)
    2a54:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2a57:	48 98                	cltq   
    2a59:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2a60:	00 
    2a61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2a65:	48 01 d0             	add    %rdx,%rax
    2a68:	48 8b 00             	mov    (%rax),%rax
    2a6b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    2a71:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2a74:	48 98                	cltq   
    2a76:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2a7d:	00 
    2a7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2a82:	48 01 d0             	add    %rdx,%rax
    2a85:	48 8b 00             	mov    (%rax),%rax
    2a88:	48 83 c0 04          	add    $0x4,%rax
    2a8c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    2a92:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    2a96:	83 7d e4 07          	cmpl   $0x7,-0x1c(%rbp)
    2a9a:	7e 96                	jle    2a32 <init_position+0x24>
    2a9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2aa0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2aa4:	c9                   	leave  
    2aa5:	c3                   	ret    

0000000000002aa6 <set_queens>:
    2aa6:	f3 0f 1e fa          	endbr64 
    2aaa:	55                   	push   %rbp
    2aab:	48 89 e5             	mov    %rsp,%rbp
    2aae:	48 83 ec 30          	sub    $0x30,%rsp
    2ab2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2ab6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2aba:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    2abe:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    2ac1:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    2ac4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ac8:	89 d6                	mov    %edx,%esi
    2aca:	48 89 c7             	mov    %rax,%rdi
    2acd:	e8 e5 fd ff ff       	call   28b7 <get_allowed_col>
    2ad2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2ad6:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2ad9:	89 c6                	mov    %eax,%esi
    2adb:	48 8d 05 be 38 00 00 	lea    0x38be(%rip),%rax        # 63a0 <__PRETTY_FUNCTION__.0+0x20>
    2ae2:	48 89 c7             	mov    %rax,%rdi
    2ae5:	b8 00 00 00 00       	mov    $0x0,%eax
    2aea:	e8 c1 e6 ff ff       	call   11b0 <printf@plt>
    2aef:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    2af6:	eb 30                	jmp    2b28 <set_queens+0x82>
    2af8:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2afb:	48 98                	cltq   
    2afd:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2b04:	00 
    2b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b09:	48 01 d0             	add    %rdx,%rax
    2b0c:	8b 00                	mov    (%rax),%eax
    2b0e:	89 c6                	mov    %eax,%esi
    2b10:	48 8d 05 95 38 00 00 	lea    0x3895(%rip),%rax        # 63ac <__PRETTY_FUNCTION__.0+0x2c>
    2b17:	48 89 c7             	mov    %rax,%rdi
    2b1a:	b8 00 00 00 00       	mov    $0x0,%eax
    2b1f:	e8 8c e6 ff ff       	call   11b0 <printf@plt>
    2b24:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    2b28:	83 7d f0 07          	cmpl   $0x7,-0x10(%rbp)
    2b2c:	7e ca                	jle    2af8 <set_queens+0x52>
    2b2e:	bf 0a 00 00 00       	mov    $0xa,%edi
    2b33:	e8 28 e6 ff ff       	call   1160 <putchar@plt>
    2b38:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2b3f:	e9 8f 00 00 00       	jmp    2bd3 <set_queens+0x12d>
    2b44:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2b47:	48 98                	cltq   
    2b49:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2b50:	00 
    2b51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b55:	48 01 d0             	add    %rdx,%rax
    2b58:	8b 00                	mov    (%rax),%eax
    2b5a:	83 f8 01             	cmp    $0x1,%eax
    2b5d:	75 70                	jne    2bcf <set_queens+0x129>
    2b5f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2b62:	48 98                	cltq   
    2b64:	48 c1 e0 03          	shl    $0x3,%rax
    2b68:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    2b6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b70:	48 01 d0             	add    %rdx,%rax
    2b73:	48 8b 00             	mov    (%rax),%rax
    2b76:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    2b79:	89 10                	mov    %edx,(%rax)
    2b7b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2b7e:	48 98                	cltq   
    2b80:	48 c1 e0 03          	shl    $0x3,%rax
    2b84:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    2b88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b8c:	48 01 d0             	add    %rdx,%rax
    2b8f:	48 8b 00             	mov    (%rax),%rax
    2b92:	48 83 c0 04          	add    $0x4,%rax
    2b96:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2b99:	83 c2 01             	add    $0x1,%edx
    2b9c:	89 10                	mov    %edx,(%rax)
    2b9e:	83 7d d4 08          	cmpl   $0x8,-0x2c(%rbp)
    2ba2:	75 11                	jne    2bb5 <set_queens+0x10f>
    2ba4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2ba8:	8b 00                	mov    (%rax),%eax
    2baa:	8d 50 01             	lea    0x1(%rax),%edx
    2bad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2bb1:	89 10                	mov    %edx,(%rax)
    2bb3:	eb 1a                	jmp    2bcf <set_queens+0x129>
    2bb5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2bb8:	8d 48 01             	lea    0x1(%rax),%ecx
    2bbb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2bbf:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    2bc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2bc7:	48 89 c7             	mov    %rax,%rdi
    2bca:	e8 d7 fe ff ff       	call   2aa6 <set_queens>
    2bcf:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2bd3:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
    2bd7:	0f 8e 67 ff ff ff    	jle    2b44 <set_queens+0x9e>
    2bdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2be1:	48 89 c7             	mov    %rax,%rdi
    2be4:	e8 67 e5 ff ff       	call   1150 <free@plt>
    2be9:	90                   	nop
    2bea:	c9                   	leave  
    2beb:	c3                   	ret    

0000000000002bec <eight_queens>:
    2bec:	f3 0f 1e fa          	endbr64 
    2bf0:	55                   	push   %rbp
    2bf1:	48 89 e5             	mov    %rsp,%rbp
    2bf4:	48 83 ec 30          	sub    $0x30,%rsp
    2bf8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2bfc:	bf 04 00 00 00       	mov    $0x4,%edi
    2c01:	e8 fa e5 ff ff       	call   1200 <malloc@plt>
    2c06:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2c0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2c0e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    2c14:	b8 00 00 00 00       	mov    $0x0,%eax
    2c19:	e8 f0 fd ff ff       	call   2a0e <init_position>
    2c1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2c22:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%rbp)
    2c29:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
    2c30:	eb 3b                	jmp    2c6d <eight_queens+0x81>
    2c32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c36:	48 8b 00             	mov    (%rax),%rax
    2c39:	8b 55 e8             	mov    -0x18(%rbp),%edx
    2c3c:	89 10                	mov    %edx,(%rax)
    2c3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c42:	48 8b 00             	mov    (%rax),%rax
    2c45:	48 8d 50 04          	lea    0x4(%rax),%rdx
    2c49:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2c4c:	89 02                	mov    %eax,(%rdx)
    2c4e:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    2c52:	8b 4d e8             	mov    -0x18(%rbp),%ecx
    2c55:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2c59:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    2c5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c61:	48 89 c7             	mov    %rax,%rdi
    2c64:	e8 3d fe ff ff       	call   2aa6 <set_queens>
    2c69:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    2c6d:	83 7d ec 08          	cmpl   $0x8,-0x14(%rbp)
    2c71:	7e bf                	jle    2c32 <eight_queens+0x46>
    2c73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2c77:	8b 00                	mov    (%rax),%eax
    2c79:	89 c6                	mov    %eax,%esi
    2c7b:	48 8d 05 2e 37 00 00 	lea    0x372e(%rip),%rax        # 63b0 <__PRETTY_FUNCTION__.0+0x30>
    2c82:	48 89 c7             	mov    %rax,%rdi
    2c85:	b8 00 00 00 00       	mov    $0x0,%eax
    2c8a:	e8 21 e5 ff ff       	call   11b0 <printf@plt>
    2c8f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2c93:	8b 00                	mov    (%rax),%eax
    2c95:	c9                   	leave  
    2c96:	c3                   	ret    

0000000000002c97 <init_position_test>:
    2c97:	f3 0f 1e fa          	endbr64 
    2c9b:	55                   	push   %rbp
    2c9c:	48 89 e5             	mov    %rsp,%rbp
    2c9f:	48 83 ec 10          	sub    $0x10,%rsp
    2ca3:	b8 00 00 00 00       	mov    $0x0,%eax
    2ca8:	e8 61 fd ff ff       	call   2a0e <init_position>
    2cad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2cb1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2cb8:	e9 92 00 00 00       	jmp    2d4f <init_position_test+0xb8>
    2cbd:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2cc0:	48 98                	cltq   
    2cc2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2cc9:	00 
    2cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2cce:	48 01 d0             	add    %rdx,%rax
    2cd1:	48 8b 00             	mov    (%rax),%rax
    2cd4:	8b 00                	mov    (%rax),%eax
    2cd6:	85 c0                	test   %eax,%eax
    2cd8:	74 28                	je     2d02 <init_position_test+0x6b>
    2cda:	48 8d 05 2f 37 00 00 	lea    0x372f(%rip),%rax        # 6410 <__PRETTY_FUNCTION__.1>
    2ce1:	48 89 c1             	mov    %rax,%rcx
    2ce4:	ba 8a 00 00 00       	mov    $0x8a,%edx
    2ce9:	48 8d 05 cd 36 00 00 	lea    0x36cd(%rip),%rax        # 63bd <__PRETTY_FUNCTION__.0+0x3d>
    2cf0:	48 89 c6             	mov    %rax,%rsi
    2cf3:	48 8d 05 d2 36 00 00 	lea    0x36d2(%rip),%rax        # 63cc <__PRETTY_FUNCTION__.0+0x4c>
    2cfa:	48 89 c7             	mov    %rax,%rdi
    2cfd:	e8 be e4 ff ff       	call   11c0 <__assert_fail@plt>
    2d02:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2d05:	48 98                	cltq   
    2d07:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2d0e:	00 
    2d0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d13:	48 01 d0             	add    %rdx,%rax
    2d16:	48 8b 00             	mov    (%rax),%rax
    2d19:	48 83 c0 04          	add    $0x4,%rax
    2d1d:	8b 00                	mov    (%rax),%eax
    2d1f:	85 c0                	test   %eax,%eax
    2d21:	74 28                	je     2d4b <init_position_test+0xb4>
    2d23:	48 8d 05 e6 36 00 00 	lea    0x36e6(%rip),%rax        # 6410 <__PRETTY_FUNCTION__.1>
    2d2a:	48 89 c1             	mov    %rax,%rcx
    2d2d:	ba 8b 00 00 00       	mov    $0x8b,%edx
    2d32:	48 8d 05 84 36 00 00 	lea    0x3684(%rip),%rax        # 63bd <__PRETTY_FUNCTION__.0+0x3d>
    2d39:	48 89 c6             	mov    %rax,%rsi
    2d3c:	48 8d 05 9d 36 00 00 	lea    0x369d(%rip),%rax        # 63e0 <__PRETTY_FUNCTION__.0+0x60>
    2d43:	48 89 c7             	mov    %rax,%rdi
    2d46:	e8 75 e4 ff ff       	call   11c0 <__assert_fail@plt>
    2d4b:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2d4f:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
    2d53:	0f 8e 64 ff ff ff    	jle    2cbd <init_position_test+0x26>
    2d59:	90                   	nop
    2d5a:	90                   	nop
    2d5b:	c9                   	leave  
    2d5c:	c3                   	ret    

0000000000002d5d <get_allowed_col_test>:
    2d5d:	f3 0f 1e fa          	endbr64 
    2d61:	55                   	push   %rbp
    2d62:	48 89 e5             	mov    %rsp,%rbp
    2d65:	48 83 ec 20          	sub    $0x20,%rsp
    2d69:	b8 00 00 00 00       	mov    $0x0,%eax
    2d6e:	e8 9b fc ff ff       	call   2a0e <init_position>
    2d73:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2d77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2d7b:	be 01 00 00 00       	mov    $0x1,%esi
    2d80:	48 89 c7             	mov    %rax,%rdi
    2d83:	e8 2f fb ff ff       	call   28b7 <get_allowed_col>
    2d88:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2d8c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    2d93:	eb 30                	jmp    2dc5 <get_allowed_col_test+0x68>
    2d95:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2d98:	48 98                	cltq   
    2d9a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2da1:	00 
    2da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2da6:	48 01 d0             	add    %rdx,%rax
    2da9:	8b 00                	mov    (%rax),%eax
    2dab:	89 c6                	mov    %eax,%esi
    2dad:	48 8d 05 f8 35 00 00 	lea    0x35f8(%rip),%rax        # 63ac <__PRETTY_FUNCTION__.0+0x2c>
    2db4:	48 89 c7             	mov    %rax,%rdi
    2db7:	b8 00 00 00 00       	mov    $0x0,%eax
    2dbc:	e8 ef e3 ff ff       	call   11b0 <printf@plt>
    2dc1:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    2dc5:	83 7d e8 07          	cmpl   $0x7,-0x18(%rbp)
    2dc9:	7e ca                	jle    2d95 <get_allowed_col_test+0x38>
    2dcb:	bf 0a 00 00 00       	mov    $0xa,%edi
    2dd0:	e8 8b e3 ff ff       	call   1160 <putchar@plt>
    2dd5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2dd9:	48 8b 00             	mov    (%rax),%rax
    2ddc:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    2de2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2de6:	48 8b 00             	mov    (%rax),%rax
    2de9:	48 83 c0 04          	add    $0x4,%rax
    2ded:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    2df3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2df7:	48 83 c0 08          	add    $0x8,%rax
    2dfb:	48 8b 00             	mov    (%rax),%rax
    2dfe:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
    2e04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e08:	48 83 c0 08          	add    $0x8,%rax
    2e0c:	48 8b 00             	mov    (%rax),%rax
    2e0f:	48 83 c0 04          	add    $0x4,%rax
    2e13:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    2e19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e1d:	48 83 c0 10          	add    $0x10,%rax
    2e21:	48 8b 00             	mov    (%rax),%rax
    2e24:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    2e2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e2e:	48 83 c0 10          	add    $0x10,%rax
    2e32:	48 8b 00             	mov    (%rax),%rax
    2e35:	48 83 c0 04          	add    $0x4,%rax
    2e39:	c7 00 05 00 00 00    	movl   $0x5,(%rax)
    2e3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e43:	be 04 00 00 00       	mov    $0x4,%esi
    2e48:	48 89 c7             	mov    %rax,%rdi
    2e4b:	e8 67 fa ff ff       	call   28b7 <get_allowed_col>
    2e50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2e54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e58:	48 83 c0 08          	add    $0x8,%rax
    2e5c:	8b 00                	mov    (%rax),%eax
    2e5e:	85 c0                	test   %eax,%eax
    2e60:	74 28                	je     2e8a <get_allowed_col_test+0x12d>
    2e62:	48 8d 05 c7 35 00 00 	lea    0x35c7(%rip),%rax        # 6430 <__PRETTY_FUNCTION__.0>
    2e69:	48 89 c1             	mov    %rax,%rcx
    2e6c:	ba a0 00 00 00       	mov    $0xa0,%edx
    2e71:	48 8d 05 45 35 00 00 	lea    0x3545(%rip),%rax        # 63bd <__PRETTY_FUNCTION__.0+0x3d>
    2e78:	48 89 c6             	mov    %rax,%rsi
    2e7b:	48 8d 05 72 35 00 00 	lea    0x3572(%rip),%rax        # 63f4 <__PRETTY_FUNCTION__.0+0x74>
    2e82:	48 89 c7             	mov    %rax,%rdi
    2e85:	e8 36 e3 ff ff       	call   11c0 <__assert_fail@plt>
    2e8a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2e91:	eb 30                	jmp    2ec3 <get_allowed_col_test+0x166>
    2e93:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2e96:	48 98                	cltq   
    2e98:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2e9f:	00 
    2ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ea4:	48 01 d0             	add    %rdx,%rax
    2ea7:	8b 00                	mov    (%rax),%eax
    2ea9:	89 c6                	mov    %eax,%esi
    2eab:	48 8d 05 fa 34 00 00 	lea    0x34fa(%rip),%rax        # 63ac <__PRETTY_FUNCTION__.0+0x2c>
    2eb2:	48 89 c7             	mov    %rax,%rdi
    2eb5:	b8 00 00 00 00       	mov    $0x0,%eax
    2eba:	e8 f1 e2 ff ff       	call   11b0 <printf@plt>
    2ebf:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    2ec3:	83 7d ec 07          	cmpl   $0x7,-0x14(%rbp)
    2ec7:	7e ca                	jle    2e93 <get_allowed_col_test+0x136>
    2ec9:	bf 0a 00 00 00       	mov    $0xa,%edi
    2ece:	e8 8d e2 ff ff       	call   1160 <putchar@plt>
    2ed3:	90                   	nop
    2ed4:	c9                   	leave  
    2ed5:	c3                   	ret    

0000000000002ed6 <set_queen_test>:
    2ed6:	f3 0f 1e fa          	endbr64 
    2eda:	55                   	push   %rbp
    2edb:	48 89 e5             	mov    %rsp,%rbp
    2ede:	48 83 ec 10          	sub    $0x10,%rsp
    2ee2:	b8 00 00 00 00       	mov    $0x0,%eax
    2ee7:	e8 22 fb ff ff       	call   2a0e <init_position>
    2eec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2ef0:	bf 04 00 00 00       	mov    $0x4,%edi
    2ef5:	e8 06 e3 ff ff       	call   1200 <malloc@plt>
    2efa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2efe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f02:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    2f08:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f10:	b9 01 00 00 00       	mov    $0x1,%ecx
    2f15:	48 89 c6             	mov    %rax,%rsi
    2f18:	bf 00 00 00 00       	mov    $0x0,%edi
    2f1d:	e8 84 fb ff ff       	call   2aa6 <set_queens>
    2f22:	90                   	nop
    2f23:	c9                   	leave  
    2f24:	c3                   	ret    

0000000000002f25 <eight_queens_test>:
    2f25:	f3 0f 1e fa          	endbr64 
    2f29:	55                   	push   %rbp
    2f2a:	48 89 e5             	mov    %rsp,%rbp
    2f2d:	90                   	nop
    2f2e:	5d                   	pop    %rbp
    2f2f:	c3                   	ret    

0000000000002f30 <sll_insert>:
    2f30:	f3 0f 1e fa          	endbr64 
    2f34:	55                   	push   %rbp
    2f35:	48 89 e5             	mov    %rsp,%rbp
    2f38:	41 55                	push   %r13
    2f3a:	41 54                	push   %r12
    2f3c:	53                   	push   %rbx
    2f3d:	48 83 ec 18          	sub    $0x18,%rsp
    2f41:	49 89 fd             	mov    %rdi,%r13
    2f44:	49 89 f4             	mov    %rsi,%r12
    2f47:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    2f4b:	eb 04                	jmp    2f51 <sll_insert+0x21>
    2f4d:	4c 8d 6b 08          	lea    0x8(%rbx),%r13
    2f51:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    2f55:	48 85 db             	test   %rbx,%rbx
    2f58:	74 17                	je     2f71 <sll_insert+0x41>
    2f5a:	49 8b 14 24          	mov    (%r12),%rdx
    2f5e:	48 8b 03             	mov    (%rbx),%rax
    2f61:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2f65:	48 89 d6             	mov    %rdx,%rsi
    2f68:	48 89 c7             	mov    %rax,%rdi
    2f6b:	ff d1                	call   *%rcx
    2f6d:	85 c0                	test   %eax,%eax
    2f6f:	78 dc                	js     2f4d <sll_insert+0x1d>
    2f71:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    2f76:	4d 89 65 00          	mov    %r12,0x0(%r13)
    2f7a:	b8 01 00 00 00       	mov    $0x1,%eax
    2f7f:	48 83 c4 18          	add    $0x18,%rsp
    2f83:	5b                   	pop    %rbx
    2f84:	41 5c                	pop    %r12
    2f86:	41 5d                	pop    %r13
    2f88:	5d                   	pop    %rbp
    2f89:	c3                   	ret    

0000000000002f8a <sll_insert_cpy>:
    2f8a:	f3 0f 1e fa          	endbr64 
    2f8e:	55                   	push   %rbp
    2f8f:	48 89 e5             	mov    %rsp,%rbp
    2f92:	41 55                	push   %r13
    2f94:	41 54                	push   %r12
    2f96:	53                   	push   %rbx
    2f97:	48 83 ec 38          	sub    $0x38,%rsp
    2f9b:	49 89 fc             	mov    %rdi,%r12
    2f9e:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
    2fa2:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    2fa6:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    2faa:	eb 04                	jmp    2fb0 <sll_insert_cpy+0x26>
    2fac:	4c 8d 63 08          	lea    0x8(%rbx),%r12
    2fb0:	49 8b 1c 24          	mov    (%r12),%rbx
    2fb4:	48 85 db             	test   %rbx,%rbx
    2fb7:	74 17                	je     2fd0 <sll_insert_cpy+0x46>
    2fb9:	48 8b 03             	mov    (%rbx),%rax
    2fbc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2fc0:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    2fc4:	48 89 d6             	mov    %rdx,%rsi
    2fc7:	48 89 c7             	mov    %rax,%rdi
    2fca:	ff d1                	call   *%rcx
    2fcc:	85 c0                	test   %eax,%eax
    2fce:	78 dc                	js     2fac <sll_insert_cpy+0x22>
    2fd0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2fd4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    2fd8:	48 89 c7             	mov    %rax,%rdi
    2fdb:	ff d2                	call   *%rdx
    2fdd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2fe1:	bf 10 00 00 00       	mov    $0x10,%edi
    2fe6:	e8 15 e2 ff ff       	call   1200 <malloc@plt>
    2feb:	49 89 c5             	mov    %rax,%r13
    2fee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ff2:	49 89 45 00          	mov    %rax,0x0(%r13)
    2ff6:	49 89 5d 08          	mov    %rbx,0x8(%r13)
    2ffa:	4d 89 2c 24          	mov    %r13,(%r12)
    2ffe:	b8 01 00 00 00       	mov    $0x1,%eax
    3003:	48 83 c4 38          	add    $0x38,%rsp
    3007:	5b                   	pop    %rbx
    3008:	41 5c                	pop    %r12
    300a:	41 5d                	pop    %r13
    300c:	5d                   	pop    %rbp
    300d:	c3                   	ret    

000000000000300e <string_test>:
    300e:	f3 0f 1e fa          	endbr64 
    3012:	55                   	push   %rbp
    3013:	48 89 e5             	mov    %rsp,%rbp
    3016:	53                   	push   %rbx
    3017:	48 83 ec 28          	sub    $0x28,%rsp
    301b:	c7 45 d4 0a 00 00 00 	movl   $0xa,-0x2c(%rbp)
    3022:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3025:	83 c0 01             	add    $0x1,%eax
    3028:	48 98                	cltq   
    302a:	48 89 c7             	mov    %rax,%rdi
    302d:	e8 ce e1 ff ff       	call   1200 <malloc@plt>
    3032:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3036:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    303d:	eb 1b                	jmp    305a <string_test+0x4c>
    303f:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3042:	8d 48 31             	lea    0x31(%rax),%ecx
    3045:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3048:	48 63 d0             	movslq %eax,%rdx
    304b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    304f:	48 01 d0             	add    %rdx,%rax
    3052:	89 ca                	mov    %ecx,%edx
    3054:	88 10                	mov    %dl,(%rax)
    3056:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    305a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    305d:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    3060:	7c dd                	jl     303f <string_test+0x31>
    3062:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3065:	48 98                	cltq   
    3067:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    306b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    306f:	48 01 d0             	add    %rdx,%rax
    3072:	c6 00 00             	movb   $0x0,(%rax)
    3075:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3079:	48 89 c7             	mov    %rax,%rdi
    307c:	e8 0f e1 ff ff       	call   1190 <strlen@plt>
    3081:	48 83 c0 01          	add    $0x1,%rax
    3085:	48 89 c7             	mov    %rax,%rdi
    3088:	e8 73 e1 ff ff       	call   1200 <malloc@plt>
    308d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3091:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3095:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3099:	48 89 d6             	mov    %rdx,%rsi
    309c:	48 89 c7             	mov    %rax,%rdi
    309f:	e8 cc e0 ff ff       	call   1170 <strcpy@plt>
    30a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    30a8:	48 89 c6             	mov    %rax,%rsi
    30ab:	48 8d 05 96 33 00 00 	lea    0x3396(%rip),%rax        # 6448 <__PRETTY_FUNCTION__.0+0x18>
    30b2:	48 89 c7             	mov    %rax,%rdi
    30b5:	b8 00 00 00 00       	mov    $0x0,%eax
    30ba:	e8 f1 e0 ff ff       	call   11b0 <printf@plt>
    30bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    30c3:	48 89 c6             	mov    %rax,%rsi
    30c6:	48 8d 05 9b 33 00 00 	lea    0x339b(%rip),%rax        # 6468 <__PRETTY_FUNCTION__.0+0x38>
    30cd:	48 89 c7             	mov    %rax,%rdi
    30d0:	b8 00 00 00 00       	mov    $0x0,%eax
    30d5:	e8 d6 e0 ff ff       	call   11b0 <printf@plt>
    30da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    30de:	48 89 c7             	mov    %rax,%rdi
    30e1:	e8 aa e0 ff ff       	call   1190 <strlen@plt>
    30e6:	48 89 c3             	mov    %rax,%rbx
    30e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    30ed:	48 89 c7             	mov    %rax,%rdi
    30f0:	e8 9b e0 ff ff       	call   1190 <strlen@plt>
    30f5:	48 01 d8             	add    %rbx,%rax
    30f8:	48 8d 50 01          	lea    0x1(%rax),%rdx
    30fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3100:	48 89 d6             	mov    %rdx,%rsi
    3103:	48 89 c7             	mov    %rax,%rdi
    3106:	e8 05 e1 ff ff       	call   1210 <realloc@plt>
    310b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    310f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3113:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3117:	48 89 c6             	mov    %rax,%rsi
    311a:	48 8d 05 67 33 00 00 	lea    0x3367(%rip),%rax        # 6488 <__PRETTY_FUNCTION__.0+0x58>
    3121:	48 89 c7             	mov    %rax,%rdi
    3124:	b8 00 00 00 00       	mov    $0x0,%eax
    3129:	e8 82 e0 ff ff       	call   11b0 <printf@plt>
    312e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3132:	48 89 c6             	mov    %rax,%rsi
    3135:	48 8d 05 74 33 00 00 	lea    0x3374(%rip),%rax        # 64b0 <__PRETTY_FUNCTION__.0+0x80>
    313c:	48 89 c7             	mov    %rax,%rdi
    313f:	b8 00 00 00 00       	mov    $0x0,%eax
    3144:	e8 67 e0 ff ff       	call   11b0 <printf@plt>
    3149:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    314d:	48 89 c6             	mov    %rax,%rsi
    3150:	48 8d 05 81 33 00 00 	lea    0x3381(%rip),%rax        # 64d8 <__PRETTY_FUNCTION__.0+0xa8>
    3157:	48 89 c7             	mov    %rax,%rdi
    315a:	b8 00 00 00 00       	mov    $0x0,%eax
    315f:	e8 4c e0 ff ff       	call   11b0 <printf@plt>
    3164:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3168:	48 89 c6             	mov    %rax,%rsi
    316b:	48 8d 05 8e 33 00 00 	lea    0x338e(%rip),%rax        # 6500 <__PRETTY_FUNCTION__.0+0xd0>
    3172:	48 89 c7             	mov    %rax,%rdi
    3175:	b8 00 00 00 00       	mov    $0x0,%eax
    317a:	e8 31 e0 ff ff       	call   11b0 <printf@plt>
    317f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3183:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3187:	48 89 d6             	mov    %rdx,%rsi
    318a:	48 89 c7             	mov    %rax,%rdi
    318d:	e8 9e e0 ff ff       	call   1230 <strcat@plt>
    3192:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3196:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    319a:	48 89 c6             	mov    %rax,%rsi
    319d:	48 8d 05 8c 33 00 00 	lea    0x338c(%rip),%rax        # 6530 <__PRETTY_FUNCTION__.0+0x100>
    31a4:	48 89 c7             	mov    %rax,%rdi
    31a7:	b8 00 00 00 00       	mov    $0x0,%eax
    31ac:	e8 ff df ff ff       	call   11b0 <printf@plt>
    31b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    31b5:	48 89 c6             	mov    %rax,%rsi
    31b8:	48 8d 05 99 33 00 00 	lea    0x3399(%rip),%rax        # 6558 <__PRETTY_FUNCTION__.0+0x128>
    31bf:	48 89 c7             	mov    %rax,%rdi
    31c2:	b8 00 00 00 00       	mov    $0x0,%eax
    31c7:	e8 e4 df ff ff       	call   11b0 <printf@plt>
    31cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31d0:	48 89 c6             	mov    %rax,%rsi
    31d3:	48 8d 05 a6 33 00 00 	lea    0x33a6(%rip),%rax        # 6580 <__PRETTY_FUNCTION__.0+0x150>
    31da:	48 89 c7             	mov    %rax,%rdi
    31dd:	b8 00 00 00 00       	mov    $0x0,%eax
    31e2:	e8 c9 df ff ff       	call   11b0 <printf@plt>
    31e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    31eb:	48 89 c6             	mov    %rax,%rsi
    31ee:	48 8d 05 bb 33 00 00 	lea    0x33bb(%rip),%rax        # 65b0 <__PRETTY_FUNCTION__.0+0x180>
    31f5:	48 89 c7             	mov    %rax,%rdi
    31f8:	b8 00 00 00 00       	mov    $0x0,%eax
    31fd:	e8 ae df ff ff       	call   11b0 <printf@plt>
    3202:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3206:	48 89 c6             	mov    %rax,%rsi
    3209:	48 8d 05 c0 33 00 00 	lea    0x33c0(%rip),%rax        # 65d0 <__PRETTY_FUNCTION__.0+0x1a0>
    3210:	48 89 c7             	mov    %rax,%rdi
    3213:	b8 00 00 00 00       	mov    $0x0,%eax
    3218:	e8 93 df ff ff       	call   11b0 <printf@plt>
    321d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3221:	48 89 c6             	mov    %rax,%rsi
    3224:	48 8d 05 c5 33 00 00 	lea    0x33c5(%rip),%rax        # 65f0 <__PRETTY_FUNCTION__.0+0x1c0>
    322b:	48 89 c7             	mov    %rax,%rdi
    322e:	b8 00 00 00 00       	mov    $0x0,%eax
    3233:	e8 78 df ff ff       	call   11b0 <printf@plt>
    3238:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    323c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3240:	48 89 d6             	mov    %rdx,%rsi
    3243:	48 89 c7             	mov    %rax,%rdi
    3246:	e8 95 df ff ff       	call   11e0 <strcmp@plt>
    324b:	89 c6                	mov    %eax,%esi
    324d:	48 8d 05 c4 33 00 00 	lea    0x33c4(%rip),%rax        # 6618 <__PRETTY_FUNCTION__.0+0x1e8>
    3254:	48 89 c7             	mov    %rax,%rdi
    3257:	b8 00 00 00 00       	mov    $0x0,%eax
    325c:	e8 4f df ff ff       	call   11b0 <printf@plt>
    3261:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3265:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3269:	48 89 d6             	mov    %rdx,%rsi
    326c:	48 89 c7             	mov    %rax,%rdi
    326f:	e8 6c df ff ff       	call   11e0 <strcmp@plt>
    3274:	89 c6                	mov    %eax,%esi
    3276:	48 8d 05 d3 33 00 00 	lea    0x33d3(%rip),%rax        # 6650 <__PRETTY_FUNCTION__.0+0x220>
    327d:	48 89 c7             	mov    %rax,%rdi
    3280:	b8 00 00 00 00       	mov    $0x0,%eax
    3285:	e8 26 df ff ff       	call   11b0 <printf@plt>
    328a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    328e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3292:	48 89 d6             	mov    %rdx,%rsi
    3295:	48 89 c7             	mov    %rax,%rdi
    3298:	e8 43 df ff ff       	call   11e0 <strcmp@plt>
    329d:	89 c6                	mov    %eax,%esi
    329f:	48 8d 05 e2 33 00 00 	lea    0x33e2(%rip),%rax        # 6688 <__PRETTY_FUNCTION__.0+0x258>
    32a6:	48 89 c7             	mov    %rax,%rdi
    32a9:	b8 00 00 00 00       	mov    $0x0,%eax
    32ae:	e8 fd de ff ff       	call   11b0 <printf@plt>
    32b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    32b7:	48 89 c7             	mov    %rax,%rdi
    32ba:	e8 91 de ff ff       	call   1150 <free@plt>
    32bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    32c3:	48 89 c7             	mov    %rax,%rdi
    32c6:	e8 85 de ff ff       	call   1150 <free@plt>
    32cb:	90                   	nop
    32cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    32d0:	c9                   	leave  
    32d1:	c3                   	ret    

00000000000032d2 <chapt_9_demo_run>:
    32d2:	f3 0f 1e fa          	endbr64 
    32d6:	55                   	push   %rbp
    32d7:	48 89 e5             	mov    %rsp,%rbp
    32da:	48 8b 05 8f 5d 00 00 	mov    0x5d8f(%rip),%rax        # 9070 <memory_boundary_alignment>
    32e1:	48 89 c7             	mov    %rax,%rdi
    32e4:	e8 9f 00 00 00       	call   3388 <print_dividing_line>
    32e9:	b8 00 00 00 00       	mov    $0x0,%eax
    32ee:	e8 1b fd ff ff       	call   300e <string_test>
    32f3:	48 8d 05 d1 33 00 00 	lea    0x33d1(%rip),%rax        # 66cb <__PRETTY_FUNCTION__.0+0x29b>
    32fa:	48 89 c7             	mov    %rax,%rdi
    32fd:	e8 86 00 00 00       	call   3388 <print_dividing_line>
    3302:	90                   	nop
    3303:	5d                   	pop    %rbp
    3304:	c3                   	ret    

0000000000003305 <print_prefix>:
    3305:	f3 0f 1e fa          	endbr64 
    3309:	55                   	push   %rbp
    330a:	48 89 e5             	mov    %rsp,%rbp
    330d:	48 83 ec 20          	sub    $0x20,%rsp
    3311:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3315:	89 f0                	mov    %esi,%eax
    3317:	88 45 e4             	mov    %al,-0x1c(%rbp)
    331a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3321:	00 
    3322:	eb 10                	jmp    3334 <print_prefix+0x2f>
    3324:	0f be 45 e4          	movsbl -0x1c(%rbp),%eax
    3328:	89 c7                	mov    %eax,%edi
    332a:	e8 31 de ff ff       	call   1160 <putchar@plt>
    332f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    3334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3338:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    333c:	72 e6                	jb     3324 <print_prefix+0x1f>
    333e:	90                   	nop
    333f:	90                   	nop
    3340:	c9                   	leave  
    3341:	c3                   	ret    

0000000000003342 <print_suffix>:
    3342:	f3 0f 1e fa          	endbr64 
    3346:	55                   	push   %rbp
    3347:	48 89 e5             	mov    %rsp,%rbp
    334a:	48 83 ec 20          	sub    $0x20,%rsp
    334e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3352:	89 f0                	mov    %esi,%eax
    3354:	88 45 e4             	mov    %al,-0x1c(%rbp)
    3357:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    335e:	00 
    335f:	eb 10                	jmp    3371 <print_suffix+0x2f>
    3361:	0f be 45 e4          	movsbl -0x1c(%rbp),%eax
    3365:	89 c7                	mov    %eax,%edi
    3367:	e8 f4 dd ff ff       	call   1160 <putchar@plt>
    336c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    3371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3375:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    3379:	72 e6                	jb     3361 <print_suffix+0x1f>
    337b:	bf 0a 00 00 00       	mov    $0xa,%edi
    3380:	e8 db dd ff ff       	call   1160 <putchar@plt>
    3385:	90                   	nop
    3386:	c9                   	leave  
    3387:	c3                   	ret    

0000000000003388 <print_dividing_line>:
    3388:	f3 0f 1e fa          	endbr64 
    338c:	55                   	push   %rbp
    338d:	48 89 e5             	mov    %rsp,%rbp
    3390:	48 83 ec 30          	sub    $0x30,%rsp
    3394:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3398:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    339c:	48 89 c7             	mov    %rax,%rdi
    339f:	e8 ec dd ff ff       	call   1190 <strlen@plt>
    33a4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    33a8:	48 83 7d e8 63       	cmpq   $0x63,-0x18(%rbp)
    33ad:	76 0e                	jbe    33bd <print_dividing_line+0x35>
    33af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    33b3:	48 89 c7             	mov    %rax,%rdi
    33b6:	e8 c5 dd ff ff       	call   1180 <puts@plt>
    33bb:	eb 64                	jmp    3421 <print_dividing_line+0x99>
    33bd:	b8 64 00 00 00       	mov    $0x64,%eax
    33c2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    33c6:	48 d1 e8             	shr    %rax
    33c9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    33cd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    33d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    33d5:	48 01 c2             	add    %rax,%rdx
    33d8:	b8 64 00 00 00       	mov    $0x64,%eax
    33dd:	48 29 d0             	sub    %rdx,%rax
    33e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    33e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    33e8:	be 2d 00 00 00       	mov    $0x2d,%esi
    33ed:	48 89 c7             	mov    %rax,%rdi
    33f0:	e8 10 ff ff ff       	call   3305 <print_prefix>
    33f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    33f9:	48 89 c6             	mov    %rax,%rsi
    33fc:	48 8d 05 c9 32 00 00 	lea    0x32c9(%rip),%rax        # 66cc <__PRETTY_FUNCTION__.0+0x29c>
    3403:	48 89 c7             	mov    %rax,%rdi
    3406:	b8 00 00 00 00       	mov    $0x0,%eax
    340b:	e8 a0 dd ff ff       	call   11b0 <printf@plt>
    3410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3414:	be 2d 00 00 00       	mov    $0x2d,%esi
    3419:	48 89 c7             	mov    %rax,%rdi
    341c:	e8 21 ff ff ff       	call   3342 <print_suffix>
    3421:	c9                   	leave  
    3422:	c3                   	ret    

0000000000003423 <multi_dividing_line>:
    3423:	f3 0f 1e fa          	endbr64 
    3427:	55                   	push   %rbp
    3428:	48 89 e5             	mov    %rsp,%rbp
    342b:	41 55                	push   %r13
    342d:	41 54                	push   %r12
    342f:	53                   	push   %rbx
    3430:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    3437:	89 bd dc fe ff ff    	mov    %edi,-0x124(%rbp)
    343d:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
    3444:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    344b:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
    3452:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
    3459:	4c 89 8d 58 ff ff ff 	mov    %r9,-0xa8(%rbp)
    3460:	84 c0                	test   %al,%al
    3462:	74 26                	je     348a <multi_dividing_line+0x67>
    3464:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    346b:	0f 29 8d 70 ff ff ff 	movaps %xmm1,-0x90(%rbp)
    3472:	0f 29 55 80          	movaps %xmm2,-0x80(%rbp)
    3476:	0f 29 5d 90          	movaps %xmm3,-0x70(%rbp)
    347a:	0f 29 65 a0          	movaps %xmm4,-0x60(%rbp)
    347e:	0f 29 6d b0          	movaps %xmm5,-0x50(%rbp)
    3482:	0f 29 75 c0          	movaps %xmm6,-0x40(%rbp)
    3486:	0f 29 7d d0          	movaps %xmm7,-0x30(%rbp)
    348a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3491:	00 00 
    3493:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    349a:	31 c0                	xor    %eax,%eax
    349c:	48 89 e0             	mov    %rsp,%rax
    349f:	48 89 c3             	mov    %rax,%rbx
    34a2:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
    34a8:	48 63 d0             	movslq %eax,%rdx
    34ab:	48 83 ea 01          	sub    $0x1,%rdx
    34af:	48 89 95 f0 fe ff ff 	mov    %rdx,-0x110(%rbp)
    34b6:	48 63 d0             	movslq %eax,%rdx
    34b9:	49 89 d4             	mov    %rdx,%r12
    34bc:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    34c2:	48 63 d0             	movslq %eax,%rdx
    34c5:	49 89 d2             	mov    %rdx,%r10
    34c8:	41 bb 00 00 00 00    	mov    $0x0,%r11d
    34ce:	48 98                	cltq   
    34d0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    34d7:	00 
    34d8:	b8 10 00 00 00       	mov    $0x10,%eax
    34dd:	48 83 e8 01          	sub    $0x1,%rax
    34e1:	48 01 d0             	add    %rdx,%rax
    34e4:	be 10 00 00 00       	mov    $0x10,%esi
    34e9:	ba 00 00 00 00       	mov    $0x0,%edx
    34ee:	48 f7 f6             	div    %rsi
    34f1:	48 6b c0 10          	imul   $0x10,%rax,%rax
    34f5:	48 89 c1             	mov    %rax,%rcx
    34f8:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    34ff:	48 89 e2             	mov    %rsp,%rdx
    3502:	48 29 ca             	sub    %rcx,%rdx
    3505:	48 39 d4             	cmp    %rdx,%rsp
    3508:	74 12                	je     351c <multi_dividing_line+0xf9>
    350a:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    3511:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    3518:	00 00 
    351a:	eb e9                	jmp    3505 <multi_dividing_line+0xe2>
    351c:	48 89 c2             	mov    %rax,%rdx
    351f:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    3525:	48 29 d4             	sub    %rdx,%rsp
    3528:	48 89 c2             	mov    %rax,%rdx
    352b:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    3531:	48 85 d2             	test   %rdx,%rdx
    3534:	74 10                	je     3546 <multi_dividing_line+0x123>
    3536:	25 ff 0f 00 00       	and    $0xfff,%eax
    353b:	48 83 e8 08          	sub    $0x8,%rax
    353f:	48 01 e0             	add    %rsp,%rax
    3542:	48 83 08 00          	orq    $0x0,(%rax)
    3546:	48 89 e0             	mov    %rsp,%rax
    3549:	48 83 c0 07          	add    $0x7,%rax
    354d:	48 c1 e8 03          	shr    $0x3,%rax
    3551:	48 c1 e0 03          	shl    $0x3,%rax
    3555:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    355c:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
    3563:	00 00 00 00 
    3567:	c7 85 10 ff ff ff 10 	movl   $0x10,-0xf0(%rbp)
    356e:	00 00 00 
    3571:	c7 85 14 ff ff ff 30 	movl   $0x30,-0xec(%rbp)
    3578:	00 00 00 
    357b:	48 8d 45 10          	lea    0x10(%rbp),%rax
    357f:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    3586:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    358d:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    3594:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%rbp)
    359b:	00 00 00 
    359e:	e9 82 00 00 00       	jmp    3625 <multi_dividing_line+0x202>
    35a3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    35aa:	8b 95 e0 fe ff ff    	mov    -0x120(%rbp),%edx
    35b0:	48 63 d2             	movslq %edx,%rdx
    35b3:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
    35ba:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
    35be:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    35c5:	48 89 c7             	mov    %rax,%rdi
    35c8:	e8 c3 db ff ff       	call   1190 <strlen@plt>
    35cd:	48 01 85 e8 fe ff ff 	add    %rax,-0x118(%rbp)
    35d4:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    35da:	83 f8 2f             	cmp    $0x2f,%eax
    35dd:	77 23                	ja     3602 <multi_dividing_line+0x1df>
    35df:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    35e6:	8b 95 10 ff ff ff    	mov    -0xf0(%rbp),%edx
    35ec:	89 d2                	mov    %edx,%edx
    35ee:	48 01 d0             	add    %rdx,%rax
    35f1:	8b 95 10 ff ff ff    	mov    -0xf0(%rbp),%edx
    35f7:	83 c2 08             	add    $0x8,%edx
    35fa:	89 95 10 ff ff ff    	mov    %edx,-0xf0(%rbp)
    3600:	eb 12                	jmp    3614 <multi_dividing_line+0x1f1>
    3602:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    3609:	48 8d 50 08          	lea    0x8(%rax),%rdx
    360d:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
    3614:	48 8b 00             	mov    (%rax),%rax
    3617:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    361e:	83 85 e0 fe ff ff 01 	addl   $0x1,-0x120(%rbp)
    3625:	8b 85 e0 fe ff ff    	mov    -0x120(%rbp),%eax
    362b:	3b 85 dc fe ff ff    	cmp    -0x124(%rbp),%eax
    3631:	0f 8c 6c ff ff ff    	jl     35a3 <multi_dividing_line+0x180>
    3637:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
    363d:	83 e8 01             	sub    $0x1,%eax
    3640:	48 98                	cltq   
    3642:	48 01 85 e8 fe ff ff 	add    %rax,-0x118(%rbp)
    3649:	b8 64 00 00 00       	mov    $0x64,%eax
    364e:	48 2b 85 e8 fe ff ff 	sub    -0x118(%rbp),%rax
    3655:	48 d1 e8             	shr    %rax
    3658:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    365f:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    3666:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    366d:	48 01 c2             	add    %rax,%rdx
    3670:	b8 64 00 00 00       	mov    $0x64,%eax
    3675:	48 29 d0             	sub    %rdx,%rax
    3678:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    367f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    3686:	be 2d 00 00 00       	mov    $0x2d,%esi
    368b:	48 89 c7             	mov    %rax,%rdi
    368e:	e8 72 fc ff ff       	call   3305 <print_prefix>
    3693:	c7 85 e4 fe ff ff 00 	movl   $0x0,-0x11c(%rbp)
    369a:	00 00 00 
    369d:	eb 4d                	jmp    36ec <multi_dividing_line+0x2c9>
    369f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    36a6:	8b 95 e4 fe ff ff    	mov    -0x11c(%rbp),%edx
    36ac:	48 63 d2             	movslq %edx,%rdx
    36af:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    36b3:	48 89 c6             	mov    %rax,%rsi
    36b6:	48 8d 05 0f 30 00 00 	lea    0x300f(%rip),%rax        # 66cc <__PRETTY_FUNCTION__.0+0x29c>
    36bd:	48 89 c7             	mov    %rax,%rdi
    36c0:	b8 00 00 00 00       	mov    $0x0,%eax
    36c5:	e8 e6 da ff ff       	call   11b0 <printf@plt>
    36ca:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
    36d0:	83 e8 01             	sub    $0x1,%eax
    36d3:	39 85 e4 fe ff ff    	cmp    %eax,-0x11c(%rbp)
    36d9:	74 0a                	je     36e5 <multi_dividing_line+0x2c2>
    36db:	bf 2d 00 00 00       	mov    $0x2d,%edi
    36e0:	e8 7b da ff ff       	call   1160 <putchar@plt>
    36e5:	83 85 e4 fe ff ff 01 	addl   $0x1,-0x11c(%rbp)
    36ec:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
    36f2:	3b 85 dc fe ff ff    	cmp    -0x124(%rbp),%eax
    36f8:	7c a5                	jl     369f <multi_dividing_line+0x27c>
    36fa:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    3701:	be 2d 00 00 00       	mov    $0x2d,%esi
    3706:	48 89 c7             	mov    %rax,%rdi
    3709:	e8 34 fc ff ff       	call   3342 <print_suffix>
    370e:	48 89 dc             	mov    %rbx,%rsp
    3711:	90                   	nop
    3712:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    3719:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    3720:	00 00 
    3722:	74 05                	je     3729 <multi_dividing_line+0x306>
    3724:	e8 77 da ff ff       	call   11a0 <__stack_chk_fail@plt>
    3729:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    372d:	5b                   	pop    %rbx
    372e:	41 5c                	pop    %r12
    3730:	41 5d                	pop    %r13
    3732:	5d                   	pop    %rbp
    3733:	c3                   	ret    

0000000000003734 <search>:
    3734:	f3 0f 1e fa          	endbr64 
    3738:	55                   	push   %rbp
    3739:	48 89 e5             	mov    %rsp,%rbp
    373c:	48 83 ec 20          	sub    $0x20,%rsp
    3740:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3744:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3748:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    374c:	48 89 c7             	mov    %rax,%rdi
    374f:	e8 3c da ff ff       	call   1190 <strlen@plt>
    3754:	89 45 f8             	mov    %eax,-0x8(%rbp)
    3757:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    375b:	48 8b 00             	mov    (%rax),%rax
    375e:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3761:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    3768:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    376f:	eb 3c                	jmp    37ad <search+0x79>
    3771:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3775:	48 8b 40 08          	mov    0x8(%rax),%rax
    3779:	8b 55 f0             	mov    -0x10(%rbp),%edx
    377c:	48 63 ca             	movslq %edx,%rcx
    377f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3783:	48 01 ca             	add    %rcx,%rdx
    3786:	0f b6 12             	movzbl (%rdx),%edx
    3789:	48 0f be d2          	movsbq %dl,%rdx
    378d:	48 c1 e2 03          	shl    $0x3,%rdx
    3791:	48 01 d0             	add    %rdx,%rax
    3794:	48 8b 00             	mov    (%rax),%rax
    3797:	8b 55 f4             	mov    -0xc(%rbp),%edx
    379a:	48 63 d2             	movslq %edx,%rdx
    379d:	48 c1 e2 02          	shl    $0x2,%rdx
    37a1:	48 01 d0             	add    %rdx,%rax
    37a4:	8b 00                	mov    (%rax),%eax
    37a6:	89 45 f4             	mov    %eax,-0xc(%rbp)
    37a9:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    37ad:	8b 45 f0             	mov    -0x10(%rbp),%eax
    37b0:	3b 45 f8             	cmp    -0x8(%rbp),%eax
    37b3:	7d 08                	jge    37bd <search+0x89>
    37b5:	8b 45 f4             	mov    -0xc(%rbp),%eax
    37b8:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    37bb:	7c b4                	jl     3771 <search+0x3d>
    37bd:	8b 45 f4             	mov    -0xc(%rbp),%eax
    37c0:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    37c3:	75 0a                	jne    37cf <search+0x9b>
    37c5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    37c8:	2b 45 fc             	sub    -0x4(%rbp),%eax
    37cb:	48 98                	cltq   
    37cd:	eb 07                	jmp    37d6 <search+0xa2>
    37cf:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    37d6:	c9                   	leave  
    37d7:	c3                   	ret    

00000000000037d8 <kmp_strstr>:
    37d8:	f3 0f 1e fa          	endbr64 
    37dc:	55                   	push   %rbp
    37dd:	48 89 e5             	mov    %rsp,%rbp
    37e0:	48 83 ec 20          	sub    $0x20,%rsp
    37e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    37e8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    37ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37f0:	48 8b 48 10          	mov    0x10(%rax),%rcx
    37f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    37f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37fc:	48 89 d6             	mov    %rdx,%rsi
    37ff:	48 89 c7             	mov    %rax,%rdi
    3802:	ff d1                	call   *%rcx
    3804:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3808:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)
    380d:	75 07                	jne    3816 <kmp_strstr+0x3e>
    380f:	b8 00 00 00 00       	mov    $0x0,%eax
    3814:	eb 0b                	jmp    3821 <kmp_strstr+0x49>
    3816:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    381a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    381e:	48 01 d0             	add    %rdx,%rax
    3821:	c9                   	leave  
    3822:	c3                   	ret    

0000000000003823 <allocate_dfa_memory>:
    3823:	f3 0f 1e fa          	endbr64 
    3827:	55                   	push   %rbp
    3828:	48 89 e5             	mov    %rsp,%rbp
    382b:	53                   	push   %rbx
    382c:	48 83 ec 38          	sub    $0x38,%rsp
    3830:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3834:	bf 00 08 00 00       	mov    $0x800,%edi
    3839:	e8 c2 d9 ff ff       	call   1200 <malloc@plt>
    383e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3842:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    3849:	00 
    384a:	eb 6c                	jmp    38b8 <allocate_dfa_memory+0x95>
    384c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3850:	48 c1 e0 02          	shl    $0x2,%rax
    3854:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3858:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    385f:	00 
    3860:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3864:	48 8d 1c 11          	lea    (%rcx,%rdx,1),%rbx
    3868:	48 89 c7             	mov    %rax,%rdi
    386b:	e8 90 d9 ff ff       	call   1200 <malloc@plt>
    3870:	48 89 03             	mov    %rax,(%rbx)
    3873:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    387a:	00 
    387b:	eb 2c                	jmp    38a9 <allocate_dfa_memory+0x86>
    387d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3881:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3888:	00 
    3889:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    388d:	48 01 d0             	add    %rdx,%rax
    3890:	48 8b 00             	mov    (%rax),%rax
    3893:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3897:	48 c1 e2 02          	shl    $0x2,%rdx
    389b:	48 01 d0             	add    %rdx,%rax
    389e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    38a4:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
    38a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    38ad:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    38b1:	72 ca                	jb     387d <allocate_dfa_memory+0x5a>
    38b3:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    38b8:	48 81 7d d8 ff 00 00 	cmpq   $0xff,-0x28(%rbp)
    38bf:	00 
    38c0:	76 8a                	jbe    384c <allocate_dfa_memory+0x29>
    38c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    38ca:	c9                   	leave  
    38cb:	c3                   	ret    

00000000000038cc <init_dfa>:
    38cc:	f3 0f 1e fa          	endbr64 
    38d0:	55                   	push   %rbp
    38d1:	48 89 e5             	mov    %rsp,%rbp
    38d4:	48 83 ec 30          	sub    $0x30,%rsp
    38d8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    38dc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    38e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    38e4:	48 89 c7             	mov    %rax,%rdi
    38e7:	e8 37 ff ff ff       	call   3823 <allocate_dfa_memory>
    38ec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    38f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    38f4:	0f b6 00             	movzbl (%rax),%eax
    38f7:	48 0f be c0          	movsbq %al,%rax
    38fb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3902:	00 
    3903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3907:	48 01 d0             	add    %rdx,%rax
    390a:	48 8b 00             	mov    (%rax),%rax
    390d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    3913:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    391a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
    3921:	e9 da 00 00 00       	jmp    3a00 <init_dfa+0x134>
    3926:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    392d:	eb 51                	jmp    3980 <init_dfa+0xb4>
    392f:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3932:	48 98                	cltq   
    3934:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    393b:	00 
    393c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3940:	48 01 d0             	add    %rdx,%rax
    3943:	48 8b 00             	mov    (%rax),%rax
    3946:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3949:	48 63 d2             	movslq %edx,%rdx
    394c:	48 c1 e2 02          	shl    $0x2,%rdx
    3950:	48 01 d0             	add    %rdx,%rax
    3953:	8b 55 f4             	mov    -0xc(%rbp),%edx
    3956:	48 63 d2             	movslq %edx,%rdx
    3959:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    3960:	00 
    3961:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3965:	48 01 ca             	add    %rcx,%rdx
    3968:	48 8b 12             	mov    (%rdx),%rdx
    396b:	8b 4d f0             	mov    -0x10(%rbp),%ecx
    396e:	48 63 c9             	movslq %ecx,%rcx
    3971:	48 c1 e1 02          	shl    $0x2,%rcx
    3975:	48 01 ca             	add    %rcx,%rdx
    3978:	8b 00                	mov    (%rax),%eax
    397a:	89 02                	mov    %eax,(%rdx)
    397c:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3980:	81 7d f4 ff 00 00 00 	cmpl   $0xff,-0xc(%rbp)
    3987:	7e a6                	jle    392f <init_dfa+0x63>
    3989:	8b 45 f0             	mov    -0x10(%rbp),%eax
    398c:	48 63 d0             	movslq %eax,%rdx
    398f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3993:	48 01 d0             	add    %rdx,%rax
    3996:	0f b6 00             	movzbl (%rax),%eax
    3999:	48 0f be c0          	movsbq %al,%rax
    399d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    39a4:	00 
    39a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39a9:	48 01 d0             	add    %rdx,%rax
    39ac:	48 8b 00             	mov    (%rax),%rax
    39af:	8b 55 f0             	mov    -0x10(%rbp),%edx
    39b2:	48 63 d2             	movslq %edx,%rdx
    39b5:	48 c1 e2 02          	shl    $0x2,%rdx
    39b9:	48 01 d0             	add    %rdx,%rax
    39bc:	8b 55 f0             	mov    -0x10(%rbp),%edx
    39bf:	83 c2 01             	add    $0x1,%edx
    39c2:	89 10                	mov    %edx,(%rax)
    39c4:	8b 45 f0             	mov    -0x10(%rbp),%eax
    39c7:	48 63 d0             	movslq %eax,%rdx
    39ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    39ce:	48 01 d0             	add    %rdx,%rax
    39d1:	0f b6 00             	movzbl (%rax),%eax
    39d4:	48 0f be c0          	movsbq %al,%rax
    39d8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    39df:	00 
    39e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39e4:	48 01 d0             	add    %rdx,%rax
    39e7:	48 8b 00             	mov    (%rax),%rax
    39ea:	8b 55 ec             	mov    -0x14(%rbp),%edx
    39ed:	48 63 d2             	movslq %edx,%rdx
    39f0:	48 c1 e2 02          	shl    $0x2,%rdx
    39f4:	48 01 d0             	add    %rdx,%rax
    39f7:	8b 00                	mov    (%rax),%eax
    39f9:	89 45 ec             	mov    %eax,-0x14(%rbp)
    39fc:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    3a00:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3a03:	48 98                	cltq   
    3a05:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    3a09:	0f 82 17 ff ff ff    	jb     3926 <init_dfa+0x5a>
    3a0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a13:	c9                   	leave  
    3a14:	c3                   	ret    

0000000000003a15 <kmp_init>:
    3a15:	f3 0f 1e fa          	endbr64 
    3a19:	55                   	push   %rbp
    3a1a:	48 89 e5             	mov    %rsp,%rbp
    3a1d:	48 83 ec 10          	sub    $0x10,%rsp
    3a21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a25:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3a29:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    3a2e:	0f 84 80 00 00 00    	je     3ab4 <kmp_init+0x9f>
    3a34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a38:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3a3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a43:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3a4a:	00 
    3a4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a4f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3a56:	00 
    3a57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a5b:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    3a62:	00 
    3a63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3a67:	48 89 c7             	mov    %rax,%rdi
    3a6a:	e8 21 d7 ff ff       	call   1190 <strlen@plt>
    3a6f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3a73:	48 89 02             	mov    %rax,(%rdx)
    3a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a7a:	48 8b 10             	mov    (%rax),%rdx
    3a7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3a81:	48 89 d6             	mov    %rdx,%rsi
    3a84:	48 89 c7             	mov    %rax,%rdi
    3a87:	e8 40 fe ff ff       	call   38cc <init_dfa>
    3a8c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3a90:	48 89 42 08          	mov    %rax,0x8(%rdx)
    3a94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a98:	48 8d 15 95 fc ff ff 	lea    -0x36b(%rip),%rdx        # 3734 <search>
    3a9f:	48 89 50 10          	mov    %rdx,0x10(%rax)
    3aa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aa7:	48 8d 15 2a fd ff ff 	lea    -0x2d6(%rip),%rdx        # 37d8 <kmp_strstr>
    3aae:	48 89 50 18          	mov    %rdx,0x18(%rax)
    3ab2:	eb 01                	jmp    3ab5 <kmp_init+0xa0>
    3ab4:	90                   	nop
    3ab5:	c9                   	leave  
    3ab6:	c3                   	ret    

0000000000003ab7 <kmp_new_and_init>:
    3ab7:	f3 0f 1e fa          	endbr64 
    3abb:	55                   	push   %rbp
    3abc:	48 89 e5             	mov    %rsp,%rbp
    3abf:	48 83 ec 20          	sub    $0x20,%rsp
    3ac3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3ac7:	bf 20 00 00 00       	mov    $0x20,%edi
    3acc:	e8 2f d7 ff ff       	call   1200 <malloc@plt>
    3ad1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3ad5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3add:	48 89 d6             	mov    %rdx,%rsi
    3ae0:	48 89 c7             	mov    %rax,%rdi
    3ae3:	e8 2d ff ff ff       	call   3a15 <kmp_init>
    3ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aec:	c9                   	leave  
    3aed:	c3                   	ret    

0000000000003aee <kmp_delete>:
    3aee:	f3 0f 1e fa          	endbr64 
    3af2:	55                   	push   %rbp
    3af3:	48 89 e5             	mov    %rsp,%rbp
    3af6:	48 83 ec 20          	sub    $0x20,%rsp
    3afa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3afe:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3b03:	74 7c                	je     3b81 <kmp_delete+0x93>
    3b05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b09:	48 8b 40 08          	mov    0x8(%rax),%rax
    3b0d:	48 85 c0             	test   %rax,%rax
    3b10:	74 70                	je     3b82 <kmp_delete+0x94>
    3b12:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3b19:	00 
    3b1a:	eb 3d                	jmp    3b59 <kmp_delete+0x6b>
    3b1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b20:	48 8b 40 08          	mov    0x8(%rax),%rax
    3b24:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3b28:	48 c1 e2 03          	shl    $0x3,%rdx
    3b2c:	48 01 d0             	add    %rdx,%rax
    3b2f:	48 8b 00             	mov    (%rax),%rax
    3b32:	48 89 c7             	mov    %rax,%rdi
    3b35:	e8 16 d6 ff ff       	call   1150 <free@plt>
    3b3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b3e:	48 8b 40 08          	mov    0x8(%rax),%rax
    3b42:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3b46:	48 c1 e2 03          	shl    $0x3,%rdx
    3b4a:	48 01 d0             	add    %rdx,%rax
    3b4d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3b54:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    3b59:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
    3b60:	00 
    3b61:	76 b9                	jbe    3b1c <kmp_delete+0x2e>
    3b63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b67:	48 8b 40 08          	mov    0x8(%rax),%rax
    3b6b:	48 89 c7             	mov    %rax,%rdi
    3b6e:	e8 dd d5 ff ff       	call   1150 <free@plt>
    3b73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b77:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3b7e:	00 
    3b7f:	eb 01                	jmp    3b82 <kmp_delete+0x94>
    3b81:	90                   	nop
    3b82:	c9                   	leave  
    3b83:	c3                   	ret    

0000000000003b84 <kmp_new_test>:
    3b84:	f3 0f 1e fa          	endbr64 
    3b88:	55                   	push   %rbp
    3b89:	48 89 e5             	mov    %rsp,%rbp
    3b8c:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    3b93:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3b9a:	00 00 
    3b9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3ba0:	31 c0                	xor    %eax,%eax
    3ba2:	48 c7 85 78 ff ff ff 	movq   $0x20,-0x88(%rbp)
    3ba9:	20 00 00 00 
    3bad:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    3bb4:	48 89 c6             	mov    %rax,%rsi
    3bb7:	48 8d 05 1a 2b 00 00 	lea    0x2b1a(%rip),%rax        # 66d8 <__PRETTY_FUNCTION__.0+0x2a8>
    3bbe:	48 89 c7             	mov    %rax,%rdi
    3bc1:	b8 00 00 00 00       	mov    $0x0,%eax
    3bc6:	e8 e5 d5 ff ff       	call   11b0 <printf@plt>
    3bcb:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3bcf:	48 8d 15 14 2b 00 00 	lea    0x2b14(%rip),%rdx        # 66ea <__PRETTY_FUNCTION__.0+0x2ba>
    3bd6:	48 89 d6             	mov    %rdx,%rsi
    3bd9:	48 89 c7             	mov    %rax,%rdi
    3bdc:	e8 34 fe ff ff       	call   3a15 <kmp_init>
    3be1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3be5:	48 89 c6             	mov    %rax,%rsi
    3be8:	48 8d 05 00 2b 00 00 	lea    0x2b00(%rip),%rax        # 66ef <__PRETTY_FUNCTION__.0+0x2bf>
    3bef:	48 89 c7             	mov    %rax,%rdi
    3bf2:	b8 00 00 00 00       	mov    $0x0,%eax
    3bf7:	e8 b4 d5 ff ff       	call   11b0 <printf@plt>
    3bfc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3c00:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    3c04:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    3c08:	48 89 c6             	mov    %rax,%rsi
    3c0b:	48 8d 05 f0 2a 00 00 	lea    0x2af0(%rip),%rax        # 6702 <__PRETTY_FUNCTION__.0+0x2d2>
    3c12:	48 89 c7             	mov    %rax,%rdi
    3c15:	b8 00 00 00 00       	mov    $0x0,%eax
    3c1a:	e8 91 d5 ff ff       	call   11b0 <printf@plt>
    3c1f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3c23:	48 83 c0 08          	add    $0x8,%rax
    3c27:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    3c2b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3c2f:	48 89 c6             	mov    %rax,%rsi
    3c32:	48 8d 05 e3 2a 00 00 	lea    0x2ae3(%rip),%rax        # 671c <__PRETTY_FUNCTION__.0+0x2ec>
    3c39:	48 89 c7             	mov    %rax,%rdi
    3c3c:	b8 00 00 00 00       	mov    $0x0,%eax
    3c41:	e8 6a d5 ff ff       	call   11b0 <printf@plt>
    3c46:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3c4a:	48 83 c0 10          	add    $0x10,%rax
    3c4e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    3c52:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    3c56:	48 89 c6             	mov    %rax,%rsi
    3c59:	48 8d 05 cf 2a 00 00 	lea    0x2acf(%rip),%rax        # 672f <__PRETTY_FUNCTION__.0+0x2ff>
    3c60:	48 89 c7             	mov    %rax,%rdi
    3c63:	b8 00 00 00 00       	mov    $0x0,%eax
    3c68:	e8 43 d5 ff ff       	call   11b0 <printf@plt>
    3c6d:	bf 0a 00 00 00       	mov    $0xa,%edi
    3c72:	e8 e9 d4 ff ff       	call   1160 <putchar@plt>
    3c77:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3c7b:	48 89 c6             	mov    %rax,%rsi
    3c7e:	48 8d 05 bf 2a 00 00 	lea    0x2abf(%rip),%rax        # 6744 <__PRETTY_FUNCTION__.0+0x314>
    3c85:	48 89 c7             	mov    %rax,%rdi
    3c88:	b8 00 00 00 00       	mov    $0x0,%eax
    3c8d:	e8 1e d5 ff ff       	call   11b0 <printf@plt>
    3c92:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3c96:	48 89 c6             	mov    %rax,%rsi
    3c99:	48 8d 05 b8 2a 00 00 	lea    0x2ab8(%rip),%rax        # 6758 <__PRETTY_FUNCTION__.0+0x328>
    3ca0:	48 89 c7             	mov    %rax,%rdi
    3ca3:	b8 00 00 00 00       	mov    $0x0,%eax
    3ca8:	e8 03 d5 ff ff       	call   11b0 <printf@plt>
    3cad:	48 8d 05 b6 2a 00 00 	lea    0x2ab6(%rip),%rax        # 676a <__PRETTY_FUNCTION__.0+0x33a>
    3cb4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    3cb8:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    3cbc:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    3cc0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3cc4:	48 89 d6             	mov    %rdx,%rsi
    3cc7:	48 89 c7             	mov    %rax,%rdi
    3cca:	ff d1                	call   *%rcx
    3ccc:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    3cd0:	bf 0a 00 00 00       	mov    $0xa,%edi
    3cd5:	e8 86 d4 ff ff       	call   1160 <putchar@plt>
    3cda:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3cde:	48 89 c6             	mov    %rax,%rsi
    3ce1:	48 8d 05 a0 2a 00 00 	lea    0x2aa0(%rip),%rax        # 6788 <__PRETTY_FUNCTION__.0+0x358>
    3ce8:	48 89 c7             	mov    %rax,%rdi
    3ceb:	b8 00 00 00 00       	mov    $0x0,%eax
    3cf0:	e8 bb d4 ff ff       	call   11b0 <printf@plt>
    3cf5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3cf9:	48 89 c6             	mov    %rax,%rsi
    3cfc:	48 8d 05 93 2a 00 00 	lea    0x2a93(%rip),%rax        # 6796 <__PRETTY_FUNCTION__.0+0x366>
    3d03:	48 89 c7             	mov    %rax,%rdi
    3d06:	b8 00 00 00 00       	mov    $0x0,%eax
    3d0b:	e8 a0 d4 ff ff       	call   11b0 <printf@plt>
    3d10:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    3d14:	48 89 c6             	mov    %rax,%rsi
    3d17:	48 8d 05 8d 2a 00 00 	lea    0x2a8d(%rip),%rax        # 67ab <__PRETTY_FUNCTION__.0+0x37b>
    3d1e:	48 89 c7             	mov    %rax,%rdi
    3d21:	b8 00 00 00 00       	mov    $0x0,%eax
    3d26:	e8 85 d4 ff ff       	call   11b0 <printf@plt>
    3d2b:	48 8d 05 8f 2a 00 00 	lea    0x2a8f(%rip),%rax        # 67c1 <__PRETTY_FUNCTION__.0+0x391>
    3d32:	48 89 c7             	mov    %rax,%rdi
    3d35:	b8 00 00 00 00       	mov    $0x0,%eax
    3d3a:	e8 71 d4 ff ff       	call   11b0 <printf@plt>
    3d3f:	48 83 7d a0 ff       	cmpq   $0xffffffffffffffff,-0x60(%rbp)
    3d44:	75 11                	jne    3d57 <kmp_new_test+0x1d3>
    3d46:	48 8d 05 86 2a 00 00 	lea    0x2a86(%rip),%rax        # 67d3 <__PRETTY_FUNCTION__.0+0x3a3>
    3d4d:	48 89 c7             	mov    %rax,%rdi
    3d50:	e8 2b d4 ff ff       	call   1180 <puts@plt>
    3d55:	eb 4e                	jmp    3da5 <kmp_new_test+0x221>
    3d57:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
    3d5e:	00 00 00 00 
    3d62:	eb 2a                	jmp    3d8e <kmp_new_test+0x20a>
    3d64:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    3d68:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    3d6f:	48 01 c2             	add    %rax,%rdx
    3d72:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3d76:	48 01 d0             	add    %rdx,%rax
    3d79:	0f b6 00             	movzbl (%rax),%eax
    3d7c:	0f be c0             	movsbl %al,%eax
    3d7f:	89 c7                	mov    %eax,%edi
    3d81:	e8 da d3 ff ff       	call   1160 <putchar@plt>
    3d86:	48 83 85 70 ff ff ff 	addq   $0x1,-0x90(%rbp)
    3d8d:	01 
    3d8e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3d92:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
    3d99:	72 c9                	jb     3d64 <kmp_new_test+0x1e0>
    3d9b:	bf 0a 00 00 00       	mov    $0xa,%edi
    3da0:	e8 bb d3 ff ff       	call   1160 <putchar@plt>
    3da5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3da9:	48 89 c7             	mov    %rax,%rdi
    3dac:	e8 3d fd ff ff       	call   3aee <kmp_delete>
    3db1:	bf 0a 00 00 00       	mov    $0xa,%edi
    3db6:	e8 a5 d3 ff ff       	call   1160 <putchar@plt>
    3dbb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    3dbf:	48 8d 15 24 29 00 00 	lea    0x2924(%rip),%rdx        # 66ea <__PRETTY_FUNCTION__.0+0x2ba>
    3dc6:	48 89 d6             	mov    %rdx,%rsi
    3dc9:	48 89 c7             	mov    %rax,%rdi
    3dcc:	e8 44 fc ff ff       	call   3a15 <kmp_init>
    3dd1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    3dd5:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    3dd9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    3ddd:	48 89 d6             	mov    %rdx,%rsi
    3de0:	48 89 c7             	mov    %rax,%rdi
    3de3:	ff d1                	call   *%rcx
    3de5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3de9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ded:	48 89 c6             	mov    %rax,%rsi
    3df0:	48 8d 05 e6 29 00 00 	lea    0x29e6(%rip),%rax        # 67dd <__PRETTY_FUNCTION__.0+0x3ad>
    3df7:	48 89 c7             	mov    %rax,%rdi
    3dfa:	b8 00 00 00 00       	mov    $0x0,%eax
    3dff:	e8 ac d3 ff ff       	call   11b0 <printf@plt>
    3e04:	48 8d 05 b6 29 00 00 	lea    0x29b6(%rip),%rax        # 67c1 <__PRETTY_FUNCTION__.0+0x391>
    3e0b:	48 89 c7             	mov    %rax,%rdi
    3e0e:	b8 00 00 00 00       	mov    $0x0,%eax
    3e13:	e8 98 d3 ff ff       	call   11b0 <printf@plt>
    3e18:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    3e1d:	75 11                	jne    3e30 <kmp_new_test+0x2ac>
    3e1f:	48 8d 05 ad 29 00 00 	lea    0x29ad(%rip),%rax        # 67d3 <__PRETTY_FUNCTION__.0+0x3a3>
    3e26:	48 89 c7             	mov    %rax,%rdi
    3e29:	e8 52 d3 ff ff       	call   1180 <puts@plt>
    3e2e:	eb 4c                	jmp    3e7c <kmp_new_test+0x2f8>
    3e30:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
    3e37:	00 00 00 
    3e3a:	eb 24                	jmp    3e60 <kmp_new_test+0x2dc>
    3e3c:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    3e42:	48 63 d0             	movslq %eax,%rdx
    3e45:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3e49:	48 01 d0             	add    %rdx,%rax
    3e4c:	0f b6 00             	movzbl (%rax),%eax
    3e4f:	0f be c0             	movsbl %al,%eax
    3e52:	89 c7                	mov    %eax,%edi
    3e54:	e8 07 d3 ff ff       	call   1160 <putchar@plt>
    3e59:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
    3e60:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    3e66:	48 63 d0             	movslq %eax,%rdx
    3e69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3e6d:	48 39 c2             	cmp    %rax,%rdx
    3e70:	72 ca                	jb     3e3c <kmp_new_test+0x2b8>
    3e72:	bf 0a 00 00 00       	mov    $0xa,%edi
    3e77:	e8 e4 d2 ff ff       	call   1160 <putchar@plt>
    3e7c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    3e80:	48 89 c7             	mov    %rax,%rdi
    3e83:	e8 66 fc ff ff       	call   3aee <kmp_delete>
    3e88:	90                   	nop
    3e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e8d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    3e94:	00 00 
    3e96:	74 05                	je     3e9d <kmp_new_test+0x319>
    3e98:	e8 03 d3 ff ff       	call   11a0 <__stack_chk_fail@plt>
    3e9d:	c9                   	leave  
    3e9e:	c3                   	ret    

0000000000003e9f <kmp_search_test>:
    3e9f:	f3 0f 1e fa          	endbr64 
    3ea3:	55                   	push   %rbp
    3ea4:	48 89 e5             	mov    %rsp,%rbp
    3ea7:	48 83 ec 30          	sub    $0x30,%rsp
    3eab:	48 8d 05 40 29 00 00 	lea    0x2940(%rip),%rax        # 67f2 <__PRETTY_FUNCTION__.0+0x3c2>
    3eb2:	48 89 c7             	mov    %rax,%rdi
    3eb5:	e8 fd fb ff ff       	call   3ab7 <kmp_new_and_init>
    3eba:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3ebe:	48 8d 05 a5 28 00 00 	lea    0x28a5(%rip),%rax        # 676a <__PRETTY_FUNCTION__.0+0x33a>
    3ec5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3ec9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ecd:	48 8b 48 18          	mov    0x18(%rax),%rcx
    3ed1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ed5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ed9:	48 89 d6             	mov    %rdx,%rsi
    3edc:	48 89 c7             	mov    %rax,%rdi
    3edf:	ff d1                	call   *%rcx
    3ee1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3ee5:	bf 0a 00 00 00       	mov    $0xa,%edi
    3eea:	e8 71 d2 ff ff       	call   1160 <putchar@plt>
    3eef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ef3:	48 89 c6             	mov    %rax,%rsi
    3ef6:	48 8d 05 8b 28 00 00 	lea    0x288b(%rip),%rax        # 6788 <__PRETTY_FUNCTION__.0+0x358>
    3efd:	48 89 c7             	mov    %rax,%rdi
    3f00:	b8 00 00 00 00       	mov    $0x0,%eax
    3f05:	e8 a6 d2 ff ff       	call   11b0 <printf@plt>
    3f0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3f0e:	48 89 c6             	mov    %rax,%rsi
    3f11:	48 8d 05 c5 28 00 00 	lea    0x28c5(%rip),%rax        # 67dd <__PRETTY_FUNCTION__.0+0x3ad>
    3f18:	48 89 c7             	mov    %rax,%rdi
    3f1b:	b8 00 00 00 00       	mov    $0x0,%eax
    3f20:	e8 8b d2 ff ff       	call   11b0 <printf@plt>
    3f25:	48 8d 05 95 28 00 00 	lea    0x2895(%rip),%rax        # 67c1 <__PRETTY_FUNCTION__.0+0x391>
    3f2c:	48 89 c7             	mov    %rax,%rdi
    3f2f:	b8 00 00 00 00       	mov    $0x0,%eax
    3f34:	e8 77 d2 ff ff       	call   11b0 <printf@plt>
    3f39:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3f3e:	75 11                	jne    3f51 <kmp_search_test+0xb2>
    3f40:	48 8d 05 8c 28 00 00 	lea    0x288c(%rip),%rax        # 67d3 <__PRETTY_FUNCTION__.0+0x3a3>
    3f47:	48 89 c7             	mov    %rax,%rdi
    3f4a:	e8 31 d2 ff ff       	call   1180 <puts@plt>
    3f4f:	eb 43                	jmp    3f94 <kmp_search_test+0xf5>
    3f51:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    3f58:	eb 1e                	jmp    3f78 <kmp_search_test+0xd9>
    3f5a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3f5d:	48 63 d0             	movslq %eax,%rdx
    3f60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3f64:	48 01 d0             	add    %rdx,%rax
    3f67:	0f b6 00             	movzbl (%rax),%eax
    3f6a:	0f be c0             	movsbl %al,%eax
    3f6d:	89 c7                	mov    %eax,%edi
    3f6f:	e8 ec d1 ff ff       	call   1160 <putchar@plt>
    3f74:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    3f78:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3f7b:	48 63 d0             	movslq %eax,%rdx
    3f7e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f82:	48 8b 00             	mov    (%rax),%rax
    3f85:	48 39 c2             	cmp    %rax,%rdx
    3f88:	72 d0                	jb     3f5a <kmp_search_test+0xbb>
    3f8a:	bf 0a 00 00 00       	mov    $0xa,%edi
    3f8f:	e8 cc d1 ff ff       	call   1160 <putchar@plt>
    3f94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f98:	48 8b 48 10          	mov    0x10(%rax),%rcx
    3f9c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3fa0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3fa4:	48 89 d6             	mov    %rdx,%rsi
    3fa7:	48 89 c7             	mov    %rax,%rdi
    3faa:	ff d1                	call   *%rcx
    3fac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3fb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fb4:	48 89 c6             	mov    %rax,%rsi
    3fb7:	48 8d 05 ed 27 00 00 	lea    0x27ed(%rip),%rax        # 67ab <__PRETTY_FUNCTION__.0+0x37b>
    3fbe:	48 89 c7             	mov    %rax,%rdi
    3fc1:	b8 00 00 00 00       	mov    $0x0,%eax
    3fc6:	e8 e5 d1 ff ff       	call   11b0 <printf@plt>
    3fcb:	48 8d 05 ef 27 00 00 	lea    0x27ef(%rip),%rax        # 67c1 <__PRETTY_FUNCTION__.0+0x391>
    3fd2:	48 89 c7             	mov    %rax,%rdi
    3fd5:	b8 00 00 00 00       	mov    $0x0,%eax
    3fda:	e8 d1 d1 ff ff       	call   11b0 <printf@plt>
    3fdf:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)
    3fe4:	75 11                	jne    3ff7 <kmp_search_test+0x158>
    3fe6:	48 8d 05 e6 27 00 00 	lea    0x27e6(%rip),%rax        # 67d3 <__PRETTY_FUNCTION__.0+0x3a3>
    3fed:	48 89 c7             	mov    %rax,%rdi
    3ff0:	e8 8b d1 ff ff       	call   1180 <puts@plt>
    3ff5:	eb 45                	jmp    403c <kmp_search_test+0x19d>
    3ff7:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    3ffe:	00 
    3fff:	eb 24                	jmp    4025 <kmp_search_test+0x186>
    4001:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4005:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4009:	48 01 c2             	add    %rax,%rdx
    400c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4010:	48 01 d0             	add    %rdx,%rax
    4013:	0f b6 00             	movzbl (%rax),%eax
    4016:	0f be c0             	movsbl %al,%eax
    4019:	89 c7                	mov    %eax,%edi
    401b:	e8 40 d1 ff ff       	call   1160 <putchar@plt>
    4020:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    4025:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4029:	48 8b 00             	mov    (%rax),%rax
    402c:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    4030:	72 cf                	jb     4001 <kmp_search_test+0x162>
    4032:	bf 0a 00 00 00       	mov    $0xa,%edi
    4037:	e8 24 d1 ff ff       	call   1160 <putchar@plt>
    403c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4040:	48 89 c7             	mov    %rax,%rdi
    4043:	e8 a6 fa ff ff       	call   3aee <kmp_delete>
    4048:	90                   	nop
    4049:	c9                   	leave  
    404a:	c3                   	ret    

000000000000404b <kmp_test>:
    404b:	f3 0f 1e fa          	endbr64 
    404f:	55                   	push   %rbp
    4050:	48 89 e5             	mov    %rsp,%rbp
    4053:	48 8b 05 1e 50 00 00 	mov    0x501e(%rip),%rax        # 9078 <memory_boundary_alignment>
    405a:	48 89 c7             	mov    %rax,%rdi
    405d:	e8 26 f3 ff ff       	call   3388 <print_dividing_line>
    4062:	b8 00 00 00 00       	mov    $0x0,%eax
    4067:	e8 18 fb ff ff       	call   3b84 <kmp_new_test>
    406c:	b8 00 00 00 00       	mov    $0x0,%eax
    4071:	e8 29 fe ff ff       	call   3e9f <kmp_search_test>
    4076:	48 8d 05 79 27 00 00 	lea    0x2779(%rip),%rax        # 67f6 <__PRETTY_FUNCTION__.0+0x3c6>
    407d:	48 89 c7             	mov    %rax,%rdi
    4080:	e8 03 f3 ff ff       	call   3388 <print_dividing_line>
    4085:	90                   	nop
    4086:	5d                   	pop    %rbp
    4087:	c3                   	ret    

0000000000004088 <memory_boundary_alignment_test>:
    4088:	f3 0f 1e fa          	endbr64 
    408c:	55                   	push   %rbp
    408d:	48 89 e5             	mov    %rsp,%rbp
    4090:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    4094:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    409b:	00 00 
    409d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    40a1:	31 c0                	xor    %eax,%eax
    40a3:	48 8b 05 de 4f 00 00 	mov    0x4fde(%rip),%rax        # 9088 <memory_boundary_alignment.0>
    40aa:	48 89 c7             	mov    %rax,%rdi
    40ad:	e8 d6 f2 ff ff       	call   3388 <print_dividing_line>
    40b2:	be 0c 00 00 00       	mov    $0xc,%esi
    40b7:	48 8d 05 3a 27 00 00 	lea    0x273a(%rip),%rax        # 67f8 <__PRETTY_FUNCTION__.0+0x3c8>
    40be:	48 89 c7             	mov    %rax,%rdi
    40c1:	b8 00 00 00 00       	mov    $0x0,%eax
    40c6:	e8 e5 d0 ff ff       	call   11b0 <printf@plt>
    40cb:	c6 45 94 61          	movb   $0x61,-0x6c(%rbp)
    40cf:	c7 45 98 01 00 00 00 	movl   $0x1,-0x68(%rbp)
    40d6:	66 c7 45 9c 02 00    	movw   $0x2,-0x64(%rbp)
    40dc:	48 8d 45 94          	lea    -0x6c(%rbp),%rax
    40e0:	48 89 c6             	mov    %rax,%rsi
    40e3:	48 8d 05 22 27 00 00 	lea    0x2722(%rip),%rax        # 680c <__PRETTY_FUNCTION__.0+0x3dc>
    40ea:	48 89 c7             	mov    %rax,%rdi
    40ed:	b8 00 00 00 00       	mov    $0x0,%eax
    40f2:	e8 b9 d0 ff ff       	call   11b0 <printf@plt>
    40f7:	48 8d 45 94          	lea    -0x6c(%rbp),%rax
    40fb:	b9 01 00 00 00       	mov    $0x1,%ecx
    4100:	ba 00 00 00 00       	mov    $0x0,%edx
    4105:	48 89 c6             	mov    %rax,%rsi
    4108:	48 8d 05 11 27 00 00 	lea    0x2711(%rip),%rax        # 6820 <__PRETTY_FUNCTION__.0+0x3f0>
    410f:	48 89 c7             	mov    %rax,%rdi
    4112:	b8 00 00 00 00       	mov    $0x0,%eax
    4117:	e8 94 d0 ff ff       	call   11b0 <printf@plt>
    411c:	48 8d 45 94          	lea    -0x6c(%rbp),%rax
    4120:	48 83 c0 04          	add    $0x4,%rax
    4124:	b9 04 00 00 00       	mov    $0x4,%ecx
    4129:	ba 04 00 00 00       	mov    $0x4,%edx
    412e:	48 89 c6             	mov    %rax,%rsi
    4131:	48 8d 05 18 27 00 00 	lea    0x2718(%rip),%rax        # 6850 <__PRETTY_FUNCTION__.0+0x420>
    4138:	48 89 c7             	mov    %rax,%rdi
    413b:	b8 00 00 00 00       	mov    $0x0,%eax
    4140:	e8 6b d0 ff ff       	call   11b0 <printf@plt>
    4145:	48 8d 45 94          	lea    -0x6c(%rbp),%rax
    4149:	48 83 c0 08          	add    $0x8,%rax
    414d:	b9 02 00 00 00       	mov    $0x2,%ecx
    4152:	ba 08 00 00 00       	mov    $0x8,%edx
    4157:	48 89 c6             	mov    %rax,%rsi
    415a:	48 8d 05 1f 27 00 00 	lea    0x271f(%rip),%rax        # 6880 <__PRETTY_FUNCTION__.0+0x450>
    4161:	48 89 c7             	mov    %rax,%rdi
    4164:	b8 00 00 00 00       	mov    $0x0,%eax
    4169:	e8 42 d0 ff ff       	call   11b0 <printf@plt>
    416e:	bf 0a 00 00 00       	mov    $0xa,%edi
    4173:	e8 e8 cf ff ff       	call   1160 <putchar@plt>
    4178:	be 08 00 00 00       	mov    $0x8,%esi
    417d:	48 8d 05 25 27 00 00 	lea    0x2725(%rip),%rax        # 68a9 <__PRETTY_FUNCTION__.0+0x479>
    4184:	48 89 c7             	mov    %rax,%rdi
    4187:	b8 00 00 00 00       	mov    $0x0,%eax
    418c:	e8 1f d0 ff ff       	call   11b0 <printf@plt>
    4191:	66 c7 45 8c 02 00    	movw   $0x2,-0x74(%rbp)
    4197:	c6 45 8e 61          	movb   $0x61,-0x72(%rbp)
    419b:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)
    41a2:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    41a6:	48 89 c6             	mov    %rax,%rsi
    41a9:	48 8d 05 0d 27 00 00 	lea    0x270d(%rip),%rax        # 68bd <__PRETTY_FUNCTION__.0+0x48d>
    41b0:	48 89 c7             	mov    %rax,%rdi
    41b3:	b8 00 00 00 00       	mov    $0x0,%eax
    41b8:	e8 f3 cf ff ff       	call   11b0 <printf@plt>
    41bd:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    41c1:	b9 02 00 00 00       	mov    $0x2,%ecx
    41c6:	ba 00 00 00 00       	mov    $0x0,%edx
    41cb:	48 89 c6             	mov    %rax,%rsi
    41ce:	48 8d 05 fb 26 00 00 	lea    0x26fb(%rip),%rax        # 68d0 <__PRETTY_FUNCTION__.0+0x4a0>
    41d5:	48 89 c7             	mov    %rax,%rdi
    41d8:	b8 00 00 00 00       	mov    $0x0,%eax
    41dd:	e8 ce cf ff ff       	call   11b0 <printf@plt>
    41e2:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    41e6:	48 83 c0 02          	add    $0x2,%rax
    41ea:	b9 01 00 00 00       	mov    $0x1,%ecx
    41ef:	ba 02 00 00 00       	mov    $0x2,%edx
    41f4:	48 89 c6             	mov    %rax,%rsi
    41f7:	48 8d 05 02 27 00 00 	lea    0x2702(%rip),%rax        # 6900 <__PRETTY_FUNCTION__.0+0x4d0>
    41fe:	48 89 c7             	mov    %rax,%rdi
    4201:	b8 00 00 00 00       	mov    $0x0,%eax
    4206:	e8 a5 cf ff ff       	call   11b0 <printf@plt>
    420b:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    420f:	48 83 c0 04          	add    $0x4,%rax
    4213:	b9 04 00 00 00       	mov    $0x4,%ecx
    4218:	ba 04 00 00 00       	mov    $0x4,%edx
    421d:	48 89 c6             	mov    %rax,%rsi
    4220:	48 8d 05 09 27 00 00 	lea    0x2709(%rip),%rax        # 6930 <__PRETTY_FUNCTION__.0+0x500>
    4227:	48 89 c7             	mov    %rax,%rdi
    422a:	b8 00 00 00 00       	mov    $0x0,%eax
    422f:	e8 7c cf ff ff       	call   11b0 <printf@plt>
    4234:	bf 0a 00 00 00       	mov    $0xa,%edi
    4239:	e8 22 cf ff ff       	call   1160 <putchar@plt>
    423e:	be 18 00 00 00       	mov    $0x18,%esi
    4243:	48 8d 05 0f 27 00 00 	lea    0x270f(%rip),%rax        # 6959 <__PRETTY_FUNCTION__.0+0x529>
    424a:	48 89 c7             	mov    %rax,%rdi
    424d:	b8 00 00 00 00       	mov    $0x0,%eax
    4252:	e8 59 cf ff ff       	call   11b0 <printf@plt>
    4257:	c6 45 a0 61          	movb   $0x61,-0x60(%rbp)
    425b:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    4262:	00 
    4263:	66 c7 45 b0 02 00    	movw   $0x2,-0x50(%rbp)
    4269:	c7 45 b4 03 00 00 00 	movl   $0x3,-0x4c(%rbp)
    4270:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4274:	48 89 c6             	mov    %rax,%rsi
    4277:	48 8d 05 ef 26 00 00 	lea    0x26ef(%rip),%rax        # 696d <__PRETTY_FUNCTION__.0+0x53d>
    427e:	48 89 c7             	mov    %rax,%rdi
    4281:	b8 00 00 00 00       	mov    $0x0,%eax
    4286:	e8 25 cf ff ff       	call   11b0 <printf@plt>
    428b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    428f:	b9 01 00 00 00       	mov    $0x1,%ecx
    4294:	ba 00 00 00 00       	mov    $0x0,%edx
    4299:	48 89 c6             	mov    %rax,%rsi
    429c:	48 8d 05 dd 26 00 00 	lea    0x26dd(%rip),%rax        # 6980 <__PRETTY_FUNCTION__.0+0x550>
    42a3:	48 89 c7             	mov    %rax,%rdi
    42a6:	b8 00 00 00 00       	mov    $0x0,%eax
    42ab:	e8 00 cf ff ff       	call   11b0 <printf@plt>
    42b0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    42b4:	48 83 c0 08          	add    $0x8,%rax
    42b8:	b9 08 00 00 00       	mov    $0x8,%ecx
    42bd:	ba 08 00 00 00       	mov    $0x8,%edx
    42c2:	48 89 c6             	mov    %rax,%rsi
    42c5:	48 8d 05 e4 26 00 00 	lea    0x26e4(%rip),%rax        # 69b0 <__PRETTY_FUNCTION__.0+0x580>
    42cc:	48 89 c7             	mov    %rax,%rdi
    42cf:	b8 00 00 00 00       	mov    $0x0,%eax
    42d4:	e8 d7 ce ff ff       	call   11b0 <printf@plt>
    42d9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    42dd:	48 83 c0 10          	add    $0x10,%rax
    42e1:	b9 02 00 00 00       	mov    $0x2,%ecx
    42e6:	ba 10 00 00 00       	mov    $0x10,%edx
    42eb:	48 89 c6             	mov    %rax,%rsi
    42ee:	48 8d 05 eb 26 00 00 	lea    0x26eb(%rip),%rax        # 69e0 <__PRETTY_FUNCTION__.0+0x5b0>
    42f5:	48 89 c7             	mov    %rax,%rdi
    42f8:	b8 00 00 00 00       	mov    $0x0,%eax
    42fd:	e8 ae ce ff ff       	call   11b0 <printf@plt>
    4302:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4306:	48 83 c0 14          	add    $0x14,%rax
    430a:	b9 04 00 00 00       	mov    $0x4,%ecx
    430f:	ba 14 00 00 00       	mov    $0x14,%edx
    4314:	48 89 c6             	mov    %rax,%rsi
    4317:	48 8d 05 f2 26 00 00 	lea    0x26f2(%rip),%rax        # 6a10 <__PRETTY_FUNCTION__.0+0x5e0>
    431e:	48 89 c7             	mov    %rax,%rdi
    4321:	b8 00 00 00 00       	mov    $0x0,%eax
    4326:	e8 85 ce ff ff       	call   11b0 <printf@plt>
    432b:	bf 0a 00 00 00       	mov    $0xa,%edi
    4330:	e8 2b ce ff ff       	call   1160 <putchar@plt>
    4335:	be 30 00 00 00       	mov    $0x30,%esi
    433a:	48 8d 05 f8 26 00 00 	lea    0x26f8(%rip),%rax        # 6a39 <__PRETTY_FUNCTION__.0+0x609>
    4341:	48 89 c7             	mov    %rax,%rdi
    4344:	b8 00 00 00 00       	mov    $0x0,%eax
    4349:	e8 62 ce ff ff       	call   11b0 <printf@plt>
    434e:	48 8b 45 94          	mov    -0x6c(%rbp),%rax
    4352:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4356:	8b 45 9c             	mov    -0x64(%rbp),%eax
    4359:	89 45 c8             	mov    %eax,-0x38(%rbp)
    435c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    4360:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4364:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4368:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    436c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4370:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4374:	48 8b 45 8c          	mov    -0x74(%rbp),%rax
    4378:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    437c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4380:	48 89 c6             	mov    %rax,%rsi
    4383:	48 8d 05 c3 26 00 00 	lea    0x26c3(%rip),%rax        # 6a4d <__PRETTY_FUNCTION__.0+0x61d>
    438a:	48 89 c7             	mov    %rax,%rdi
    438d:	b8 00 00 00 00       	mov    $0x0,%eax
    4392:	e8 19 ce ff ff       	call   11b0 <printf@plt>
    4397:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    439b:	b9 0c 00 00 00       	mov    $0xc,%ecx
    43a0:	ba 00 00 00 00       	mov    $0x0,%edx
    43a5:	48 89 c6             	mov    %rax,%rsi
    43a8:	48 8d 05 b1 26 00 00 	lea    0x26b1(%rip),%rax        # 6a60 <__PRETTY_FUNCTION__.0+0x630>
    43af:	48 89 c7             	mov    %rax,%rdi
    43b2:	b8 00 00 00 00       	mov    $0x0,%eax
    43b7:	e8 f4 cd ff ff       	call   11b0 <printf@plt>
    43bc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    43c0:	48 83 c0 10          	add    $0x10,%rax
    43c4:	b9 18 00 00 00       	mov    $0x18,%ecx
    43c9:	ba 10 00 00 00       	mov    $0x10,%edx
    43ce:	48 89 c6             	mov    %rax,%rsi
    43d1:	48 8d 05 b8 26 00 00 	lea    0x26b8(%rip),%rax        # 6a90 <__PRETTY_FUNCTION__.0+0x660>
    43d8:	48 89 c7             	mov    %rax,%rdi
    43db:	b8 00 00 00 00       	mov    $0x0,%eax
    43e0:	e8 cb cd ff ff       	call   11b0 <printf@plt>
    43e5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    43e9:	48 83 c0 28          	add    $0x28,%rax
    43ed:	b9 08 00 00 00       	mov    $0x8,%ecx
    43f2:	ba 28 00 00 00       	mov    $0x28,%edx
    43f7:	48 89 c6             	mov    %rax,%rsi
    43fa:	48 8d 05 bf 26 00 00 	lea    0x26bf(%rip),%rax        # 6ac0 <__PRETTY_FUNCTION__.0+0x690>
    4401:	48 89 c7             	mov    %rax,%rdi
    4404:	b8 00 00 00 00       	mov    $0x0,%eax
    4409:	e8 a2 cd ff ff       	call   11b0 <printf@plt>
    440e:	bf 0a 00 00 00       	mov    $0xa,%edi
    4413:	e8 48 cd ff ff       	call   1160 <putchar@plt>
    4418:	48 8b 05 69 4c 00 00 	mov    0x4c69(%rip),%rax        # 9088 <memory_boundary_alignment.0>
    441f:	48 8d 15 c3 26 00 00 	lea    0x26c3(%rip),%rdx        # 6ae9 <__PRETTY_FUNCTION__.0+0x6b9>
    4426:	48 89 c6             	mov    %rax,%rsi
    4429:	bf 02 00 00 00       	mov    $0x2,%edi
    442e:	b8 00 00 00 00       	mov    $0x0,%eax
    4433:	e8 eb ef ff ff       	call   3423 <multi_dividing_line>
    4438:	90                   	nop
    4439:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    443d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    4444:	00 00 
    4446:	74 05                	je     444d <memory_boundary_alignment_test+0x3c5>
    4448:	e8 53 cd ff ff       	call   11a0 <__stack_chk_fail@plt>
    444d:	c9                   	leave  
    444e:	c3                   	ret    

000000000000444f <bit_field_test>:
    444f:	f3 0f 1e fa          	endbr64 
    4453:	55                   	push   %rbp
    4454:	48 89 e5             	mov    %rsp,%rbp
    4457:	48 83 ec 20          	sub    $0x20,%rsp
    445b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4462:	00 00 
    4464:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4468:	31 c0                	xor    %eax,%eax
    446a:	48 8d 05 7c 26 00 00 	lea    0x267c(%rip),%rax        # 6aed <__PRETTY_FUNCTION__.0+0x6bd>
    4471:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4475:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4479:	48 89 c7             	mov    %rax,%rdi
    447c:	e8 07 ef ff ff       	call   3388 <print_dividing_line>
    4481:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
    4485:	83 c8 0f             	or     $0xf,%eax
    4488:	88 45 ec             	mov    %al,-0x14(%rbp)
    448b:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
    448f:	83 e0 0f             	and    $0xf,%eax
    4492:	83 c8 10             	or     $0x10,%eax
    4495:	88 45 ec             	mov    %al,-0x14(%rbp)
    4498:	8b 45 ec             	mov    -0x14(%rbp),%eax
    449b:	25 ff 00 00 ff       	and    $0xff0000ff,%eax
    44a0:	0d 00 00 80 00       	or     $0x800000,%eax
    44a5:	89 45 ec             	mov    %eax,-0x14(%rbp)
    44a8:	c6 45 ef 80          	movb   $0x80,-0x11(%rbp)
    44ac:	be 04 00 00 00       	mov    $0x4,%esi
    44b1:	48 8d 05 44 26 00 00 	lea    0x2644(%rip),%rax        # 6afc <__PRETTY_FUNCTION__.0+0x6cc>
    44b8:	48 89 c7             	mov    %rax,%rdi
    44bb:	b8 00 00 00 00       	mov    $0x0,%eax
    44c0:	e8 eb cc ff ff       	call   11b0 <printf@plt>
    44c5:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    44c9:	48 89 c6             	mov    %rax,%rsi
    44cc:	48 8d 05 3e 26 00 00 	lea    0x263e(%rip),%rax        # 6b11 <__PRETTY_FUNCTION__.0+0x6e1>
    44d3:	48 89 c7             	mov    %rax,%rdi
    44d6:	b8 00 00 00 00       	mov    $0x0,%eax
    44db:	e8 d0 cc ff ff       	call   11b0 <printf@plt>
    44e0:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
    44e4:	83 e0 0f             	and    $0xf,%eax
    44e7:	0f b6 c0             	movzbl %al,%eax
    44ea:	89 c6                	mov    %eax,%esi
    44ec:	48 8d 05 2e 26 00 00 	lea    0x262e(%rip),%rax        # 6b21 <__PRETTY_FUNCTION__.0+0x6f1>
    44f3:	48 89 c7             	mov    %rax,%rdi
    44f6:	b8 00 00 00 00       	mov    $0x0,%eax
    44fb:	e8 b0 cc ff ff       	call   11b0 <printf@plt>
    4500:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
    4504:	c0 e8 04             	shr    $0x4,%al
    4507:	0f b6 c0             	movzbl %al,%eax
    450a:	89 c6                	mov    %eax,%esi
    450c:	48 8d 05 19 26 00 00 	lea    0x2619(%rip),%rax        # 6b2c <__PRETTY_FUNCTION__.0+0x6fc>
    4513:	48 89 c7             	mov    %rax,%rdi
    4516:	b8 00 00 00 00       	mov    $0x0,%eax
    451b:	e8 90 cc ff ff       	call   11b0 <printf@plt>
    4520:	0f b7 45 ed          	movzwl -0x13(%rbp),%eax
    4524:	98                   	cwtl   
    4525:	89 c6                	mov    %eax,%esi
    4527:	48 8d 05 09 26 00 00 	lea    0x2609(%rip),%rax        # 6b37 <__PRETTY_FUNCTION__.0+0x707>
    452e:	48 89 c7             	mov    %rax,%rdi
    4531:	b8 00 00 00 00       	mov    $0x0,%eax
    4536:	e8 75 cc ff ff       	call   11b0 <printf@plt>
    453b:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    453f:	0f be c0             	movsbl %al,%eax
    4542:	89 c6                	mov    %eax,%esi
    4544:	48 8d 05 f7 25 00 00 	lea    0x25f7(%rip),%rax        # 6b42 <__PRETTY_FUNCTION__.0+0x712>
    454b:	48 89 c7             	mov    %rax,%rdi
    454e:	b8 00 00 00 00       	mov    $0x0,%eax
    4553:	e8 58 cc ff ff       	call   11b0 <printf@plt>
    4558:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    455c:	48 8d 15 86 25 00 00 	lea    0x2586(%rip),%rdx        # 6ae9 <__PRETTY_FUNCTION__.0+0x6b9>
    4563:	48 89 c6             	mov    %rax,%rsi
    4566:	bf 02 00 00 00       	mov    $0x2,%edi
    456b:	b8 00 00 00 00       	mov    $0x0,%eax
    4570:	e8 ae ee ff ff       	call   3423 <multi_dividing_line>
    4575:	90                   	nop
    4576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    457a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    4581:	00 00 
    4583:	74 05                	je     458a <bit_field_test+0x13b>
    4585:	e8 16 cc ff ff       	call   11a0 <__stack_chk_fail@plt>
    458a:	c9                   	leave  
    458b:	c3                   	ret    

000000000000458c <union_test>:
    458c:	f3 0f 1e fa          	endbr64 
    4590:	55                   	push   %rbp
    4591:	48 89 e5             	mov    %rsp,%rbp
    4594:	48 83 ec 10          	sub    $0x10,%rsp
    4598:	48 8d 05 ae 25 00 00 	lea    0x25ae(%rip),%rax        # 6b4d <__PRETTY_FUNCTION__.0+0x71d>
    459f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    45a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45a7:	48 89 c7             	mov    %rax,%rdi
    45aa:	e8 d9 ed ff ff       	call   3388 <print_dividing_line>
    45af:	c7 45 f4 0f 00 00 00 	movl   $0xf,-0xc(%rbp)
    45b6:	be 04 00 00 00       	mov    $0x4,%esi
    45bb:	48 8d 05 96 25 00 00 	lea    0x2596(%rip),%rax        # 6b58 <__PRETTY_FUNCTION__.0+0x728>
    45c2:	48 89 c7             	mov    %rax,%rdi
    45c5:	b8 00 00 00 00       	mov    $0x0,%eax
    45ca:	e8 e1 cb ff ff       	call   11b0 <printf@plt>
    45cf:	be 04 00 00 00       	mov    $0x4,%esi
    45d4:	48 8d 05 93 25 00 00 	lea    0x2593(%rip),%rax        # 6b6e <__PRETTY_FUNCTION__.0+0x73e>
    45db:	48 89 c7             	mov    %rax,%rdi
    45de:	b8 00 00 00 00       	mov    $0x0,%eax
    45e3:	e8 c8 cb ff ff       	call   11b0 <printf@plt>
    45e8:	be 01 00 00 00       	mov    $0x1,%esi
    45ed:	48 8d 05 92 25 00 00 	lea    0x2592(%rip),%rax        # 6b86 <__PRETTY_FUNCTION__.0+0x756>
    45f4:	48 89 c7             	mov    %rax,%rdi
    45f7:	b8 00 00 00 00       	mov    $0x0,%eax
    45fc:	e8 af cb ff ff       	call   11b0 <printf@plt>
    4601:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4604:	89 c6                	mov    %eax,%esi
    4606:	48 8d 05 91 25 00 00 	lea    0x2591(%rip),%rax        # 6b9e <__PRETTY_FUNCTION__.0+0x76e>
    460d:	48 89 c7             	mov    %rax,%rdi
    4610:	b8 00 00 00 00       	mov    $0x0,%eax
    4615:	e8 96 cb ff ff       	call   11b0 <printf@plt>
    461a:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
    461e:	0f be c0             	movsbl %al,%eax
    4621:	89 c6                	mov    %eax,%esi
    4623:	48 8d 05 81 25 00 00 	lea    0x2581(%rip),%rax        # 6bab <__PRETTY_FUNCTION__.0+0x77b>
    462a:	48 89 c7             	mov    %rax,%rdi
    462d:	b8 00 00 00 00       	mov    $0x0,%eax
    4632:	e8 79 cb ff ff       	call   11b0 <printf@plt>
    4637:	c6 45 f4 61          	movb   $0x61,-0xc(%rbp)
    463b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    463e:	89 c6                	mov    %eax,%esi
    4640:	48 8d 05 57 25 00 00 	lea    0x2557(%rip),%rax        # 6b9e <__PRETTY_FUNCTION__.0+0x76e>
    4647:	48 89 c7             	mov    %rax,%rdi
    464a:	b8 00 00 00 00       	mov    $0x0,%eax
    464f:	e8 5c cb ff ff       	call   11b0 <printf@plt>
    4654:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
    4658:	0f be c0             	movsbl %al,%eax
    465b:	89 c6                	mov    %eax,%esi
    465d:	48 8d 05 47 25 00 00 	lea    0x2547(%rip),%rax        # 6bab <__PRETTY_FUNCTION__.0+0x77b>
    4664:	48 89 c7             	mov    %rax,%rdi
    4667:	b8 00 00 00 00       	mov    $0x0,%eax
    466c:	e8 3f cb ff ff       	call   11b0 <printf@plt>
    4671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4675:	48 8d 15 6d 24 00 00 	lea    0x246d(%rip),%rdx        # 6ae9 <__PRETTY_FUNCTION__.0+0x6b9>
    467c:	48 89 c6             	mov    %rax,%rsi
    467f:	bf 02 00 00 00       	mov    $0x2,%edi
    4684:	b8 00 00 00 00       	mov    $0x0,%eax
    4689:	e8 95 ed ff ff       	call   3423 <multi_dividing_line>
    468e:	90                   	nop
    468f:	c9                   	leave  
    4690:	c3                   	ret    

0000000000004691 <chapt_10_demo_run>:
    4691:	f3 0f 1e fa          	endbr64 
    4695:	55                   	push   %rbp
    4696:	48 89 e5             	mov    %rsp,%rbp
    4699:	48 8b 05 e0 49 00 00 	mov    0x49e0(%rip),%rax        # 9080 <title>
    46a0:	48 89 c7             	mov    %rax,%rdi
    46a3:	e8 e0 ec ff ff       	call   3388 <print_dividing_line>
    46a8:	b8 00 00 00 00       	mov    $0x0,%eax
    46ad:	e8 d6 f9 ff ff       	call   4088 <memory_boundary_alignment_test>
    46b2:	b8 00 00 00 00       	mov    $0x0,%eax
    46b7:	e8 93 fd ff ff       	call   444f <bit_field_test>
    46bc:	b8 00 00 00 00       	mov    $0x0,%eax
    46c1:	e8 c6 fe ff ff       	call   458c <union_test>
    46c6:	48 8b 05 b3 49 00 00 	mov    0x49b3(%rip),%rax        # 9080 <title>
    46cd:	48 8d 15 15 24 00 00 	lea    0x2415(%rip),%rdx        # 6ae9 <__PRETTY_FUNCTION__.0+0x6b9>
    46d4:	48 89 c6             	mov    %rax,%rsi
    46d7:	bf 02 00 00 00       	mov    $0x2,%edi
    46dc:	b8 00 00 00 00       	mov    $0x0,%eax
    46e1:	e8 3d ed ff ff       	call   3423 <multi_dividing_line>
    46e6:	90                   	nop
    46e7:	5d                   	pop    %rbp
    46e8:	c3                   	ret    

00000000000046e9 <memory_alloc_test>:
    46e9:	f3 0f 1e fa          	endbr64 
    46ed:	55                   	push   %rbp
    46ee:	48 89 e5             	mov    %rsp,%rbp
    46f1:	48 83 ec 10          	sub    $0x10,%rsp
    46f5:	48 8d 05 e4 24 00 00 	lea    0x24e4(%rip),%rax        # 6be0 <__PRETTY_FUNCTION__.0+0x7b0>
    46fc:	48 89 c7             	mov    %rax,%rdi
    46ff:	e8 84 ec ff ff       	call   3388 <print_dividing_line>
    4704:	bf 28 00 00 00       	mov    $0x28,%edi
    4709:	e8 f8 00 00 00       	call   4806 <alloc>
    470e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4712:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    4719:	eb 1d                	jmp    4738 <memory_alloc_test+0x4f>
    471b:	8b 45 f0             	mov    -0x10(%rbp),%eax
    471e:	48 98                	cltq   
    4720:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4727:	00 
    4728:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    472c:	48 01 c2             	add    %rax,%rdx
    472f:	8b 45 f0             	mov    -0x10(%rbp),%eax
    4732:	89 02                	mov    %eax,(%rdx)
    4734:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    4738:	83 7d f0 09          	cmpl   $0x9,-0x10(%rbp)
    473c:	7e dd                	jle    471b <memory_alloc_test+0x32>
    473e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4745:	eb 30                	jmp    4777 <memory_alloc_test+0x8e>
    4747:	8b 45 f4             	mov    -0xc(%rbp),%eax
    474a:	48 98                	cltq   
    474c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4753:	00 
    4754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4758:	48 01 d0             	add    %rdx,%rax
    475b:	8b 00                	mov    (%rax),%eax
    475d:	89 c6                	mov    %eax,%esi
    475f:	48 8d 05 8c 24 00 00 	lea    0x248c(%rip),%rax        # 6bf2 <__PRETTY_FUNCTION__.0+0x7c2>
    4766:	48 89 c7             	mov    %rax,%rdi
    4769:	b8 00 00 00 00       	mov    $0x0,%eax
    476e:	e8 3d ca ff ff       	call   11b0 <printf@plt>
    4773:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4777:	83 7d f4 09          	cmpl   $0x9,-0xc(%rbp)
    477b:	7e ca                	jle    4747 <memory_alloc_test+0x5e>
    477d:	bf 0a 00 00 00       	mov    $0xa,%edi
    4782:	e8 d9 c9 ff ff       	call   1160 <putchar@plt>
    4787:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    478b:	48 89 c7             	mov    %rax,%rdi
    478e:	e8 cd 00 00 00       	call   4860 <dealloc>
    4793:	48 8d 05 5c 24 00 00 	lea    0x245c(%rip),%rax        # 6bf6 <__PRETTY_FUNCTION__.0+0x7c6>
    479a:	48 89 c2             	mov    %rax,%rdx
    479d:	48 8d 05 3c 24 00 00 	lea    0x243c(%rip),%rax        # 6be0 <__PRETTY_FUNCTION__.0+0x7b0>
    47a4:	48 89 c6             	mov    %rax,%rsi
    47a7:	bf 02 00 00 00       	mov    $0x2,%edi
    47ac:	b8 00 00 00 00       	mov    $0x0,%eax
    47b1:	e8 6d ec ff ff       	call   3423 <multi_dividing_line>
    47b6:	90                   	nop
    47b7:	c9                   	leave  
    47b8:	c3                   	ret    

00000000000047b9 <chapt_11_demo_run>:
    47b9:	f3 0f 1e fa          	endbr64 
    47bd:	55                   	push   %rbp
    47be:	48 89 e5             	mov    %rsp,%rbp
    47c1:	48 83 ec 10          	sub    $0x10,%rsp
    47c5:	48 8d 05 2e 24 00 00 	lea    0x242e(%rip),%rax        # 6bfa <__PRETTY_FUNCTION__.0+0x7ca>
    47cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    47d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47d4:	48 89 c7             	mov    %rax,%rdi
    47d7:	e8 ac eb ff ff       	call   3388 <print_dividing_line>
    47dc:	b8 00 00 00 00       	mov    $0x0,%eax
    47e1:	e8 03 ff ff ff       	call   46e9 <memory_alloc_test>
    47e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47ea:	48 8d 15 05 24 00 00 	lea    0x2405(%rip),%rdx        # 6bf6 <__PRETTY_FUNCTION__.0+0x7c6>
    47f1:	48 89 c6             	mov    %rax,%rsi
    47f4:	bf 02 00 00 00       	mov    $0x2,%edi
    47f9:	b8 00 00 00 00       	mov    $0x0,%eax
    47fe:	e8 20 ec ff ff       	call   3423 <multi_dividing_line>
    4803:	90                   	nop
    4804:	c9                   	leave  
    4805:	c3                   	ret    

0000000000004806 <alloc>:
    4806:	f3 0f 1e fa          	endbr64 
    480a:	55                   	push   %rbp
    480b:	48 89 e5             	mov    %rsp,%rbp
    480e:	48 83 ec 20          	sub    $0x20,%rsp
    4812:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4816:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    481a:	48 89 c7             	mov    %rax,%rdi
    481d:	e8 de c9 ff ff       	call   1200 <malloc@plt>
    4822:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4826:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    482b:	75 2d                	jne    485a <alloc+0x54>
    482d:	48 8b 05 6c 48 00 00 	mov    0x486c(%rip),%rax        # 90a0 <stderr@GLIBC_2.2.5>
    4834:	48 89 c1             	mov    %rax,%rcx
    4837:	ba 0e 00 00 00       	mov    $0xe,%edx
    483c:	be 01 00 00 00       	mov    $0x1,%esi
    4841:	48 8d 05 c0 23 00 00 	lea    0x23c0(%rip),%rax        # 6c08 <__PRETTY_FUNCTION__.0+0x7d8>
    4848:	48 89 c7             	mov    %rax,%rdi
    484b:	e8 00 ca ff ff       	call   1250 <fwrite@plt>
    4850:	bf 01 00 00 00       	mov    $0x1,%edi
    4855:	e8 e6 c9 ff ff       	call   1240 <exit@plt>
    485a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    485e:	c9                   	leave  
    485f:	c3                   	ret    

0000000000004860 <dealloc>:
    4860:	f3 0f 1e fa          	endbr64 
    4864:	55                   	push   %rbp
    4865:	48 89 e5             	mov    %rsp,%rbp
    4868:	48 83 ec 10          	sub    $0x10,%rsp
    486c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4870:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4875:	74 16                	je     488d <dealloc+0x2d>
    4877:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    487b:	48 89 c7             	mov    %rax,%rdi
    487e:	e8 cd c8 ff ff       	call   1150 <free@plt>
    4883:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    488a:	00 
    488b:	eb 01                	jmp    488e <dealloc+0x2e>
    488d:	90                   	nop
    488e:	c9                   	leave  
    488f:	c3                   	ret    

0000000000004890 <new_entry>:
    4890:	f3 0f 1e fa          	endbr64 
    4894:	55                   	push   %rbp
    4895:	48 89 e5             	mov    %rsp,%rbp
    4898:	48 83 ec 10          	sub    $0x10,%rsp
    489c:	bf 50 00 00 00       	mov    $0x50,%edi
    48a1:	e8 60 ff ff ff       	call   4806 <alloc>
    48a6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    48aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48ae:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    48b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48b9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    48c0:	00 
    48c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48c5:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    48cc:	00 
    48cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48d1:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    48d8:	00 
    48d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48dd:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    48e4:	00 
    48e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48e9:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
    48f0:	00 
    48f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48f5:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    48fc:	00 
    48fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4901:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    4908:	00 
    4909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    490d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4914:	00 
    4915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4919:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    4920:	00 
    4921:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4925:	48 89 c7             	mov    %rax,%rdi
    4928:	e8 a2 04 00 00       	call   4dcf <list_entry_init>
    492d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4931:	c9                   	leave  
    4932:	c3                   	ret    

0000000000004933 <list_data_cpy>:
    4933:	f3 0f 1e fa          	endbr64 
    4937:	55                   	push   %rbp
    4938:	48 89 e5             	mov    %rsp,%rbp
    493b:	48 83 ec 20          	sub    $0x20,%rsp
    493f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4943:	bf 10 00 00 00       	mov    $0x10,%edi
    4948:	e8 b9 fe ff ff       	call   4806 <alloc>
    494d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4951:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4955:	48 8b 40 08          	mov    0x8(%rax),%rax
    4959:	48 89 c7             	mov    %rax,%rdi
    495c:	e8 a5 fe ff ff       	call   4806 <alloc>
    4961:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4965:	48 89 02             	mov    %rax,(%rdx)
    4968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    496c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4970:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4974:	48 8b 08             	mov    (%rax),%rcx
    4977:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    497b:	48 8b 00             	mov    (%rax),%rax
    497e:	48 89 ce             	mov    %rcx,%rsi
    4981:	48 89 c7             	mov    %rax,%rdi
    4984:	e8 67 c8 ff ff       	call   11f0 <memcpy@plt>
    4989:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    498d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4995:	48 89 50 08          	mov    %rdx,0x8(%rax)
    4999:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    499d:	c9                   	leave  
    499e:	c3                   	ret    

000000000000499f <push_back>:
    499f:	f3 0f 1e fa          	endbr64 
    49a3:	55                   	push   %rbp
    49a4:	48 89 e5             	mov    %rsp,%rbp
    49a7:	48 83 ec 20          	sub    $0x20,%rsp
    49ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    49af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    49b3:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    49b8:	0f 84 b3 00 00 00    	je     4a71 <push_back+0xd2>
    49be:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    49c3:	0f 84 a8 00 00 00    	je     4a71 <push_back+0xd2>
    49c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49cd:	48 8b 00             	mov    (%rax),%rax
    49d0:	48 85 c0             	test   %rax,%rax
    49d3:	0f 84 98 00 00 00    	je     4a71 <push_back+0xd2>
    49d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49dd:	48 8b 40 08          	mov    0x8(%rax),%rax
    49e1:	48 85 c0             	test   %rax,%rax
    49e4:	0f 84 87 00 00 00    	je     4a71 <push_back+0xd2>
    49ea:	eb 14                	jmp    4a00 <push_back+0x61>
    49ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49f0:	48 8b 40 08          	mov    0x8(%rax),%rax
    49f4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    49f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49fc:	48 89 50 08          	mov    %rdx,0x8(%rax)
    4a00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a04:	48 8b 40 08          	mov    0x8(%rax),%rax
    4a08:	48 85 c0             	test   %rax,%rax
    4a0b:	74 11                	je     4a1e <push_back+0x7f>
    4a0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a11:	48 8b 40 08          	mov    0x8(%rax),%rax
    4a15:	48 8b 40 08          	mov    0x8(%rax),%rax
    4a19:	48 85 c0             	test   %rax,%rax
    4a1c:	75 ce                	jne    49ec <push_back+0x4d>
    4a1e:	bf 10 00 00 00       	mov    $0x10,%edi
    4a23:	e8 de fd ff ff       	call   4806 <alloc>
    4a28:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a30:	48 89 c7             	mov    %rax,%rdi
    4a33:	e8 fb fe ff ff       	call   4933 <list_data_cpy>
    4a38:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4a3c:	48 89 02             	mov    %rax,(%rdx)
    4a3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a43:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4a4a:	00 
    4a4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a4f:	48 8b 40 08          	mov    0x8(%rax),%rax
    4a53:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4a57:	48 89 50 08          	mov    %rdx,0x8(%rax)
    4a5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a5f:	48 8b 40 08          	mov    0x8(%rax),%rax
    4a63:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4a67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a6b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    4a6f:	eb 01                	jmp    4a72 <push_back+0xd3>
    4a71:	90                   	nop
    4a72:	c9                   	leave  
    4a73:	c3                   	ret    

0000000000004a74 <push_front>:
    4a74:	f3 0f 1e fa          	endbr64 
    4a78:	55                   	push   %rbp
    4a79:	48 89 e5             	mov    %rsp,%rbp
    4a7c:	48 83 ec 20          	sub    $0x20,%rsp
    4a80:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4a84:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4a88:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    4a8d:	74 58                	je     4ae7 <push_front+0x73>
    4a8f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    4a94:	74 51                	je     4ae7 <push_front+0x73>
    4a96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a9a:	48 8b 00             	mov    (%rax),%rax
    4a9d:	48 85 c0             	test   %rax,%rax
    4aa0:	74 45                	je     4ae7 <push_front+0x73>
    4aa2:	bf 10 00 00 00       	mov    $0x10,%edi
    4aa7:	e8 5a fd ff ff       	call   4806 <alloc>
    4aac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4ab0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ab4:	48 89 c7             	mov    %rax,%rdi
    4ab7:	e8 77 fe ff ff       	call   4933 <list_data_cpy>
    4abc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4ac0:	48 89 02             	mov    %rax,(%rdx)
    4ac3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ac7:	48 8b 00             	mov    (%rax),%rax
    4aca:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4ace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ad2:	48 89 50 08          	mov    %rdx,0x8(%rax)
    4ad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ada:	48 8b 00             	mov    (%rax),%rax
    4add:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4ae1:	48 89 50 08          	mov    %rdx,0x8(%rax)
    4ae5:	eb 01                	jmp    4ae8 <push_front+0x74>
    4ae7:	90                   	nop
    4ae8:	c9                   	leave  
    4ae9:	c3                   	ret    

0000000000004aea <pop_front>:
    4aea:	f3 0f 1e fa          	endbr64 
    4aee:	55                   	push   %rbp
    4aef:	48 89 e5             	mov    %rsp,%rbp
    4af2:	48 83 ec 20          	sub    $0x20,%rsp
    4af6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4afa:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    4aff:	74 1c                	je     4b1d <pop_front+0x33>
    4b01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b05:	48 8b 00             	mov    (%rax),%rax
    4b08:	48 85 c0             	test   %rax,%rax
    4b0b:	74 10                	je     4b1d <pop_front+0x33>
    4b0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b11:	48 8b 00             	mov    (%rax),%rax
    4b14:	48 8b 40 08          	mov    0x8(%rax),%rax
    4b18:	48 85 c0             	test   %rax,%rax
    4b1b:	75 07                	jne    4b24 <pop_front+0x3a>
    4b1d:	b8 00 00 00 00       	mov    $0x0,%eax
    4b22:	eb 3d                	jmp    4b61 <pop_front+0x77>
    4b24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b28:	48 8b 00             	mov    (%rax),%rax
    4b2b:	48 8b 40 08          	mov    0x8(%rax),%rax
    4b2f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4b33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b37:	48 8b 00             	mov    (%rax),%rax
    4b3a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4b3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b42:	48 8b 00             	mov    (%rax),%rax
    4b45:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4b49:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    4b4d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    4b51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b55:	48 89 c7             	mov    %rax,%rdi
    4b58:	e8 f3 c5 ff ff       	call   1150 <free@plt>
    4b5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b61:	c9                   	leave  
    4b62:	c3                   	ret    

0000000000004b63 <pop_back>:
    4b63:	f3 0f 1e fa          	endbr64 
    4b67:	55                   	push   %rbp
    4b68:	48 89 e5             	mov    %rsp,%rbp
    4b6b:	48 83 ec 30          	sub    $0x30,%rsp
    4b6f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4b73:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    4b78:	74 1c                	je     4b96 <pop_back+0x33>
    4b7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b7e:	48 8b 00             	mov    (%rax),%rax
    4b81:	48 85 c0             	test   %rax,%rax
    4b84:	74 10                	je     4b96 <pop_back+0x33>
    4b86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b8a:	48 8b 00             	mov    (%rax),%rax
    4b8d:	48 8b 40 08          	mov    0x8(%rax),%rax
    4b91:	48 85 c0             	test   %rax,%rax
    4b94:	75 07                	jne    4b9d <pop_back+0x3a>
    4b96:	b8 00 00 00 00       	mov    $0x0,%eax
    4b9b:	eb 61                	jmp    4bfe <pop_back+0x9b>
    4b9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ba1:	48 8b 00             	mov    (%rax),%rax
    4ba4:	48 8b 40 08          	mov    0x8(%rax),%rax
    4ba8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4bac:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    4bb3:	00 
    4bb4:	eb 14                	jmp    4bca <pop_back+0x67>
    4bb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4bba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4bbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4bc2:	48 8b 40 08          	mov    0x8(%rax),%rax
    4bc6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4bca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4bce:	48 8b 40 08          	mov    0x8(%rax),%rax
    4bd2:	48 85 c0             	test   %rax,%rax
    4bd5:	75 df                	jne    4bb6 <pop_back+0x53>
    4bd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4bdb:	48 8b 00             	mov    (%rax),%rax
    4bde:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4be2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4be6:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4bed:	00 
    4bee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4bf2:	48 89 c7             	mov    %rax,%rdi
    4bf5:	e8 56 c5 ff ff       	call   1150 <free@plt>
    4bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bfe:	c9                   	leave  
    4bff:	c3                   	ret    

0000000000004c00 <front>:
    4c00:	f3 0f 1e fa          	endbr64 
    4c04:	55                   	push   %rbp
    4c05:	48 89 e5             	mov    %rsp,%rbp
    4c08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c0c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4c11:	74 1c                	je     4c2f <front+0x2f>
    4c13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c17:	48 8b 00             	mov    (%rax),%rax
    4c1a:	48 85 c0             	test   %rax,%rax
    4c1d:	74 10                	je     4c2f <front+0x2f>
    4c1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c23:	48 8b 00             	mov    (%rax),%rax
    4c26:	48 8b 40 08          	mov    0x8(%rax),%rax
    4c2a:	48 85 c0             	test   %rax,%rax
    4c2d:	75 07                	jne    4c36 <front+0x36>
    4c2f:	b8 00 00 00 00       	mov    $0x0,%eax
    4c34:	eb 0e                	jmp    4c44 <front+0x44>
    4c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c3a:	48 8b 00             	mov    (%rax),%rax
    4c3d:	48 8b 40 08          	mov    0x8(%rax),%rax
    4c41:	48 8b 00             	mov    (%rax),%rax
    4c44:	5d                   	pop    %rbp
    4c45:	c3                   	ret    

0000000000004c46 <back>:
    4c46:	f3 0f 1e fa          	endbr64 
    4c4a:	55                   	push   %rbp
    4c4b:	48 89 e5             	mov    %rsp,%rbp
    4c4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c52:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4c57:	74 0d                	je     4c66 <back+0x20>
    4c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c5d:	48 8b 40 08          	mov    0x8(%rax),%rax
    4c61:	48 85 c0             	test   %rax,%rax
    4c64:	75 07                	jne    4c6d <back+0x27>
    4c66:	b8 00 00 00 00       	mov    $0x0,%eax
    4c6b:	eb 0b                	jmp    4c78 <back+0x32>
    4c6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c71:	48 8b 40 08          	mov    0x8(%rax),%rax
    4c75:	48 8b 00             	mov    (%rax),%rax
    4c78:	5d                   	pop    %rbp
    4c79:	c3                   	ret    

0000000000004c7a <get>:
    4c7a:	f3 0f 1e fa          	endbr64 
    4c7e:	55                   	push   %rbp
    4c7f:	48 89 e5             	mov    %rsp,%rbp
    4c82:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c86:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4c8a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    4c8f:	74 1c                	je     4cad <get+0x33>
    4c91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c95:	48 8b 00             	mov    (%rax),%rax
    4c98:	48 85 c0             	test   %rax,%rax
    4c9b:	74 10                	je     4cad <get+0x33>
    4c9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ca1:	48 8b 00             	mov    (%rax),%rax
    4ca4:	48 8b 40 08          	mov    0x8(%rax),%rax
    4ca8:	48 85 c0             	test   %rax,%rax
    4cab:	75 07                	jne    4cb4 <get+0x3a>
    4cad:	b8 00 00 00 00       	mov    $0x0,%eax
    4cb2:	eb 50                	jmp    4d04 <get+0x8a>
    4cb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4cb8:	48 8b 00             	mov    (%rax),%rax
    4cbb:	48 8b 40 08          	mov    0x8(%rax),%rax
    4cbf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4cc3:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4cca:	00 
    4ccb:	eb 11                	jmp    4cde <get+0x64>
    4ccd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4cd1:	48 8b 40 08          	mov    0x8(%rax),%rax
    4cd5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4cd9:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    4cde:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4ce3:	74 0a                	je     4cef <get+0x75>
    4ce5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ce9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    4ced:	72 de                	jb     4ccd <get+0x53>
    4cef:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4cf4:	75 07                	jne    4cfd <get+0x83>
    4cf6:	b8 00 00 00 00       	mov    $0x0,%eax
    4cfb:	eb 07                	jmp    4d04 <get+0x8a>
    4cfd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d01:	48 8b 00             	mov    (%rax),%rax
    4d04:	5d                   	pop    %rbp
    4d05:	c3                   	ret    

0000000000004d06 <free_list>:
    4d06:	f3 0f 1e fa          	endbr64 
    4d0a:	55                   	push   %rbp
    4d0b:	48 89 e5             	mov    %rsp,%rbp
    4d0e:	48 83 ec 20          	sub    $0x20,%rsp
    4d12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4d16:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    4d1b:	0f 84 ab 00 00 00    	je     4dcc <free_list+0xc6>
    4d21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d25:	48 8b 00             	mov    (%rax),%rax
    4d28:	48 85 c0             	test   %rax,%rax
    4d2b:	0f 84 9b 00 00 00    	je     4dcc <free_list+0xc6>
    4d31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d35:	48 8b 00             	mov    (%rax),%rax
    4d38:	48 8b 00             	mov    (%rax),%rax
    4d3b:	48 8b 40 08          	mov    0x8(%rax),%rax
    4d3f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4d43:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4d4a:	00 
    4d4b:	eb 5c                	jmp    4da9 <free_list+0xa3>
    4d4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d51:	48 8b 40 08          	mov    0x8(%rax),%rax
    4d55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4d59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d5d:	48 8b 00             	mov    (%rax),%rax
    4d60:	48 85 c0             	test   %rax,%rax
    4d63:	74 30                	je     4d95 <free_list+0x8f>
    4d65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d69:	48 8b 00             	mov    (%rax),%rax
    4d6c:	48 8b 00             	mov    (%rax),%rax
    4d6f:	48 85 c0             	test   %rax,%rax
    4d72:	74 12                	je     4d86 <free_list+0x80>
    4d74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d78:	48 8b 00             	mov    (%rax),%rax
    4d7b:	48 8b 00             	mov    (%rax),%rax
    4d7e:	48 89 c7             	mov    %rax,%rdi
    4d81:	e8 ca c3 ff ff       	call   1150 <free@plt>
    4d86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d8a:	48 8b 00             	mov    (%rax),%rax
    4d8d:	48 89 c7             	mov    %rax,%rdi
    4d90:	e8 bb c3 ff ff       	call   1150 <free@plt>
    4d95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d99:	48 89 c7             	mov    %rax,%rdi
    4d9c:	e8 af c3 ff ff       	call   1150 <free@plt>
    4da1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4da5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4da9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4dae:	75 9d                	jne    4d4d <free_list+0x47>
    4db0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4db4:	48 8b 00             	mov    (%rax),%rax
    4db7:	48 89 c7             	mov    %rax,%rdi
    4dba:	e8 91 c3 ff ff       	call   1150 <free@plt>
    4dbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4dc3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4dca:	eb 01                	jmp    4dcd <free_list+0xc7>
    4dcc:	90                   	nop
    4dcd:	c9                   	leave  
    4dce:	c3                   	ret    

0000000000004dcf <list_entry_init>:
    4dcf:	f3 0f 1e fa          	endbr64 
    4dd3:	55                   	push   %rbp
    4dd4:	48 89 e5             	mov    %rsp,%rbp
    4dd7:	48 83 ec 20          	sub    $0x20,%rsp
    4ddb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ddf:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    4de4:	75 0a                	jne    4df0 <list_entry_init+0x21>
    4de6:	bf 01 00 00 00       	mov    $0x1,%edi
    4deb:	e8 50 c4 ff ff       	call   1240 <exit@plt>
    4df0:	bf 10 00 00 00       	mov    $0x10,%edi
    4df5:	e8 0c fa ff ff       	call   4806 <alloc>
    4dfa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4dfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e02:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4e09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e0d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4e14:	00 
    4e15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e19:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4e1d:	48 89 10             	mov    %rdx,(%rax)
    4e20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e24:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4e28:	48 89 50 08          	mov    %rdx,0x8(%rax)
    4e2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e30:	48 8d 15 68 fb ff ff 	lea    -0x498(%rip),%rdx        # 499f <push_back>
    4e37:	48 89 50 10          	mov    %rdx,0x10(%rax)
    4e3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e3f:	48 8d 15 2e fc ff ff 	lea    -0x3d2(%rip),%rdx        # 4a74 <push_front>
    4e46:	48 89 50 18          	mov    %rdx,0x18(%rax)
    4e4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e4e:	48 8d 15 95 fc ff ff 	lea    -0x36b(%rip),%rdx        # 4aea <pop_front>
    4e55:	48 89 50 20          	mov    %rdx,0x20(%rax)
    4e59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e5d:	48 8d 15 ff fc ff ff 	lea    -0x301(%rip),%rdx        # 4b63 <pop_back>
    4e64:	48 89 50 28          	mov    %rdx,0x28(%rax)
    4e68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e6c:	48 8d 15 8d fd ff ff 	lea    -0x273(%rip),%rdx        # 4c00 <front>
    4e73:	48 89 50 30          	mov    %rdx,0x30(%rax)
    4e77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e7b:	48 8d 15 c4 fd ff ff 	lea    -0x23c(%rip),%rdx        # 4c46 <back>
    4e82:	48 89 50 38          	mov    %rdx,0x38(%rax)
    4e86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e8a:	48 8d 15 75 fe ff ff 	lea    -0x18b(%rip),%rdx        # 4d06 <free_list>
    4e91:	48 89 50 48          	mov    %rdx,0x48(%rax)
    4e95:	90                   	nop
    4e96:	c9                   	leave  
    4e97:	c3                   	ret    

0000000000004e98 <chapt_12_demo_test>:
    4e98:	f3 0f 1e fa          	endbr64 
    4e9c:	55                   	push   %rbp
    4e9d:	48 89 e5             	mov    %rsp,%rbp
    4ea0:	48 83 ec 50          	sub    $0x50,%rsp
    4ea4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4eab:	00 00 
    4ead:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4eb1:	31 c0                	xor    %eax,%eax
    4eb3:	48 8d 05 5d 1d 00 00 	lea    0x1d5d(%rip),%rax        # 6c17 <__PRETTY_FUNCTION__.0+0x7e7>
    4eba:	48 89 c7             	mov    %rax,%rdi
    4ebd:	e8 c6 e4 ff ff       	call   3388 <print_dividing_line>
    4ec2:	b8 00 00 00 00       	mov    $0x0,%eax
    4ec7:	e8 c4 f9 ff ff       	call   4890 <new_entry>
    4ecc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4ed0:	48 8d 05 53 1d 00 00 	lea    0x1d53(%rip),%rax        # 6c2a <__PRETTY_FUNCTION__.0+0x7fa>
    4ed7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4edb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4edf:	48 89 c7             	mov    %rax,%rdi
    4ee2:	e8 a9 c2 ff ff       	call   1190 <strlen@plt>
    4ee7:	48 83 c0 01          	add    $0x1,%rax
    4eeb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4eef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4ef3:	48 8b 48 10          	mov    0x10(%rax),%rcx
    4ef7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4efb:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    4eff:	48 89 d6             	mov    %rdx,%rsi
    4f02:	48 89 c7             	mov    %rax,%rdi
    4f05:	ff d1                	call   *%rcx
    4f07:	48 8d 05 28 1d 00 00 	lea    0x1d28(%rip),%rax        # 6c36 <__PRETTY_FUNCTION__.0+0x806>
    4f0e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4f12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4f16:	48 89 c7             	mov    %rax,%rdi
    4f19:	e8 72 c2 ff ff       	call   1190 <strlen@plt>
    4f1e:	48 83 c0 01          	add    $0x1,%rax
    4f22:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4f26:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f2a:	48 8b 48 10          	mov    0x10(%rax),%rcx
    4f2e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f32:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    4f36:	48 89 d6             	mov    %rdx,%rsi
    4f39:	48 89 c7             	mov    %rax,%rdi
    4f3c:	ff d1                	call   *%rcx
    4f3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f42:	48 8b 50 30          	mov    0x30(%rax),%rdx
    4f46:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f4a:	48 89 c7             	mov    %rax,%rdi
    4f4d:	ff d2                	call   *%rdx
    4f4f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4f53:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4f57:	48 8b 00             	mov    (%rax),%rax
    4f5a:	48 89 c6             	mov    %rax,%rsi
    4f5d:	48 8d 05 e0 1c 00 00 	lea    0x1ce0(%rip),%rax        # 6c44 <__PRETTY_FUNCTION__.0+0x814>
    4f64:	48 89 c7             	mov    %rax,%rdi
    4f67:	b8 00 00 00 00       	mov    $0x0,%eax
    4f6c:	e8 3f c2 ff ff       	call   11b0 <printf@plt>
    4f71:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f75:	48 8b 50 38          	mov    0x38(%rax),%rdx
    4f79:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f7d:	48 89 c7             	mov    %rax,%rdi
    4f80:	ff d2                	call   *%rdx
    4f82:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4f86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4f8a:	48 8b 00             	mov    (%rax),%rax
    4f8d:	48 89 c6             	mov    %rax,%rsi
    4f90:	48 8d 05 ad 1c 00 00 	lea    0x1cad(%rip),%rax        # 6c44 <__PRETTY_FUNCTION__.0+0x814>
    4f97:	48 89 c7             	mov    %rax,%rdi
    4f9a:	b8 00 00 00 00       	mov    $0x0,%eax
    4f9f:	e8 0c c2 ff ff       	call   11b0 <printf@plt>
    4fa4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4fa8:	48 8b 50 20          	mov    0x20(%rax),%rdx
    4fac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4fb0:	48 89 c7             	mov    %rax,%rdi
    4fb3:	ff d2                	call   *%rdx
    4fb5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4fb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4fbd:	48 8b 00             	mov    (%rax),%rax
    4fc0:	48 89 c6             	mov    %rax,%rsi
    4fc3:	48 8d 05 7a 1c 00 00 	lea    0x1c7a(%rip),%rax        # 6c44 <__PRETTY_FUNCTION__.0+0x814>
    4fca:	48 89 c7             	mov    %rax,%rdi
    4fcd:	b8 00 00 00 00       	mov    $0x0,%eax
    4fd2:	e8 d9 c1 ff ff       	call   11b0 <printf@plt>
    4fd7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4fdb:	48 8b 50 30          	mov    0x30(%rax),%rdx
    4fdf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4fe3:	48 89 c7             	mov    %rax,%rdi
    4fe6:	ff d2                	call   *%rdx
    4fe8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4fec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ff0:	48 8b 00             	mov    (%rax),%rax
    4ff3:	48 89 c6             	mov    %rax,%rsi
    4ff6:	48 8d 05 47 1c 00 00 	lea    0x1c47(%rip),%rax        # 6c44 <__PRETTY_FUNCTION__.0+0x814>
    4ffd:	48 89 c7             	mov    %rax,%rdi
    5000:	b8 00 00 00 00       	mov    $0x0,%eax
    5005:	e8 a6 c1 ff ff       	call   11b0 <printf@plt>
    500a:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    500e:	48 89 c7             	mov    %rax,%rdi
    5011:	e8 f0 fc ff ff       	call   4d06 <free_list>
    5016:	48 8d 05 31 1c 00 00 	lea    0x1c31(%rip),%rax        # 6c4e <__PRETTY_FUNCTION__.0+0x81e>
    501d:	48 89 c2             	mov    %rax,%rdx
    5020:	48 8d 05 f0 1b 00 00 	lea    0x1bf0(%rip),%rax        # 6c17 <__PRETTY_FUNCTION__.0+0x7e7>
    5027:	48 89 c6             	mov    %rax,%rsi
    502a:	bf 02 00 00 00       	mov    $0x2,%edi
    502f:	b8 00 00 00 00       	mov    $0x0,%eax
    5034:	e8 ea e3 ff ff       	call   3423 <multi_dividing_line>
    5039:	90                   	nop
    503a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    503e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5045:	00 00 
    5047:	74 05                	je     504e <chapt_12_demo_test+0x1b6>
    5049:	e8 52 c1 ff ff       	call   11a0 <__stack_chk_fail@plt>
    504e:	c9                   	leave  
    504f:	c3                   	ret    

0000000000005050 <f_1>:
    5050:	f3 0f 1e fa          	endbr64 
    5054:	55                   	push   %rbp
    5055:	48 89 e5             	mov    %rsp,%rbp
    5058:	b8 01 00 00 00       	mov    $0x1,%eax
    505d:	5d                   	pop    %rbp
    505e:	c3                   	ret    

000000000000505f <f_2>:
    505f:	f3 0f 1e fa          	endbr64 
    5063:	55                   	push   %rbp
    5064:	48 89 e5             	mov    %rsp,%rbp
    5067:	b8 02 00 00 00       	mov    $0x2,%eax
    506c:	5d                   	pop    %rbp
    506d:	c3                   	ret    

000000000000506e <add_one>:
    506e:	f3 0f 1e fa          	endbr64 
    5072:	55                   	push   %rbp
    5073:	48 89 e5             	mov    %rsp,%rbp
    5076:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5079:	8b 45 fc             	mov    -0x4(%rbp),%eax
    507c:	83 c0 01             	add    $0x1,%eax
    507f:	5d                   	pop    %rbp
    5080:	c3                   	ret    

0000000000005081 <chapt_13_demo_run>:
    5081:	f3 0f 1e fa          	endbr64 
    5085:	55                   	push   %rbp
    5086:	48 89 e5             	mov    %rsp,%rbp
    5089:	48 83 ec 40          	sub    $0x40,%rsp
    508d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5094:	00 00 
    5096:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    509a:	31 c0                	xor    %eax,%eax
    509c:	48 8d 05 af 1b 00 00 	lea    0x1baf(%rip),%rax        # 6c52 <__PRETTY_FUNCTION__.0+0x822>
    50a3:	48 89 c7             	mov    %rax,%rdi
    50a6:	e8 dd e2 ff ff       	call   3388 <print_dividing_line>
    50ab:	48 8d 05 9e ff ff ff 	lea    -0x62(%rip),%rax        # 5050 <f_1>
    50b2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    50b6:	48 8d 05 a2 ff ff ff 	lea    -0x5e(%rip),%rax        # 505f <f_2>
    50bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    50c1:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    50c8:	eb 2b                	jmp    50f5 <chapt_13_demo_run+0x74>
    50ca:	8b 45 c0             	mov    -0x40(%rbp),%eax
    50cd:	48 98                	cltq   
    50cf:	48 8b 54 c5 e0       	mov    -0x20(%rbp,%rax,8),%rdx
    50d4:	b8 00 00 00 00       	mov    $0x0,%eax
    50d9:	ff d2                	call   *%rdx
    50db:	89 c6                	mov    %eax,%esi
    50dd:	48 8d 05 80 1b 00 00 	lea    0x1b80(%rip),%rax        # 6c64 <__PRETTY_FUNCTION__.0+0x834>
    50e4:	48 89 c7             	mov    %rax,%rdi
    50e7:	b8 00 00 00 00       	mov    $0x0,%eax
    50ec:	e8 bf c0 ff ff       	call   11b0 <printf@plt>
    50f1:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
    50f5:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    50f9:	7e cf                	jle    50ca <chapt_13_demo_run+0x49>
    50fb:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
    5102:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%rbp)
    5109:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    510d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5111:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    5118:	eb 27                	jmp    5141 <chapt_13_demo_run+0xc0>
    511a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    511e:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    5121:	48 63 d2             	movslq %edx,%rdx
    5124:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    5127:	89 c6                	mov    %eax,%esi
    5129:	48 8d 05 34 1b 00 00 	lea    0x1b34(%rip),%rax        # 6c64 <__PRETTY_FUNCTION__.0+0x834>
    5130:	48 89 c7             	mov    %rax,%rdi
    5133:	b8 00 00 00 00       	mov    $0x0,%eax
    5138:	e8 73 c0 ff ff       	call   11b0 <printf@plt>
    513d:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
    5141:	83 7d c4 01          	cmpl   $0x1,-0x3c(%rbp)
    5145:	7e d3                	jle    511a <chapt_13_demo_run+0x99>
    5147:	48 8d 05 20 ff ff ff 	lea    -0xe0(%rip),%rax        # 506e <add_one>
    514e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5152:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5156:	bf 04 00 00 00       	mov    $0x4,%edi
    515b:	ff d0                	call   *%rax
    515d:	89 c6                	mov    %eax,%esi
    515f:	48 8d 05 fe 1a 00 00 	lea    0x1afe(%rip),%rax        # 6c64 <__PRETTY_FUNCTION__.0+0x834>
    5166:	48 89 c7             	mov    %rax,%rdi
    5169:	b8 00 00 00 00       	mov    $0x0,%eax
    516e:	e8 3d c0 ff ff       	call   11b0 <printf@plt>
    5173:	48 8d 05 ee 1a 00 00 	lea    0x1aee(%rip),%rax        # 6c68 <__PRETTY_FUNCTION__.0+0x838>
    517a:	48 89 c7             	mov    %rax,%rdi
    517d:	e8 06 e2 ff ff       	call   3388 <print_dividing_line>
    5182:	90                   	nop
    5183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5187:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    518e:	00 00 
    5190:	74 05                	je     5197 <chapt_13_demo_run+0x116>
    5192:	e8 09 c0 ff ff       	call   11a0 <__stack_chk_fail@plt>
    5197:	c9                   	leave  
    5198:	c3                   	ret    

0000000000005199 <data_compare>:
    5199:	f3 0f 1e fa          	endbr64 
    519d:	55                   	push   %rbp
    519e:	48 89 e5             	mov    %rsp,%rbp
    51a1:	48 83 ec 20          	sub    $0x20,%rsp
    51a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    51a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    51ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    51b1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    51b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51b9:	48 8b 40 08          	mov    0x8(%rax),%rax
    51bd:	48 39 c2             	cmp    %rax,%rdx
    51c0:	48 0f 46 c2          	cmovbe %rdx,%rax
    51c4:	89 45 f8             	mov    %eax,-0x8(%rbp)
    51c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51cb:	48 8b 50 08          	mov    0x8(%rax),%rdx
    51cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    51d3:	48 8b 40 08          	mov    0x8(%rax),%rax
    51d7:	48 39 c2             	cmp    %rax,%rdx
    51da:	74 47                	je     5223 <data_compare+0x8a>
    51dc:	8b 45 f8             	mov    -0x8(%rbp),%eax
    51df:	48 63 d0             	movslq %eax,%rdx
    51e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    51e6:	48 8b 08             	mov    (%rax),%rcx
    51e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51ed:	48 8b 00             	mov    (%rax),%rax
    51f0:	48 89 ce             	mov    %rcx,%rsi
    51f3:	48 89 c7             	mov    %rax,%rdi
    51f6:	e8 d5 bf ff ff       	call   11d0 <memcmp@plt>
    51fb:	89 45 fc             	mov    %eax,-0x4(%rbp)
    51fe:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    5202:	74 05                	je     5209 <data_compare+0x70>
    5204:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5207:	eb 1a                	jmp    5223 <data_compare+0x8a>
    5209:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    520d:	48 8b 40 08          	mov    0x8(%rax),%rax
    5211:	89 c1                	mov    %eax,%ecx
    5213:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5217:	48 8b 40 08          	mov    0x8(%rax),%rax
    521b:	89 c2                	mov    %eax,%edx
    521d:	89 c8                	mov    %ecx,%eax
    521f:	29 d0                	sub    %edx,%eax
    5221:	eb 00                	jmp    5223 <data_compare+0x8a>
    5223:	c9                   	leave  
    5224:	c3                   	ret    

0000000000005225 <cpy_data>:
    5225:	f3 0f 1e fa          	endbr64 
    5229:	55                   	push   %rbp
    522a:	48 89 e5             	mov    %rsp,%rbp
    522d:	48 83 ec 20          	sub    $0x20,%rsp
    5231:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5235:	bf 18 00 00 00       	mov    $0x18,%edi
    523a:	e8 c1 bf ff ff       	call   1200 <malloc@plt>
    523f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5243:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5247:	48 8b 40 08          	mov    0x8(%rax),%rax
    524b:	48 89 c7             	mov    %rax,%rdi
    524e:	e8 ad bf ff ff       	call   1200 <malloc@plt>
    5253:	48 89 c2             	mov    %rax,%rdx
    5256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    525a:	48 89 10             	mov    %rdx,(%rax)
    525d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5261:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5265:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5269:	48 8b 08             	mov    (%rax),%rcx
    526c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5270:	48 8b 00             	mov    (%rax),%rax
    5273:	48 89 ce             	mov    %rcx,%rsi
    5276:	48 89 c7             	mov    %rax,%rdi
    5279:	e8 72 bf ff ff       	call   11f0 <memcpy@plt>
    527e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5282:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    528a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    528e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5292:	c9                   	leave  
    5293:	c3                   	ret    

0000000000005294 <macro_test>:
    5294:	f3 0f 1e fa          	endbr64 
    5298:	55                   	push   %rbp
    5299:	48 89 e5             	mov    %rsp,%rbp
    529c:	48 83 ec 20          	sub    $0x20,%rsp
    52a0:	48 8d 05 c9 19 00 00 	lea    0x19c9(%rip),%rax        # 6c70 <__PRETTY_FUNCTION__.0+0x840>
    52a7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    52ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52af:	48 89 c6             	mov    %rax,%rsi
    52b2:	48 8d 05 c7 19 00 00 	lea    0x19c7(%rip),%rax        # 6c80 <__PRETTY_FUNCTION__.0+0x850>
    52b9:	48 89 c7             	mov    %rax,%rdi
    52bc:	b8 00 00 00 00       	mov    $0x0,%eax
    52c1:	e8 ea be ff ff       	call   11b0 <printf@plt>
    52c6:	c7 45 e0 0b 00 00 00 	movl   $0xb,-0x20(%rbp)
    52cd:	8b 45 e0             	mov    -0x20(%rbp),%eax
    52d0:	89 c6                	mov    %eax,%esi
    52d2:	48 8d 05 be 19 00 00 	lea    0x19be(%rip),%rax        # 6c97 <__PRETTY_FUNCTION__.0+0x867>
    52d9:	48 89 c7             	mov    %rax,%rdi
    52dc:	b8 00 00 00 00       	mov    $0x0,%eax
    52e1:	e8 ca be ff ff       	call   11b0 <printf@plt>
    52e6:	48 8d 05 bc 19 00 00 	lea    0x19bc(%rip),%rax        # 6ca9 <__PRETTY_FUNCTION__.0+0x879>
    52ed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    52f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52f5:	48 89 c6             	mov    %rax,%rsi
    52f8:	48 8d 05 b6 19 00 00 	lea    0x19b6(%rip),%rax        # 6cb5 <__PRETTY_FUNCTION__.0+0x885>
    52ff:	48 89 c7             	mov    %rax,%rdi
    5302:	b8 00 00 00 00       	mov    $0x0,%eax
    5307:	e8 a4 be ff ff       	call   11b0 <printf@plt>
    530c:	48 8d 05 b4 19 00 00 	lea    0x19b4(%rip),%rax        # 6cc7 <__PRETTY_FUNCTION__.0+0x897>
    5313:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    531b:	48 89 c6             	mov    %rax,%rsi
    531e:	48 8d 05 ab 19 00 00 	lea    0x19ab(%rip),%rax        # 6cd0 <__PRETTY_FUNCTION__.0+0x8a0>
    5325:	48 89 c7             	mov    %rax,%rdi
    5328:	b8 00 00 00 00       	mov    $0x0,%eax
    532d:	e8 7e be ff ff       	call   11b0 <printf@plt>
    5332:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
    5339:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    533c:	89 c6                	mov    %eax,%esi
    533e:	48 8d 05 9d 19 00 00 	lea    0x199d(%rip),%rax        # 6ce2 <__PRETTY_FUNCTION__.0+0x8b2>
    5345:	48 89 c7             	mov    %rax,%rdi
    5348:	b8 00 00 00 00       	mov    $0x0,%eax
    534d:	e8 5e be ff ff       	call   11b0 <printf@plt>
    5352:	90                   	nop
    5353:	c9                   	leave  
    5354:	c3                   	ret    

0000000000005355 <square_test>:
    5355:	f3 0f 1e fa          	endbr64 
    5359:	55                   	push   %rbp
    535a:	48 89 e5             	mov    %rsp,%rbp
    535d:	48 83 ec 10          	sub    $0x10,%rsp
    5361:	f2 0f 10 05 e7 19 00 	movsd  0x19e7(%rip),%xmm0        # 6d50 <__PRETTY_FUNCTION__.0+0x920>
    5368:	00 
    5369:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    536e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5372:	f2 0f 10 05 de 19 00 	movsd  0x19de(%rip),%xmm0        # 6d58 <__PRETTY_FUNCTION__.0+0x928>
    5379:	00 
    537a:	66 48 0f 6e d8       	movq   %rax,%xmm3
    537f:	f2 0f 58 c3          	addsd  %xmm3,%xmm0
    5383:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    5388:	66 48 0f 6e c0       	movq   %rax,%xmm0
    538d:	48 8d 05 5c 19 00 00 	lea    0x195c(%rip),%rax        # 6cf0 <__PRETTY_FUNCTION__.0+0x8c0>
    5394:	48 89 c7             	mov    %rax,%rdi
    5397:	b8 01 00 00 00       	mov    $0x1,%eax
    539c:	e8 0f be ff ff       	call   11b0 <printf@plt>
    53a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    53a5:	f2 0f 10 05 ab 19 00 	movsd  0x19ab(%rip),%xmm0        # 6d58 <__PRETTY_FUNCTION__.0+0x928>
    53ac:	00 
    53ad:	66 48 0f 6e e0       	movq   %rax,%xmm4
    53b2:	f2 0f 58 c4          	addsd  %xmm4,%xmm0
    53b6:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    53bb:	66 48 0f 6e c0       	movq   %rax,%xmm0
    53c0:	48 8d 05 29 19 00 00 	lea    0x1929(%rip),%rax        # 6cf0 <__PRETTY_FUNCTION__.0+0x8c0>
    53c7:	48 89 c7             	mov    %rax,%rdi
    53ca:	b8 01 00 00 00       	mov    $0x1,%eax
    53cf:	e8 dc bd ff ff       	call   11b0 <printf@plt>
    53d4:	f2 0f 10 05 74 19 00 	movsd  0x1974(%rip),%xmm0        # 6d50 <__PRETTY_FUNCTION__.0+0x920>
    53db:	00 
    53dc:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    53e1:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
    53e6:	f2 0f 10 05 6a 19 00 	movsd  0x196a(%rip),%xmm0        # 6d58 <__PRETTY_FUNCTION__.0+0x928>
    53ed:	00 
    53ee:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    53f2:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    53f7:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    53fc:	f2 0f 10 15 54 19 00 	movsd  0x1954(%rip),%xmm2        # 6d58 <__PRETTY_FUNCTION__.0+0x928>
    5403:	00 
    5404:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
    5408:	f2 0f 11 55 f0       	movsd  %xmm2,-0x10(%rbp)
    540d:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    5411:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    5416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    541a:	66 48 0f 6e c0       	movq   %rax,%xmm0
    541f:	48 8d 05 d1 18 00 00 	lea    0x18d1(%rip),%rax        # 6cf7 <__PRETTY_FUNCTION__.0+0x8c7>
    5426:	48 89 c7             	mov    %rax,%rdi
    5429:	b8 01 00 00 00       	mov    $0x1,%eax
    542e:	e8 7d bd ff ff       	call   11b0 <printf@plt>
    5433:	48 8d 05 c4 18 00 00 	lea    0x18c4(%rip),%rax        # 6cfe <__PRETTY_FUNCTION__.0+0x8ce>
    543a:	48 89 c7             	mov    %rax,%rdi
    543d:	e8 46 df ff ff       	call   3388 <print_dividing_line>
    5442:	f2 0f 10 05 06 19 00 	movsd  0x1906(%rip),%xmm0        # 6d50 <__PRETTY_FUNCTION__.0+0x920>
    5449:	00 
    544a:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    544f:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    5454:	f2 0f 10 0d fc 18 00 	movsd  0x18fc(%rip),%xmm1        # 6d58 <__PRETTY_FUNCTION__.0+0x928>
    545b:	00 
    545c:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    5460:	f2 0f 11 4d f0       	movsd  %xmm1,-0x10(%rbp)
    5465:	f2 0f 10 55 f0       	movsd  -0x10(%rbp),%xmm2
    546a:	f2 0f 10 0d e6 18 00 	movsd  0x18e6(%rip),%xmm1        # 6d58 <__PRETTY_FUNCTION__.0+0x928>
    5471:	00 
    5472:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    5476:	f2 0f 11 4d f0       	movsd  %xmm1,-0x10(%rbp)
    547b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    547f:	66 0f 28 c8          	movapd %xmm0,%xmm1
    5483:	66 48 0f 6e c0       	movq   %rax,%xmm0
    5488:	48 8d 05 70 18 00 00 	lea    0x1870(%rip),%rax        # 6cff <__PRETTY_FUNCTION__.0+0x8cf>
    548f:	48 89 c7             	mov    %rax,%rdi
    5492:	b8 02 00 00 00       	mov    $0x2,%eax
    5497:	e8 14 bd ff ff       	call   11b0 <printf@plt>
    549c:	f2 0f 10 05 ac 18 00 	movsd  0x18ac(%rip),%xmm0        # 6d50 <__PRETTY_FUNCTION__.0+0x920>
    54a3:	00 
    54a4:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    54a9:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
    54ae:	f2 0f 10 05 a2 18 00 	movsd  0x18a2(%rip),%xmm0        # 6d58 <__PRETTY_FUNCTION__.0+0x928>
    54b5:	00 
    54b6:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    54ba:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    54bf:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    54c4:	f2 0f 10 0d 8c 18 00 	movsd  0x188c(%rip),%xmm1        # 6d58 <__PRETTY_FUNCTION__.0+0x928>
    54cb:	00 
    54cc:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    54d0:	f2 0f 11 4d f0       	movsd  %xmm1,-0x10(%rbp)
    54d5:	f2 0f 10 4d f0       	movsd  -0x10(%rbp),%xmm1
    54da:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    54de:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    54e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54e7:	66 48 0f 6e c0       	movq   %rax,%xmm0
    54ec:	48 8d 05 04 18 00 00 	lea    0x1804(%rip),%rax        # 6cf7 <__PRETTY_FUNCTION__.0+0x8c7>
    54f3:	48 89 c7             	mov    %rax,%rdi
    54f6:	b8 01 00 00 00       	mov    $0x1,%eax
    54fb:	e8 b0 bc ff ff       	call   11b0 <printf@plt>
    5500:	90                   	nop
    5501:	c9                   	leave  
    5502:	c3                   	ret    

0000000000005503 <print_test>:
    5503:	f3 0f 1e fa          	endbr64 
    5507:	55                   	push   %rbp
    5508:	48 89 e5             	mov    %rsp,%rbp
    550b:	b9 0b 00 00 00       	mov    $0xb,%ecx
    5510:	ba 14 00 00 00       	mov    $0x14,%edx
    5515:	be 0a 00 00 00       	mov    $0xa,%esi
    551a:	48 8d 05 ef 17 00 00 	lea    0x17ef(%rip),%rax        # 6d10 <__PRETTY_FUNCTION__.0+0x8e0>
    5521:	48 89 c7             	mov    %rax,%rdi
    5524:	b8 00 00 00 00       	mov    $0x0,%eax
    5529:	e8 82 bc ff ff       	call   11b0 <printf@plt>
    552e:	90                   	nop
    552f:	5d                   	pop    %rbp
    5530:	c3                   	ret    

0000000000005531 <chapt_14_demo_run>:
    5531:	f3 0f 1e fa          	endbr64 
    5535:	55                   	push   %rbp
    5536:	48 89 e5             	mov    %rsp,%rbp
    5539:	48 8d 05 fb 17 00 00 	lea    0x17fb(%rip),%rax        # 6d3b <__PRETTY_FUNCTION__.0+0x90b>
    5540:	48 89 c7             	mov    %rax,%rdi
    5543:	e8 40 de ff ff       	call   3388 <print_dividing_line>
    5548:	e8 47 fd ff ff       	call   5294 <macro_test>
    554d:	e8 03 fe ff ff       	call   5355 <square_test>
    5552:	e8 ac ff ff ff       	call   5503 <print_test>
    5557:	48 8d 05 a0 17 00 00 	lea    0x17a0(%rip),%rax        # 6cfe <__PRETTY_FUNCTION__.0+0x8ce>
    555e:	48 89 c7             	mov    %rax,%rdi
    5561:	e8 22 de ff ff       	call   3388 <print_dividing_line>
    5566:	90                   	nop
    5567:	5d                   	pop    %rbp
    5568:	c3                   	ret    

Disassembly of section .fini:

000000000000556c <_fini>:
    556c:	f3 0f 1e fa          	endbr64 
    5570:	48 83 ec 08          	sub    $0x8,%rsp
    5574:	48 83 c4 08          	add    $0x8,%rsp
    5578:	c3                   	ret    
